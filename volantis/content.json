{"meta":{"title":"黑石博客 - Hexo博客","subtitle":null,"description":"黑石博客，草根博客站长Heson的Hexo博客站点，专注分享Hexo学习心得。","author":"Heson","url":"https://www.heson10.com/volantis","root":"/volantis/"},"pages":[{"title":"","date":"2020-09-06T14:15:13.452Z","updated":"2020-09-06T14:15:13.452Z","comments":true,"path":"404.html","permalink":"https://www.heson10.com/volantis/404.html","excerpt":"","text":"404页面 - 黑石博客 黑石博客 404 页面丢失了,正在光速跳转中... Oooooops… 最近黑石博客换了域名，从heson.xyz换到 www.heson10.com。 setTimeout(\"javascript:location.href='https://www.heson10.com'\", 5000); $(function(){ var wait= 5; time(wait); }); function time(wait) { $(\"#time\").html(\"\"+wait+\"\"); wait--; setTimeout(function() { time(wait); }, 1000); }"},{"title":"","date":"2020-09-06T14:15:08.832Z","updated":"2020-09-06T14:15:08.832Z","comments":true,"path":"style.css","permalink":"https://www.heson10.com/volantis/style.css","excerpt":"","text":"@-webkit-keyframes appear{ from{ opacity: 0; } to { opacity: 1; } } @-webkit-keyframes headline_appear_animation{ from{ opacity: 0; } 25% { opacity: 0; } to { opacity: 1; } } @-webkit-keyframes contentappear{ from { -webkit-transform: scale(0); opacity: 0; } 50% { -webkit-transform: scale(0.5); opacity: 0; } to { -webkit-transform: scale(1); opacity: 1; } } @-moz-keyframes appear{ from{ opacity: 0; } to { opacity: 1; } } @-moz-keyframes headline_appear_animation{ from{ opacity: 0; } 25% { opacity: 0; } to { opacity: 1; } } @-moz-keyframes contentappear{ from { -moz-transform: scale(0); opacity: 0; } 50% { -moz-transform: scale(0.5); opacity: 0; } to { -moz-transform: scale(1); opacity: 1; } } * { margin: 0; padding: 0; } /*################ Sliding and appearing animation for the 404 page. Works in webkit browsers and mozilla firefox.*/ a:active{ position: relative; top: 1px; } html{ background: url(https://cdn.jsdelivr.net/gh/heson525/heson525@v1.0/025.jpg) no-repeat center center fixed; /*Image for the full size image background. If you want to have a color as a background, just remove the complete html{} style and uncomment the last line in the body{}*/ -webkit-background-size: cover; -moz-background-size: cover; -o-background-size: cover; background-size: cover; /*CSS3 for the fullscreen image background*/ } body{ font-family: 'Helvetica Neue'; width: auto; margin: 0 auto 100px auto; /* background: #C9D0F5 /*373A4D*!/;*/ } .header { position: fixed; top: 0; width: 100%; height: 55px; padding: 0 0 0 10px; color: #fff; background-image: -moz-linear-gradient(top, rgba(85, 85, 85, 0.7), rgba(0,0,0, 1)); background-image: -o-linear-gradient(top, rgba(85, 85, 85, 0.7), rgba(0,0,0, 1)); background-image: -webkit-linear-gradient(top, rgba(85, 85, 85, 0.7), rgba(0,0,0,1)); background-image: linear-gradient(top, rgba(85, 85, 85, 0.7), rgba(0,0,0, 1)); border-top: 1px solid #000; box-shadow: inset 0px 1px rgba(255, 255, 255, 0.4), 0px 0px 13px #000000; z-index: 99; -webkit-animation: 1s appear; -moz-animation: 1s appear; } p.error { color: #2b2b2b; text-shadow: #fff 0 1px 0; text-align:center; font:900 25em helvetica neue; -webkit-animation: 2s headline_appear_animation; -moz-animation: 2s headline_appear_animation; } .content { margin: auto; padding: 30px 40px 40px 40px; width: 570px; color: #fff; -webkit-animation: 2s contentappear; -moz-animation: 2s contentappear; background-image: -moz-linear-gradient(top, rgba(85, 85, 85, 0.7), rgba(0,0,0, 1)); background-image: -o-linear-gradient(top, rgba(85, 85, 85, 0.7), rgba(0,0,0, 1)); background-image: -webkit-linear-gradient(top, rgba(85, 85, 85, 0.7), rgba(0,0,0,1)); background-image: linear-gradient(top, rgba(85, 85, 85, 0.7), rgba(0,0,0, 1)); border: 1px solid #000; box-shadow: inset 0px 1px rgba(255, 255, 255, 0.4), 0 3px 8px #000000; border-radius: 6px; font: 16px; line-height: 25px; font-weight: 300; text-shadow: #000 0 1px 0; } .content h2{ text-transform: uppercase; text-align: center; padding-bottom: 20px; } form { height: 40px; } .inputform { font: 12px; border: none; padding: 10px; width: 300px; margin: 15px 0 0 75px; } .button { width: 100px; margin-top: 1px; height: 33px; border: none; text-shadow: #fff 0 1px 0; background-image: -moz-linear-gradient(top, #ffffff, #aaa); background-image: -o-linear-gradient(top, #ffffff, #aaa); background-image: -webkit-linear-gradient(top, #ffffff, #aaa); background-image: linear-gradient(top, #ffffff, #aaa); box-shadow: inset 0px 1px rgba(255, 255, 255, 1); } .button:hover { background-image: -moz-linear-gradient(top, #ffffff, #ccc); background-image: -o-linear-gradient(top, #ffffff, #ccc); background-image: -webkit-linear-gradient(top, #ffffff, #ccc); background-image: linear-gradient(top, #ffffff, #ccc); cursor: pointer; } .button:active { background-image: -moz-linear-gradient(top, #ccc, #fff); background-image: -o-linear-gradient(top, #ccc, #fff); background-image: -webkit-linear-gradient(top, #ccc, #fff); background-image: linear-gradient(top, #ccc, #fff); } p.links { margin: 24px 0 0 0; text-align: center; } p.links a { color: #fff; margin-left: 15px; margin-right: 15px; } p.links a:hover { text-decoration: none; text-shadow: #fff 0 0 5px; -webkit-transition: all ease-in 0.3s; -moz-transition: all ease-in 0.3s; }"},{"title":"","date":"2020-07-22T10:56:43.000Z","updated":"2020-09-25T05:20:02.322Z","comments":true,"path":"about/index.html","permalink":"https://www.heson10.com/volantis/about/index.html","excerpt":"","text":"关于我 | About Me 简介📝 一个生于90年代，爱好玩博客的大叔。Hexo是新欢，Wordpress是旧爱。 熟悉HTML、CSS、JS（jQuery）、PHP以及Python。 爱好运动，🏀篮球是最爱。 关于当前小目标，做个hexo模板！ 大目标，建站10年。 See More 联系方式微信：hey10cn QQ: 251261362 QQ交流群: 924812033 E-mail: fc2c9b067f65c9e2d7057ba797f7cfca (md5加密) 客观评价 建站历程📆 2020年 08月 购买heson10.com域名，黑石博客正式上线 07月 购买heson.xyz域名，建立Hexo博客 2013年 09月域名空间没续费，WP博客倒闭…… 2012年 07月 因工作原因，博客开始荒废…… 05月 制作Memo情侣主题 2011年 10月 制作Love-is免费情侣主题 03月 博客PR上升到3，情侣博客关键字Google排名第一 2010年 10月 制作Sweat-Cloud收费情侣主题 05月 制作YOYOCICI免费情侣主题 2009年 09月 建立第一个WordPress情侣博客 08月 购买域名 yyheson.com 版权声明博客内的所有原创内容（包括但不限于文章、图像等）除特别声明外均采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议，任何人都可以自由传播，但不得用于商用且必须署名并以相同方式分享。 本站部分内容转载于网络，有出处的已在文中署名作者并附加原文链接，出处已不可寻的皆已标注来源于网络，若您认为本博客有部分内容侵犯了您的版权，请电邮告知，我将认真处理。 免责声明本博客提供的所有内容仅供学习、分享与交流，并且不保证内容的正确性。通过使用本站内容随之而来的风险与本站无关。当使用本站时，代表你已接受本站的免责声明和隐私原则等条款。 隐私原则本站内目前涉及到浏览者隐私的只有一个地方，就是留言区（文章评论）。当你留言时，你的电子邮箱、Cookies信息和IPv4/IPv6地址都会被记录。这些信息仅为了改进我们的网站质量和可能的交流沟通。我们不会将这些信息进行展示、出租或出售给任何人。但以下情况除外： 只有透露您的个人资料，才能提供您所要求的产品和服务； 我们需要听从法庭传票、法律命令或遵循法律程序； 我们发现您违反了本站已发布的条款或声明。"},{"title":"所有分类","date":"2020-07-13T04:39:04.000Z","updated":"2020-09-23T12:01:52.729Z","comments":true,"path":"categories/index.html","permalink":"https://www.heson10.com/volantis/categories/index.html","excerpt":"","text":""},{"title":"","date":"2020-09-25T05:14:39.845Z","updated":"2020-09-25T05:14:39.845Z","comments":true,"path":"links/index.html","permalink":"https://www.heson10.com/volantis/links/index.html","excerpt":"","text":"我 的 好 友 友链更新通知 由于近期对友链系统进行了重做，原链接失效的小伙伴请按照下方交换友链的步骤进行填写。在新的友链系统中，您随时可以对自己的信息进行修改而无需等待博主更新。 如何申请本站友情链接 第一步：将本站链接添加至贵站 名称：黑石博客链接：https://www.heson10.com头像：https://cdn.jsdelivr.net/gh/heson525/pic@master/pic/avatar03.png网站截图：https://7.dusays.com/2020/09/12/8afce702a9a04.png描述：人生在勤，不索何获。标签：Hexo, 折腾, 生活背景颜色（按需）：#c61a26文字颜色（按需）：#fefefe 第二步：前往码云 https://gitee.com/heson525_admin/links/issues ，新建 Issue 按照格式填写并提交 { &quot;title&quot;: &quot;&quot;, &quot;avatar&quot;: &quot;&quot;, &quot;screenshot&quot;: &quot;&quot;, &quot;url&quot;: &quot;&quot;, &quot;description&quot;: &quot;&quot;, &quot;group&quot;: &quot;朋友们&quot;}为了提高图片加载速度，建议优化图片尺寸：打开 压缩图 上传自己的截图，将图片的高度调整到 360px 后下载。将压缩后的图片上传到 去不图床 并使用此图片链接作为截图链接。 第三步：评论区留言，待博主审核。 评论区记得填写正确的邮箱，博主微信会收到回复。审核时间：不超过5分钟。 如何更新自己的博客链接 如果是自己创建的 issue ，可以自己修改。 如果是管理员创建的，请自己重新创建一份，然后让管理员删掉旧的。"},{"title":"","date":"2020-09-16T15:24:32.572Z","updated":"2020-09-16T15:24:32.572Z","comments":true,"path":"guestbook/index.html","permalink":"https://www.heson10.com/volantis/guestbook/index.html","excerpt":"","text":"留 言 板 欢迎灌水！"},{"title":"","date":"2020-09-20T10:56:43.000Z","updated":"2020-09-25T05:49:27.958Z","comments":true,"path":"bb/index.html","permalink":"https://www.heson10.com/volantis/bb/index.html","excerpt":"","text":"黑石说 👉🏼此说说通过📱手机微信发出，主要记录黑石碎片化思考和动态。📑 此页面最多显示10条说说，完整版请移步👉🏼：https://bb.heson10.com"},{"title":"所有标签","date":"2020-09-23T12:02:08.333Z","updated":"2020-09-23T12:02:08.333Z","comments":false,"path":"tags/index.html","permalink":"https://www.heson10.com/volantis/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"一款清新萌系轻量的HEXO主题SweetCloud蜜云微主题","slug":"hexo-theme-sweetcloud","date":"2020-11-11T06:22:32.000Z","updated":"2020-11-14T01:26:40.805Z","comments":true,"path":"posts/64095.html","link":"","permalink":"https://www.heson10.com/volantis/posts/64095.html","excerpt":"","text":"各位光棍节快乐！ 踩着光棍节这个点，今天发一个虐狗hexo主题: Sweet-Cloud ，中文名：蜜云。 💕Sweet-Cloud 蜜云微主题一款hexo情侣微主题。后端为Leancloud。 为方便你的另一半操作博客，采用微信发文，暂支持文字和外链图片。 源码地址: https://github.com/heson525/hexo-theme-sweetcloud 演示站: https://www.heson10.com/lovebb 🎁主题特点 界面清新可爱 轻量（单页） 发文方便，适合另一半（微信发文） 方便配置 适合虐狗 🔧To Do 修改，界面样式微调 增加, 相恋时间 增加，首页cover 增加，发文timeline加头像 增加，恋爱清单 修改，因为萌系字体 （11/11 修改为站酷快乐字体） 增加，fancybox显示图片 增加，祝福墙（留言） 还需要什么功能，欢迎各位来提。 ✍食用方法下载主题修改根目录配置文件theme: sweetcloud，并下载主题： git clone https://github.com/heson525/hexo-theme-sweetcloud.git themes/sweetcloud 配置主题前准备Leancloud创建存储空间 登陆leancloud创建应用（国区版本,绑定api的域名需备案 https://www.leancloud.cn/ ，国际版本：https://leancloud.app/ 有共享api，不需要备案域名，效果一样 ） 进入应用后，点击创建 Class 将「 Class 名称」命名为 content 点击刚刚创建的content Class，点击添加列并创建名称为content的列，类型为String，注意列注释也要填写（随意填） 记录appid，masterkey，api域名 因为我用的是国区版本，api绑定域名需要备案域名。 国际版leancloud不需要绑定域名，api地址为： https://appid前八位.api.lncldglobal.com 微信公众号绑定关注下面公众号（微信发文）： 按照公众号的提示的命令进行绑定： //bindCurrentUser:你的AppID,你的MasterKey,https://你的api域名 完成后会提示绑定成功。 配置主题最主要的是填下leancloud的一些参数，男生，女生可在同一leancloud账号下，建立2个应用（如下图）： 意思是男生女生的appid、appkey要按照上面的方法，在Leancloud上创建2次存储空间 主题配置如图： 其他一些配置，参考注释。 如有主站博客，建议把此页面作为分站例如： 方法教程见：https://www.heson10.com/posts/46324.html 🎀用本主题的DEMO https://www.heson10.com/lovebb 📑结束语最近此主题刚上线，更新可能会比较频繁。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"主题","slug":"主题","permalink":"https://www.heson10.com/volantis/tags/%E4%B8%BB%E9%A2%98/"},{"name":"蜜云","slug":"蜜云","permalink":"https://www.heson10.com/volantis/tags/%E8%9C%9C%E4%BA%91/"},{"name":"sweetcloud","slug":"sweetcloud","permalink":"https://www.heson10.com/volantis/tags/sweetcloud/"},{"name":"情侣","slug":"情侣","permalink":"https://www.heson10.com/volantis/tags/%E6%83%85%E4%BE%A3/"},{"name":"哔哔","slug":"哔哔","permalink":"https://www.heson10.com/volantis/tags/%E5%93%94%E5%93%94/"}]},{"title":"Volantis-heson Hexo主题懒人版","slug":"volantis-heson","date":"2020-11-09T09:09:34.000Z","updated":"2020-11-10T05:10:32.864Z","comments":true,"path":"posts/3882.html","link":"","permalink":"https://www.heson10.com/volantis/posts/3882.html","excerpt":"","text":"鸣谢A Wonderful Theme for Hexo ：https://github.com/volantis-x/hexo-theme-volantis/ 本volantis懒人版基于volantis 4.0 魔改而成。 演示站https://www.heson10.com/volantis 效果图： 为什么创建这个？因为满足部分同志不愿修改主题的心愿，就把我之前用的魔改volantis放出来。 相对于volantis修改的功能 侧边栏左侧 上升气泡 热门文章（手动加） 商用版本fontawesome（很全） 集成手机微信发送短博文功能（独家适配），效果如：https://www.heson10.com/volantis/bb github底部样式（默认关闭，配置文件可修改） 彩虹标签云 谷歌思源宋体字体（快速异步加载） 下载主题git clone https://github.com/heson525/volantis-heson.git themes/volantis-heson 更换主题打开根目录_config.yml文件 theme: volantis-heson 安装依赖改根目录下的package.json文件 &#123; &quot;name&quot;: &quot;hexo-site&quot;, &quot;version&quot;: &quot;0.0.0&quot;, &quot;private&quot;: true, &quot;scripts&quot;: &#123; &quot;build&quot;: &quot;hexo generate&quot;, &quot;clean&quot;: &quot;hexo clean&quot;, &quot;deploy&quot;: &quot;hexo deploy&quot;, &quot;server&quot;: &quot;hexo server&quot; &#125;, &quot;hexo&quot;: &#123; &quot;version&quot;: &quot;5.1.1&quot; &#125;, &quot;dependencies&quot;: &#123; &quot;hexo&quot;: &quot;^5.1.1&quot;, &quot;hexo-abbrlink&quot;: &quot;^2.2.1&quot;, &quot;hexo-deployer-git&quot;: &quot;^2.1.0&quot;, &quot;hexo-generator-archive&quot;: &quot;^1.0.0&quot;, &quot;hexo-generator-category&quot;: &quot;^1.0.0&quot;, &quot;hexo-generator-feed&quot;: &quot;^3.0.0&quot;, &quot;hexo-generator-index&quot;: &quot;^2.0.0&quot;, &quot;hexo-generator-json-content&quot;: &quot;^4.2.3&quot;, &quot;hexo-generator-tag&quot;: &quot;^1.0.0&quot;, &quot;hexo-related-popular-posts&quot;: &quot;^5.0.1&quot;, &quot;hexo-renderer-ejs&quot;: &quot;^1.0.0&quot;, &quot;hexo-renderer-marked&quot;: &quot;^3.0.0&quot;, &quot;hexo-renderer-stylus&quot;: &quot;^2.0.0&quot;, &quot;hexo-server&quot;: &quot;^2.0.0&quot;, &quot;hexo-wordcount&quot;: &quot;^6.0.1&quot; &#125; &#125; 然后输入下面命令，本地预览 npm install &amp;&amp; hexo cl &amp;&amp; hexo g &amp;&amp; hexo s 修改主题配置在主题目录的config.yml中找到☆符号 这些都是必须修改的项目，在修改的内容在里面已经说明 FAQQ1:首页文章的头图怎么添加？ A1:在md文章头部的frontmater里面添加headimg: 链接地址 Q2:怎么添加分类、标签和说说页面？ A2:输入命令： hexo new page categories hexo new page tags hexo new page bb hexo new page links hexo new page guestbook 然后分别在生成的两个index.md里的frontmater里面添加layput: category和layput: tag和layput: bb和layput: friends 命令 对应模板 hexo new page categories layput: category hexo new page tags layput: tag hexo new page bb layput: bb hexo new page links layput: friends hexo new page guestbook 无 Q3:怎么调用友情链接？ A3:我用的是gitee动态调用，这样的好处是：可以直接申请审核，不用动代码加友情链接。 我得调用代码： &#123;% issues sites | api=https://gitee.com/api/v5/repos/heson525_admin/links/issues?sort=created&direction=asc&labels=active&state=open&page=1&per_page=100 | group=group:技术大佬,朋友们 %&#125; 其中api要换成自己的gitee链接，我这个链接中heson525_admin是我的用户名，links是仓库名后面的group是分组，active是判断是否显示的标签。 Q4:默认安装了hexo-abbrlink固定链接插件，怎么设置固定链接？ A4:在根目录配置文件中，加入以下代码(注意要删除之前的permalink:xxxx )： #设置永久链接 permalink: posts/:abbrlink.html # 此处可以自己设置，也可以直接使用 :/abbrlink abbrlink: alg: crc16 #算法： crc16(default) and crc32 rep: dec #进制： dec(default) and hex 待完善，不懂请留言 其他使用本主题的DEMO https://yyqx.xyz 影视前线 https://guzeng41.github.io/ guzeng41的笔记 虚位以待（留言告知） 源码下载https://github.com/heson525/volantis-heson 有任何问题欢迎留言。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"主题","slug":"主题","permalink":"https://www.heson10.com/volantis/tags/%E4%B8%BB%E9%A2%98/"}]},{"title":"Typecho-Cuteen主题哔哔适配","slug":"typecho-cuteen-bb","date":"2020-10-30T14:43:29.000Z","updated":"2020-10-30T16:06:43.065Z","comments":true,"path":"posts/58339.html","link":"","permalink":"https://www.heson10.com/volantis/posts/58339.html","excerpt":"","text":"近日，cuteen主题作者那有人留言： 很好，又来活了。二话不说，开干😎 关于Typecho适配哔哔今天（10月30日）完成基本功能适配，在hexo哔哔版本的基础上，新增了当前页面直接ajax加载未显示的哔哔。可能有小伙伴问了，为什么hexo不用这个功能？因为和valine评论系统的api冲突了，暂时没能找出初始两个AV的方法。😅 效果页面：https://typecho.heson10.com/index.php/14.html 已知bug🎃： 在Typecho-Cuteen主题中开启了pjax功能的小伙伴，从其他页面进入bb会不显示。刷新后显示。 关掉pjax功能不存在这个情况。（30日晚上加了个班，把bug修复了，下面会说） 食用方法准备工作Leancloud创建存储空间 登陆leancloud创建应用（国区版本,绑定api的域名需备案 https://www.leancloud.cn/ ，国际版本：https://leancloud.app/ 有共享api，不需要备案域名，效果一样 ） 进入应用后，点击创建 Class 将「 Class 名称」命名为 content 点击刚刚创建的content Class，点击添加列并创建名称为content的列，类型为String，注意列注释也要填写（随意填） 记录appid，masterkey，api域名 因为我用的是国区版本，api绑定域名需要备案域名。 国际版leancloud不需要绑定域名，api地址为： appid前八位.api.lncldglobal.com 微信公众号绑定关注下面公众号： 按照公众号的提示的命令进行绑定： //bindCurrentUser:你的AppID,你的MasterKey,https://你的api域名 完成后会提示绑定成功。 创建bb.php模板在主题目录\\usr\\themes\\Cuteen下新建bb.php模板，加入以下代码： &lt;?php /** * 哔哔页面 * * @package custom * 黑石修改 * https://www.heson10.com */ ?&gt; &lt;?php $this-&gt;need(&#39;Base/head.php&#39;); $this-&gt;need(&#39;Base/navbar.php&#39;); $this-&gt;need(&#39;Base/hero.php&#39;); ?&gt; &lt;div class=&quot;card-box clearfix &lt;?php echo Helper::options()-&gt;indeximg ? &#39;&#39; : &#39;pt4&#39; ?&gt; mx-auto&quot;&gt; &lt;div class=&quot;card-content mx-auto &lt;?php echo Helper::options()-&gt;indeximg || $this-&gt;options-&gt;qjcbl ? &#39;&#39; : &#39;mt2&#39; ?&gt;&quot; &lt;?php echo $this-&gt;options-&gt;qjcbl &amp;&amp; in_array(&#39;1&#39;, $this-&gt;options-&gt;cblxswz) ? &quot;&quot; : &quot;style=&#39;max-width: 850px&#39;&quot; ?&gt;&gt; &lt;?php if ($this-&gt;options-&gt;qjcbl &amp;&amp; $this-&gt;options-&gt;qjcblfx == 0 &amp;&amp; in_array(&#39;1&#39;, $this-&gt;options-&gt;cblxswz)) : ?&gt; &lt;div class=&quot;qjcbl md-hide lg-col lg-col-3 mt1&quot;&gt; &lt;?php $this-&gt;need(&#39;Base/sidebar.php&#39;); ?&gt; &lt;/div&gt; &lt;?php endif ?&gt; &lt;div class=&quot;xs-col-12 cuteup lg-col &lt;?php echo $this-&gt;options-&gt;qjcbl &amp;&amp; in_array(&#39;1&#39;, $this-&gt;options-&gt;cblxswz) ? &quot;lg-col-9&quot; : &quot;lg-col-12&quot; ?&gt; &lt;?php echo Cuteen::isMobile() ? &#39;&#39; : &#39;mt1&#39; ?&gt;&quot;&gt; &lt;div class=&quot;mybox m1 &lt;?php echo Helper::options()-&gt;indeximg ? &#39;&#39; : &#39;mt2&#39; ?&gt;&quot;&gt; &lt;div class=&quot;Post_content_box&quot;&gt; &lt;?php if (!Helper::options()-&gt;indeximg) : ?&gt; &lt;div class=&quot;detail-title-wrap&quot;&gt; &lt;div class=&quot;wznydbt mt1 mb3&quot;&gt;&lt;?php $this-&gt;title() ?&gt;&lt;/div&gt; &lt;div &lt;?php echo Cuteen::isMobile() ? &#39;style=&quot;line-height:1.8&quot;&#39; : &#39;&#39; ?&gt; class=&quot;flex justify-between &lt;?php echo Cuteen::isMobile() ? &#39;flex-column&#39; : &#39;pb2&#39; ?&gt;&quot;&gt; &lt;nav class=&quot;breadcrumb h6&quot;&gt; &lt;ul class=&quot;flex&quot;&gt; &lt;li class=&quot;flex items-center pr1&quot;&gt; &lt;svg class=&quot;icon&quot; aria-hidden=&quot;true&quot;&gt; &lt;use xlink:href=&quot;#icon-shouye&quot;&gt;&lt;/use&gt; &lt;/svg&gt;&lt;a href=&quot;&lt;?php $this-&gt;options-&gt;siteUrl(); ?&gt;&quot; title=&quot;&lt;?php $this-&gt;options-&gt;title(); ?&gt;&quot;&gt;首页&lt;/a&gt;&lt;/li&gt; &lt;li class=&quot;flex items-center&quot;&gt; &lt;svg class=&quot;icon&quot; aria-hidden=&quot;true&quot;&gt; &lt;use xlink:href=&quot;#icon-biaoqian1&quot;&gt;&lt;/use&gt; &lt;/svg&gt;独立页面&lt;/li&gt; &lt;/ul&gt; &lt;/nav&gt; &lt;div class=&quot;flex flex-wrap&quot;&gt; &lt;span class=&quot;h6 flex items-center mr1&quot;&gt; &lt;svg class=&quot;icon&quot; aria-hidden=&quot;true&quot;&gt; &lt;use xlink:href=&quot;#icon-huo&quot;&gt;&lt;/use&gt; &lt;/svg&gt; &lt;?php Cuteen::getPostviews($this) ?&gt; &lt;/span&gt; &lt;span class=&quot;h6 flex items-center mr1&quot;&gt; &lt;svg class=&quot;icon&quot; aria-hidden=&quot;true&quot;&gt; &lt;use xlink:href=&quot;#icon-bidianliang&quot;&gt;&lt;/use&gt; &lt;/svg&gt; &lt;?php Cuteen::getWordCount($this-&gt;cid) ?&gt; 字 &lt;/span&gt; &lt;span class=&quot;h6 flex items-center mr1&quot;&gt; &lt;svg class=&quot;icon&quot; aria-hidden=&quot;true&quot;&gt; &lt;use xlink:href=&quot;#icon-pinglun&quot;&gt;&lt;/use&gt; &lt;/svg&gt; &lt;?php $this-&gt;commentsNum(&#39;暂无评论&#39;, &#39;%d 条评论&#39;); ?&gt; &lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;hr&gt; &lt;?php endif ?&gt; &lt;article id=&quot;Post_wysiwyg&quot; class=&quot;duta&quot;&gt; &lt;?php echo Cuteen::parseAll($this-&gt;content); ?&gt; &lt;main id=&quot;app&quot;&gt; &lt;article class=&quot;message lan&quot;&gt;&lt;div class=&quot;message_body&quot;&gt;共计发送 &#123;&#123;count&#125;&#125; 条说说&lt;/div&gt;&lt;/article&gt; &lt;div class=&quot;timenode&quot; v-for=&quot;item in contents&quot; v-cloak&gt; &lt;div class=&quot;meta&quot;&gt; &lt;p&gt;&lt;time v-bind:datetime=&quot;item.attributes.time&quot;&gt;&#123;&#123;item.attributes.time&#125;&#125;&lt;/time&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;body&quot;&gt; &lt;p v-html=&#39;item.attributes.content&#39;&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;load-ctn&quot;&gt; &lt;a class=&quot;btn lv&quot; v-on:click=&quot;loadMore&quot; v-if=&quot;contents&quot; v-cloak&gt;再翻翻&lt;/a&gt; &lt;p class=&quot;tip&quot; v-else&gt;别急，加载呢&lt;/p&gt; &lt;/div&gt; &lt;/main&gt; &lt;/article&gt; &lt;/div&gt; &lt;/div&gt; &lt;?php $this-&gt;need(&#39;Base/comment.php&#39;); ?&gt; &lt;/div&gt; &lt;?php if ($this-&gt;options-&gt;qjcbl &amp;&amp; $this-&gt;options-&gt;qjcblfx == 1 &amp;&amp; in_array(&#39;1&#39;, $this-&gt;options-&gt;cblxswz)) : ?&gt; &lt;div class=&quot;qjcbl md-hide lg-col lg-col-3 mt1&quot;&gt; &lt;?php $this-&gt;need(&#39;Base/sidebar.php&#39;); ?&gt; &lt;/div&gt; &lt;?php endif ?&gt; &lt;style&gt; @font-face &#123; font-family: &quot;iconfont&quot;; src: url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.eot?t=1586882866168&#39;); /* IE9 */ src: url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.eot?t=1586882866168#iefix&#39;) format(&#39;embedded-opentype&#39;), /* IE6-IE8 */ url(&#39;data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAALcAAsAAAAAB2gAAAKPAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCCfgqCUII8ATYCJAMMCwgABCAFhG0HQBuEBsiuMRkynL4YFCHtLKs4b+k7/80U8DwHIB6+xtr7u3vniDZI6tmnkyDS8NC5iFgJlE7pTPcO8e5b+803aYQy8YtH1JPKyZzY3ttb1EonioVGSBAiRJp4JV9cFppCxLpe2z8sUs37O4QEDFRM0lFeAw4XN6bQPG06zTG8DRwHFOBeGEVWIjE+mP8wduVFPCbQNK4ktN8/OgFJhbEqEFemLkEyFVcUVqoL1ZKDRbyIqafb9AA8+9+PX41IklQyY+PBSZ8KnR+9iBx0OxZcp8PxvGDHyFgACnFY6j8QCfMLIppKPmoCrGtW8OG/y0eufLX/8AiJqDKa22AGWpMzUth6p6aARySQQRUUL4AnSBmuyvIwPdbz21OX5ybO5duOJifaLl6cvkrd1HR7kWEy6yikff29PvgO17V/Tf/9f/oN3PDqz22a719IYlZJHQetpLY08MV6fwFDrF0B6F4XyB3/FyEEnZnU2XGtVwHvpxtA1d6pftKB4AcoWo4U1QQbiiy35Xow27whbwK2NNFlhAc99zeOtM4S6ikFQ1IzhqxuglAoC6ho2UBV3Raa5g0cbxnCRURpYM4pQOh3h6TXG7J+j4RCeULFqFdU9UcETYfRdGHLVJjpHk6SIBXlTTQV5mmWS6SD1jHSVx2JJ1U+a4p4YKawvrSSLQ2QR3yMLcGa3hBCQ40zF/vBc+Q4DH3OLFJExRDCb64un5S9qaIwF9L2cEQiEBWSbUImBePR3PFCOvf5MUS3yiHhNR0VySmEC5jTo7qKWgvCgN5r1XEtrwTW6BoEQYM0HONC/cBLHDPPIL98noUohAqjR7uvWVV1HlVbfWV+o/t8J6DJOJ4jRY6idmVKnmVS1q8tK8zfBAAA&#39;) format(&#39;woff2&#39;), url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.woff?t=1586882866168&#39;) format(&#39;woff&#39;), url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.ttf?t=1586882866168&#39;) format(&#39;truetype&#39;), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */ url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.svg?t=1586882866168#iconfont&#39;) format(&#39;svg&#39;); /* iOS 4.1- */ &#125; #app img&#123;display: block;&#125; .iconfont &#123; font-family: &quot;iconfont&quot; !important; font-size: 16px; font-style: normal; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; &#125; .icon-lianjie:before &#123; content: &quot;\\e6a3&quot;; &#125; .icon-lianjie-copy:before &#123; content: &quot;\\e6a4&quot;; &#125; &lt;/style&gt; &lt;script src=&quot;https://cdn.bootcss.com/vue/2.6.11/vue.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leancloud-storage@4.5.3/dist/av-min.js&quot;&gt;&lt;/script&gt; &lt;?php echo &#39;&lt;script src=&quot;&#39; . CUTEEN_STATIC_PATH . &#39;/Js/bb.js&quot;&gt;&lt;/script&gt;&#39;; ?&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;?php $this-&gt;need(&#39;Base/footer.php&#39;); ?&gt; 加入bb.js在主题目录下的Static\\Js文件夹中新建bb.js文件，加入以下代码： 注意要修改自己的appid、appkey等参数 var &#123; Query &#125; = AV; AV.init(&#123; appId: &quot;xxxxxx&quot;, //修改leancloud appid appKey: &quot;xxxxx&quot;,//修改leancloud appkey serverURLs: &#39;https://&#39; //修改api地址 https://开头 &#125;); var query = new AV.Query(&#39;content&#39;); var app = new Vue(&#123; el: &#39;#app&#39;, data: &#123; page: 0, count: 0, contents: [] &#125;, methods: &#123; loadMore: function (event) &#123; getData(++this.page); &#125; &#125; &#125;) getData(0); query.count().then(function (count) &#123; app.count = count; &#125;, function (error) &#123; &#125;); //友好地显示时间 function timeago(dateTimeStamp) &#123; var minute = 1000 * 60; //把分，时，天，周，半个月，一个月用毫秒表示 var hour = minute * 60; var day = hour * 24; var week = day * 7; var month = day * 30; var now = new Date().getTime(); //获取当前时间毫秒 var diffValue = now - dateTimeStamp; //时间差 if (diffValue &lt; 0) &#123; return; &#125; var minC = diffValue / minute; //计算时间差的分，时，天，周，月 var hourC = diffValue / hour; var dayC = diffValue / day; var weekC = diffValue / week; var monthC = diffValue / month; if (monthC &gt;= 1 &amp;&amp; monthC &lt;= 3) &#123; result = &quot; &quot; + parseInt(monthC) + &quot; 月前&quot; &#125; else if (weekC &gt;= 1 &amp;&amp; weekC &lt;= 3) &#123; result = &quot; &quot; + parseInt(weekC) + &quot; 周前&quot; &#125; else if (dayC &gt;= 1 &amp;&amp; dayC &lt;= 6) &#123; result = &quot; &quot; + parseInt(dayC) + &quot; 天前&quot; &#125; else if (hourC &gt;= 1 &amp;&amp; hourC &lt;= 23) &#123; result = &quot; &quot; + parseInt(hourC) + &quot; 小时前&quot; &#125; else if (minC &gt;= 1 &amp;&amp; minC &lt;= 59) &#123; result = &quot; &quot; + parseInt(minC) + &quot; 分钟前&quot; &#125; else if (diffValue &gt;= 0 &amp;&amp; diffValue &lt;= minute) &#123; result = &quot;刚刚&quot; &#125; else &#123; var datetime = new Date(); datetime.setTime(dateTimeStamp); var Nmonth = datetime.getMonth() + 1 &lt; 10 ? &quot;0&quot; + (datetime.getMonth() + 1) : datetime.getMonth() + 1; var Ndate = datetime.getDate() &lt; 10 ? &quot;0&quot; + datetime.getDate() : datetime.getDate(); result = Nmonth + &quot;-&quot; + Ndate &#125; return result; &#125;; function urlToLink(str) &#123; // var re = /(http|ftp|https):\\/\\/[\\w-]+(.[\\w-]+)+([\\w-.,@?^=%&amp;:/~+#]*[\\w-\\@?^=%&amp;/~+#])?/g; var re = /\\bhttps?:\\/\\/(?!\\S+(?:jpe?g|png|bmp|gif|webp|gif))\\S+/g; var re_forpic = /\\bhttps?:\\/\\/.*?(\\.gif|\\.jpeg|\\.png|\\.jpg|\\.bmp|\\.webp)/g; var re_forpic_vx = /^http:\\/\\/mmbiz\\.qpic\\.cn[^\\s]*/g; str = str.replace(re, function (website) &#123; return &quot;&lt;a href=&#39;&quot; + website + &quot;&#39; target=&#39;_blank&#39;&gt; &lt;i class=&#39;iconfont icon-lianjie-copy&#39;&gt;&lt;/i&gt;链接 &lt;/a&gt;&quot;; &#125;); str = str.replace(re_forpic, function (imgurl) &#123; return &quot;&lt;img src=&#39;&quot; + imgurl + &quot;&#39; /&gt; &quot;; &#125;); str = str.replace(re_forpic_vx, function (imgurl) &#123; return &quot;&lt;img src=&#39;&quot; + imgurl + &quot;&#39; /&gt; &quot;; &#125;); return str; &#125;; function getData(page = 0) &#123; query.descending(&#39;createdAt&#39;).skip(page * 10).limit(10).find().then(function (results) &#123; if (results.length == 0) &#123; alert(&#39;之前没发表过说说了&#39;) &#125; else &#123; let resC = results; reqData = false; resC.forEach((i) =&gt; &#123; let dateTmp = new Date(i.createdAt); i.attributes.time = timeago(dateTmp); i.attributes.content = urlToLink(i.attributes.content) ; app.contents.push(i); &#125;) &#125; &#125;, function (error) &#123; &#125;); &#125;; 增加css样式在Static\\Css\\Main.css中加入： /* bb样式 */ div.timenode &#123; position: relative; &#125; div.timenode:before, div.timenode:after &#123; content: &#39;&#39;; z-index: 1; position: absolute; background: rgba(68,215,182,0.5); width: 2px; left: 7px; &#125; div.timenode:before &#123; top: 0px; height: 6px; &#125; div.timenode:after &#123; top: 26px; height: calc(100% - 26px); &#125; div.timenode:last-child:after &#123; height: calc(100% - 26px - 16px); border-bottom-left-radius: 2px; border-bottom-right-radius: 2px; &#125; div.timenode .meta, div.timenode .body &#123; max-width: calc(100% - 24px); &#125; div.timenode .meta &#123; position: relative; color: var(--color-meta); font-size: 0.875rem; line-height: 32px; height: 32px; &#125; div.timenode .meta:before, div.timenode .meta:after &#123; content: &#39;&#39;; position: absolute; top: 8px; z-index: 2; &#125; div.timenode .meta:before &#123; background: rgba(68,215,182,0.5); width: 16px; height: 16px; border-radius: 8px; &#125; div.timenode .meta:after &#123; background: #44d7b6; margin-left: 2px; margin-top: 2px; width: 12px; height: 12px; border-radius: 6px; transform: scale(0.5); transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; &#125; div.timenode .meta p &#123; font-weight: bold; margin: 0 0 0 24px; &#125; div.timenode .body &#123; margin: 4px 0 16px 24px; padding: 16px; border-radius: 8px; background: var(--color-block); display: inline-block; &#125; div.timenode .body:empty &#123; display: none; &#125; div.timenode .body &gt;*:first-child &#123; margin-top: 0.25em; &#125; div.timenode .body &gt;*:last-child &#123; margin-bottom: 0.25em; &#125; div.timenode .body .highlight &#123; border: 1px solid #e4e4e4; &#125; div.timenode:hover .meta &#123; color: var(--color-text); &#125; div.timenode:hover .meta:before &#123; background: rgba(255,87,34,0.5); &#125; div.timenode:hover .meta:after &#123; background: #ff5722; transform: scale(1); &#125; div.timenode .body &#123; margin: 0 0 0 24px; padding: 16px; border-radius: 8px; background: #f6f6f6; display: inline-block; &#125; /*bb暗黑样式*/ .DarkMode .timenode meta p&#123; color: #fff; &#125; .DarkMode .timenode p,.DarkMode .timenode li&#123; color: #555; &#125; .DarkMode .timenode blockquote p&#123; color:#cfcfcf &#125; .DarkMode .timenode p a&#123; color: rgb(36, 122, 62); &#125; .DarkMode .timenode .body &#123; background: #c4c4c4; &#125; Typecho后台的设置 新增一个哔哔页面 使用bb模板 开启了pjax功能的小伙伴看这里如果后台开启了pjax的功能： 请在Base\\footer.php文件的这个地方： 添加以下代码： getData(0); query.count().then(function (count) &#123; app.count = count; &#125;, function (error) &#123; &#125;); 修改后如图： 🎀系列文章10月19日：《BB短博文Hexo-Matery主题适配》 10月20日：《BB短博文Hexo-Next主题(8.0+)适配》 10月21日：《BB短博文Hexo-Butterfly主题适配》 10月30日：《Typecho-Cuteen主题哔哔适配》","categories":[{"name":"typecho","slug":"typecho","permalink":"https://www.heson10.com/volantis/categories/typecho/"}],"tags":[{"name":"哔哔","slug":"哔哔","permalink":"https://www.heson10.com/volantis/tags/%E5%93%94%E5%93%94/"},{"name":"cuteen","slug":"cuteen","permalink":"https://www.heson10.com/volantis/tags/cuteen/"},{"name":"typecho","slug":"typecho","permalink":"https://www.heson10.com/volantis/tags/typecho/"}]},{"title":"Hexo 新建文章自动打开编辑器","slug":"new-post-for-esay-way","date":"2020-10-29T08:10:50.000Z","updated":"2020-10-29T08:31:39.086Z","comments":true,"path":"posts/22932.html","link":"","permalink":"https://www.heson10.com/volantis/posts/22932.html","excerpt":"","text":"又一个懒癌患者诞生。新建文章后，不愿意去_post文件夹里去找。试试这个方法。 在HEXO根目录下新建scripts文件夹 在scripts文件夹新建一个js文件，例如new.js 在new.js中添加如下代码： var spawn = require(&#39;child_process&#39;).exec hexo.on(&#39;new&#39;, function(data)&#123; spawn(&#39;start &quot;D:\\Program Files\\Typora\\Typora.exe&quot; &#39; + data.path) &#125;) 其中D:\\Program Files\\Typora\\Typora.exe改成你自己编辑器的绝对地址即可。 预览效果： 如果是mac用户，试试下面代码（未测试） var exec = require(&#39;child_process&#39;).exec hexo.on(&#39;new&#39;, function(data)&#123; exec(&#39;open -a &quot;markdown编辑器绝对路径.app&quot; &#39; + data.path) &#125;)","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"编辑","slug":"编辑","permalink":"https://www.heson10.com/volantis/tags/%E7%BC%96%E8%BE%91/"}]},{"title":"BB短博文Hexo-Butterfly主题适配","slug":"bbtime-butterfly","date":"2020-10-21T08:33:55.000Z","updated":"2020-10-30T15:08:01.973Z","comments":true,"path":"posts/3510.html","link":"","permalink":"https://www.heson10.com/volantis/posts/3510.html","excerpt":"","text":"我又双叒叕来了！这次是Hexo-Butterfly主题的哔哔适配。 之前，哔哔功能已经适配了Volantis（ejs模板）、Matery（ejs模板）、Next（njk模板），越来越多的小伙伴已经用上了哔哔功能。 今天在NEXT主题群里，@bynote 小伙伴问道： ok，没问题👌开整！ Butterfly这款主题用的是pug模板（对代码缩进有极端的要求），跟之前适配工作的不太一样，代码需要调整很多。先上效果图： 💛💛💛💛教程开始↓↓↓↓↓↓↓💛💛💛💛 准备工作 leancloud创建存储空间 关注微信公众号，绑定api 前面两篇文章都有介绍，这里不啰嗦。👉点我 创建bb.pug模板在themes\\butterfly\\layout\\includes\\page\\下创建bb.pug模板，填如下代码： if top_img === false h1.page-title= page.title style(type=&quot;text/css&quot;). @font-face &#123; font-family: &quot;iconfont&quot;; src: url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.eot?t=1586882866168&#39;); /* IE9 */ src: url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.eot?t=1586882866168#iefix&#39;) format(&#39;embedded-opentype&#39;), /* IE6-IE8 */ url(&#39;data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAALcAAsAAAAAB2gAAAKPAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCCfgqCUII8ATYCJAMMCwgABCAFhG0HQBuEBsiuMRkynL4YFCHtLKs4b+k7/80U8DwHIB6+xtr7u3vniDZI6tmnkyDS8NC5iFgJlE7pTPcO8e5b+803aYQy8YtH1JPKyZzY3ttb1EonioVGSBAiRJp4JV9cFppCxLpe2z8sUs37O4QEDFRM0lFeAw4XN6bQPG06zTG8DRwHFOBeGEVWIjE+mP8wduVFPCbQNK4ktN8/OgFJhbEqEFemLkEyFVcUVqoL1ZKDRbyIqafb9AA8+9+PX41IklQyY+PBSZ8KnR+9iBx0OxZcp8PxvGDHyFgACnFY6j8QCfMLIppKPmoCrGtW8OG/y0eufLX/8AiJqDKa22AGWpMzUth6p6aARySQQRUUL4AnSBmuyvIwPdbz21OX5ybO5duOJifaLl6cvkrd1HR7kWEy6yikff29PvgO17V/Tf/9f/oN3PDqz22a719IYlZJHQetpLY08MV6fwFDrF0B6F4XyB3/FyEEnZnU2XGtVwHvpxtA1d6pftKB4AcoWo4U1QQbiiy35Xow27whbwK2NNFlhAc99zeOtM4S6ikFQ1IzhqxuglAoC6ho2UBV3Raa5g0cbxnCRURpYM4pQOh3h6TXG7J+j4RCeULFqFdU9UcETYfRdGHLVJjpHk6SIBXlTTQV5mmWS6SD1jHSVx2JJ1U+a4p4YKawvrSSLQ2QR3yMLcGa3hBCQ40zF/vBc+Q4DH3OLFJExRDCb64un5S9qaIwF9L2cEQiEBWSbUImBePR3PFCOvf5MUS3yiHhNR0VySmEC5jTo7qKWgvCgN5r1XEtrwTW6BoEQYM0HONC/cBLHDPPIL98noUohAqjR7uvWVV1HlVbfWV+o/t8J6DJOJ4jRY6idmVKnmVS1q8tK8zfBAAA&#39;) format(&#39;woff2&#39;), url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.woff?t=1586882866168&#39;) format(&#39;woff&#39;), url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.ttf?t=1586882866168&#39;) format(&#39;truetype&#39;), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */ url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.svg?t=1586882866168#iconfont&#39;) format(&#39;svg&#39;); /* iOS 4.1- */ &#125; .iconfont &#123; font-family: &quot;iconfont&quot; !important; font-size: 16px; font-style: normal; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; &#125; .icon-lianjie:before &#123; content: &quot;\\e6a3&quot;; &#125; .icon-lianjie-copy:before &#123; content: &quot;\\e6a4&quot;; &#125; != page.content main#app p.tip 共计发送 &#123;&#123;count&#125;&#125; 条说说 .timenode(v-for=&quot;item in contents&quot; v-cloak) .meta p time(v-bind:datetime=&quot;item.attributes.time&quot;) &#123;&#123;item.attributes.time&#125;&#125; .body p(v-html=&#39;item.attributes.content&#39;) script(src=&#39;https://cdn.bootcss.com/vue/2.6.11/vue.min.js&#39;) script(src=&#39;https://cdn.jsdelivr.net/npm/leancloud-storage@4.5.3/dist/av-min.js&#39;) script. var &#123; Query &#125; = AV; AV.init(&#123; appId: &quot;!&#123;theme.bbtime.appId&#125;&quot;, appKey: &quot;!&#123;theme.bbtime.appKey&#125;&quot;, serverURLs: &#39;!&#123;theme.bbtime.serverURLs&#125;&#39; &#125;); var query = new AV.Query(&#39;content&#39;); var app = new Vue(&#123; el: &#39;#app&#39;, data: &#123; page: 0, count: 0, contents: [] &#125;, methods: &#123; loadMore: function (event) &#123; getData(++this.page); &#125; &#125; &#125;) function urlToLink(str) &#123; //增加发图片功能 var re = /\\bhttps?:\\/\\/(?!\\S+(?:jpe?g|png|bmp|gif|webp|gif))\\S+/g; var re_forpic = /\\bhttps?:\\/\\/.*?(\\.gif|\\.jpeg|\\.png|\\.jpg|\\.bmp|\\.webp)/g; str = str.replace(re, function (website) &#123; return &quot;&lt;a href=&#39;&quot; + website + &quot;&#39; target=&#39;_blank&#39;&gt; &lt;i class=&#39;iconfont icon-lianjie-copy&#39;&gt;&lt;/i&gt;链接 &lt;/a&gt;&quot;; &#125;); str = str.replace(re_forpic, function (imgurl) &#123; return &quot;&lt;img src=&#39;&quot; + imgurl + &quot;&#39; /&gt; &quot;; &#125;); return str; &#125; //友好地显示时间 function timeago(dateTimeStamp) &#123; var minute = 1000 * 60; //把分，时，天，周，半个月，一个月用毫秒表示 var hour = minute * 60; var day = hour * 24; var week = day * 7; var month = day * 30; var now = new Date().getTime(); //获取当前时间毫秒 var diffValue = now - dateTimeStamp; //时间差 if (diffValue &lt; 0) &#123; return; &#125; var minC = diffValue / minute; //计算时间差的分，时，天，周，月 var hourC = diffValue / hour; var dayC = diffValue / day; var weekC = diffValue / week; var monthC = diffValue / month; if (monthC &gt;= 1 &amp;&amp; monthC &lt;= 3) &#123; result = &quot; &quot; + parseInt(monthC) + &quot; 月前&quot; &#125; else if (weekC &gt;= 1 &amp;&amp; weekC &lt;= 3) &#123; result = &quot; &quot; + parseInt(weekC) + &quot; 周前&quot; &#125; else if (dayC &gt;= 1 &amp;&amp; dayC &lt;= 6) &#123; result = &quot; &quot; + parseInt(dayC) + &quot; 天前&quot; &#125; else if (hourC &gt;= 1 &amp;&amp; hourC &lt;= 23) &#123; result = &quot; &quot; + parseInt(hourC) + &quot; 小时前&quot; &#125; else if (minC &gt;= 1 &amp;&amp; minC &lt;= 59) &#123; result = &quot; &quot; + parseInt(minC) + &quot; 分钟前&quot; &#125; else if (diffValue &gt;= 0 &amp;&amp; diffValue &lt;= minute) &#123; result = &quot;刚刚&quot; &#125; else &#123; var datetime = new Date(); datetime.setTime(dateTimeStamp); var Nmonth = datetime.getMonth() + 1 &lt; 10 ? &quot;0&quot; + (datetime.getMonth() + 1) : datetime.getMonth() + 1; var Ndate = datetime.getDate() &lt; 10 ? &quot;0&quot; + datetime.getDate() : datetime.getDate(); result = Nmonth + &quot;-&quot; + Ndate &#125; return result; &#125; function getData(page = 0) &#123; query.descending(&#39;createdAt&#39;).skip(page * 10).limit(10).find().then(function (results) &#123; if (results.length == 0) &#123; alert(&#39;之前没发表过说说了&#39;) &#125; else &#123; let resC = results; reqData = false; resC.forEach((i) =&gt; &#123; let dateTmp = new Date(i.createdAt); i.attributes.time = timeago(dateTmp); i.attributes.content = urlToLink(i.attributes.content); app.contents.push(i); &#125;) &#125; &#125;, function (error) &#123; &#125;); &#125; getData(0); query.count().then(function (count) &#123; app.count = count; &#125;, function (error) &#123; &#125;); 修改page.pug在themes\\butterfly\\layout\\page.pug中，如下位置 加上如下代码**(注意代码缩进)**： when &#39;bb&#39; include includes/page/bb.pug 添加css样式丢进themes\\butterfly\\source\\css\\index.styl里面 /* bb样式 */ div.timenode &#123; position: relative; &#125; div.timenode:before, div.timenode:after &#123; content: &#39;&#39;; z-index: 1; position: absolute; background: rgba(68,215,182,0.5); width: 2px; left: 7px; &#125; div.timenode:before &#123; top: 0px; height: 6px; &#125; div.timenode:after &#123; top: 26px; height: calc(100% - 26px); &#125; div.timenode:last-child:after &#123; height: calc(100% - 26px - 16px); border-bottom-left-radius: 2px; border-bottom-right-radius: 2px; &#125; div.timenode .meta, div.timenode .body &#123; max-width: calc(100% - 24px); &#125; div.timenode .meta &#123; position: relative; color: var(--color-meta); font-size: 0.875rem; line-height: 32px; height: 32px; &#125; div.timenode .meta:before, div.timenode .meta:after &#123; content: &#39;&#39;; position: absolute; top: 8px; z-index: 2; &#125; div.timenode .meta:before &#123; background: rgba(68,215,182,0.5); width: 16px; height: 16px; border-radius: 8px; &#125; div.timenode .meta:after &#123; background: #44d7b6; margin-left: 2px; margin-top: 2px; width: 12px; height: 12px; border-radius: 6px; transform: scale(0.5); transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; &#125; div.timenode .meta p &#123; font-weight: bold; margin: 0 0 0 24px; &#125; div.timenode .body &#123; margin: 4px 0 16px 24px; padding: 16px; border-radius: 8px; background: var(--color-block); display: inline-block; &#125; div.timenode .body:empty &#123; display: none; &#125; div.timenode .body &gt;*:first-child &#123; margin-top: 0.25em; &#125; div.timenode .body &gt;*:last-child &#123; margin-bottom: 0.25em; &#125; div.timenode .body .highlight &#123; border: 1px solid #e4e4e4; &#125; div.timenode:hover .meta &#123; color: var(--color-text); &#125; div.timenode:hover .meta:before &#123; background: rgba(255,87,34,0.5); &#125; div.timenode:hover .meta:after &#123; background: #ff5722; transform: scale(1); &#125; div.timenode .body &#123; margin: 0 0 0 24px; padding: 16px; border-radius: 8px; background: #f6f6f6; display: inline-block; &#125; 修改主题配置_config.yml在主题配置中加入（注意要顶格）： ## 哔哔功能配置 ## 关注公众号 &quot;哔哔点啥&quot;，发送: //bindCurrentUser:你的APPID,你的MASTERKEY,你的RESTAPI ## 可用leancloud国际版，国际版api为 https://appid前八位.api.lncldglobal.com bbtime: appId: 你的appId appKey: 你的appKey serverURLs: https://你的api 创建bb页面输入终端命令： hexo new page bb hexo就在source文件夹下创建了bb/index.md 修改index.md的frontmater下的layout为bb： --- title: 黑石说 type: bb --- 这个地方是tpye不是layout，跟之前的不一样，注意注意注意！ 里面的文字可以自己随意加，会显示在哔哔的上方。 开启了pjax功能的，请ban掉bb页面 完毕！ 🎀系列文章10月19日：《BB短博文Hexo-Matery主题适配》 10月20日：《BB短博文Hexo-Next主题(8.0+)适配》 10月21日：《BB短博文Hexo-Butterfly主题适配》 10月30日：《Typecho-Cuteen主题哔哔适配》","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"哔哔","slug":"哔哔","permalink":"https://www.heson10.com/volantis/tags/%E5%93%94%E5%93%94/"},{"name":"说说","slug":"说说","permalink":"https://www.heson10.com/volantis/tags/%E8%AF%B4%E8%AF%B4/"},{"name":"butterfly","slug":"butterfly","permalink":"https://www.heson10.com/volantis/tags/butterfly/"}]},{"title":"BB短博文Hexo-Next主题(8.0+)适配","slug":"bbtime-next","date":"2020-10-20T03:33:55.000Z","updated":"2020-10-30T15:07:48.204Z","comments":true,"path":"posts/26865.html","link":"","permalink":"https://www.heson10.com/volantis/posts/26865.html","excerpt":"","text":"大家好，我又来适配bb短博文功能了。😁 上次是适配Matery主题，这次适配的是最新版8.0以后的next主题（模板后缀为njk）。 性冷淡风格的next效果图来了： 🎀系列文章10月19日：《BB短博文Hexo-Matery主题适配》 10月20日：《BB短博文Hexo-Next主题(8.0+)适配》 10月21日：《BB短博文Hexo-Butterfly主题适配》 10月30日：《Typecho-Cuteen主题哔哔适配》 🎪教程准备工作 leancloud创建存储空间 关注微信公众号，绑定api 前面两篇文章都有介绍，这里不啰嗦。 创建bb.njk模板在themes\\next\\layout中创建bb,njk模板，填以下代码： https://github.com/heson525/heson-demo/blob/main/bbtime/bb.njk 因为转义问题，代码上传到github。 增加CSS样式丢在themes\\next\\source\\css\\main.styl里 /* bb样式 */ div.timenode &#123; position: relative; &#125; div.timenode:before, div.timenode:after &#123; content: &#39;&#39;; z-index: 1; position: absolute; background: rgb(167, 167, 167); width: 2px; left: 7px; &#125; div.timenode:before &#123; top: 0px; height: 6px; &#125; div.timenode:after &#123; top: 26px; height: calc(100% - 26px); &#125; div.timenode:last-child:after &#123; height: calc(100% - 26px - 16px); border-bottom-left-radius: 2px; border-bottom-right-radius: 2px; &#125; div.timenode .meta, div.timenode .body &#123; max-width: calc(100% - 24px); &#125; div.timenode .meta &#123; position: relative; color: var(--color-meta); font-size: 0.875rem; line-height: 32px; height: 32px; &#125; div.timenode .meta:before, div.timenode .meta:after &#123; content: &#39;&#39;; position: absolute; top: 8px; z-index: 2; &#125; div.timenode .meta:before &#123; background: rgba(83, 83, 83, 0.5); width: 16px; height: 16px; border-radius: 8px; &#125; div.timenode .meta:after &#123; background: #111; margin-left: 2px; margin-top: 2px; width: 12px; height: 12px; border-radius: 6px; transform: scale(0.5); transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; &#125; div.timenode .meta p &#123; font-weight: bold; margin: 0 0 0 24px; &#125; div.timenode .body &#123; margin: 4px 0 16px 24px; padding: 16px; border-radius: 8px; background: var(--color-block); display: inline-block; &#125; div.timenode .body:empty &#123; display: none; &#125; div.timenode .body &gt;*:first-child &#123; margin-top: 0.25em; &#125; div.timenode .body &gt;*:last-child &#123; margin-bottom: 0.25em; &#125; div.timenode .body .highlight &#123; border: 1px solid #e4e4e4; &#125; div.timenode:hover .meta &#123; color: var(--color-text); &#125; div.timenode:hover .meta:before &#123; background: rgba(255,87,34,0.5); &#125; div.timenode:hover .meta:after &#123; background: #ff5722; transform: scale(1); &#125; div.timenode .body &#123; margin: 0 0 0 24px; padding: 16px; border-radius: 8px; background: #f6f6f6; display: inline-block; &#125; 修改主题配置_config.yml在主题配置中加入（注意要顶格）： ## 哔哔功能配置 ## 关注公众号 &quot;哔哔点啥&quot;，发送: //bindCurrentUser:你的APPID,你的MASTERKEY,你的RESTAPI ## 可用leancloud国际版，国际版api为 https://appid前八位.api.lncldglobal.com bbtime: appId: 你的appId appKey: 你的appKey serverURLs: https://你的api 创建bb页面输入终端命令： hexo new page bb hexo就在source文件夹下创建了bb/index.md 修改index.md的frontmater下的layout为bb： --- title: 黑石说 layout: bb --- 里面的文字可以自己随意加，会显示在哔哔的上方。 完毕！ 还需要什么主题的哔哔呢？留个言吧。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"next","slug":"next","permalink":"https://www.heson10.com/volantis/tags/next/"},{"name":"哔哔","slug":"哔哔","permalink":"https://www.heson10.com/volantis/tags/%E5%93%94%E5%93%94/"},{"name":"说说","slug":"说说","permalink":"https://www.heson10.com/volantis/tags/%E8%AF%B4%E8%AF%B4/"}]},{"title":"BB短博文Hexo-Matery主题适配","slug":"bbtime-matery","date":"2020-10-19T10:39:22.000Z","updated":"2020-10-30T15:08:10.864Z","comments":true,"path":"posts/22793.html","link":"","permalink":"https://www.heson10.com/volantis/posts/22793.html","excerpt":"","text":"之前哔哔短博文已经适配了Volantis主题。效果可见这篇文章：《哔哔！换个姿势在静态博客上发短博文》 我的哔哔页面：https://www.heson10.com/bb 今天抽空把Matery主题也适配了，效果如下（支持发图片）： 🎀系列文章10月19日：《BB短博文Hexo-Matery主题适配》 10月20日：《BB短博文Hexo-Next主题(8.0+)适配》 10月21日：《BB短博文Hexo-Butterfly主题适配》 10月30日：《Typecho-Cuteen主题哔哔适配》/posts/3510.html) Leancloud创建存储空间之前文章已经写过👉点我 微信公众号绑定关注下面公众号： 按照公众号的提示的命令进行绑定： //bindCurrentUser:你的AppID,你的MasterKey,https://你的api域名 完成后会提示绑定成功。 Matery适配创建bb.ejs模板在themes\\matery\\layout\\文件夹中新增bb.ejs模板，加上以下代码： &lt;% if (theme.verifyPassword.enable) &#123; %&gt; &lt;script src=&quot;&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.js.crypto) %&gt;&quot;&gt;&lt;/script&gt; &lt;script&gt; (function () &#123; let pwd = &#39;&lt;%- page.password %&gt;&#39;; if (pwd &amp;&amp; pwd.length &gt; 0) &#123; if (pwd !== CryptoJS.SHA256(prompt(&#39;&lt;%- theme.verifyPassword.promptMessage %&gt;&#39;)).toString(CryptoJS.enc.Hex)) &#123; alert(&#39;&lt;%- theme.verifyPassword.errorMessage %&gt;&#39;); location.href = &#39;&lt;%- url_for(&quot;/&quot;) %&gt;&#39;; &#125; &#125; &#125;)(); &lt;/script&gt; &lt;% &#125; %&gt; &lt;%- partial(&#39;_partial/post-cover&#39;) %&gt; &lt;% var isTocEnable = theme.toc.enable &amp;&amp; String(page.toc) !== &#39;false&#39;; var containerClass = isTocEnable ? &#39;post-container&#39; : &#39;container&#39;; %&gt; &lt;main class=&quot;&lt;%- containerClass %&gt; content&quot;&gt; &lt;%- partial(&#39;_partial/post-detail.ejs&#39;) %&gt; &lt;/main&gt; &lt;script src=&quot;https://cdn.bootcss.com/vue/2.6.11/vue.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leancloud-storage@4.5.3/dist/av-min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; var &#123; Query &#125; = AV; AV.init(&#123; appId: &quot;&lt;%= theme.bbtime.appId %&gt;&quot;, appKey: &quot;&lt;%= theme.bbtime.appKey %&gt;&quot;, serverURLs: &#39;&lt;%= theme.bbtime.serverURLs %&gt;&#39; &#125;); var query = new AV.Query(&#39;content&#39;); var app = new Vue(&#123; el: &#39;#app&#39;, data: &#123; page: 0, count: 0, contents: [] &#125;, methods: &#123; loadMore: function (event) &#123; getData(++this.page); &#125; &#125; &#125;) function urlToLink(str) &#123; //增加发图片功能 var re = /\\bhttps?:\\/\\/(?!\\S+(?:jpe?g|png|bmp|gif|webp|gif))\\S+/g; var re_forpic = /\\bhttps?:\\/\\/.*?(\\.gif|\\.jpeg|\\.png|\\.jpg|\\.bmp|\\.webp)/g; str = str.replace(re, function (website) &#123; return &quot;&lt;a href=&#39;&quot; + website + &quot;&#39; target=&#39;_blank&#39;&gt; &lt;i class=&#39;iconfont icon-lianjie-copy&#39;&gt;&lt;/i&gt;链接 &lt;/a&gt;&quot;; &#125;); str = str.replace(re_forpic, function (imgurl) &#123; return &quot;&lt;img src=&#39;&quot; + imgurl + &quot;&#39; /&gt; &quot;; &#125;); return str; &#125; //友好地显示时间 function timeago(dateTimeStamp) &#123; var minute = 1000 * 60; //把分，时，天，周，半个月，一个月用毫秒表示 var hour = minute * 60; var day = hour * 24; var week = day * 7; var month = day * 30; var now = new Date().getTime(); //获取当前时间毫秒 var diffValue = now - dateTimeStamp; //时间差 if (diffValue &lt; 0) &#123; return; &#125; var minC = diffValue / minute; //计算时间差的分，时，天，周，月 var hourC = diffValue / hour; var dayC = diffValue / day; var weekC = diffValue / week; var monthC = diffValue / month; if (monthC &gt;= 1 &amp;&amp; monthC &lt;= 3) &#123; result = &quot; &quot; + parseInt(monthC) + &quot; 月前&quot; &#125; else if (weekC &gt;= 1 &amp;&amp; weekC &lt;= 3) &#123; result = &quot; &quot; + parseInt(weekC) + &quot; 周前&quot; &#125; else if (dayC &gt;= 1 &amp;&amp; dayC &lt;= 6) &#123; result = &quot; &quot; + parseInt(dayC) + &quot; 天前&quot; &#125; else if (hourC &gt;= 1 &amp;&amp; hourC &lt;= 23) &#123; result = &quot; &quot; + parseInt(hourC) + &quot; 小时前&quot; &#125; else if (minC &gt;= 1 &amp;&amp; minC &lt;= 59) &#123; result = &quot; &quot; + parseInt(minC) + &quot; 分钟前&quot; &#125; else if (diffValue &gt;= 0 &amp;&amp; diffValue &lt;= minute) &#123; result = &quot;刚刚&quot; &#125; else &#123; var datetime = new Date(); datetime.setTime(dateTimeStamp); var Nmonth = datetime.getMonth() + 1 &lt; 10 ? &quot;0&quot; + (datetime.getMonth() + 1) : datetime.getMonth() + 1; var Ndate = datetime.getDate() &lt; 10 ? &quot;0&quot; + datetime.getDate() : datetime.getDate(); result = Nmonth + &quot;-&quot; + Ndate &#125; return result; &#125; function getData(page = 0) &#123; query.descending(&#39;createdAt&#39;).skip(page * 10).limit(10).find().then(function (results) &#123; if (results.length == 0) &#123; alert(&#39;之前没发表过说说了&#39;) &#125; else &#123; let resC = results; reqData = false; resC.forEach((i) =&gt; &#123; let dateTmp = new Date(i.createdAt); i.attributes.time = timeago(dateTmp); i.attributes.content = urlToLink(i.attributes.content); app.contents.push(i); &#125;) &#125; &#125;, function (error) &#123; &#125;); &#125; getData(0); query.count().then(function (count) &#123; app.count = count; &#125;, function (error) &#123; &#125;); &lt;/script&gt; &lt;% if (theme.mathjax.enable &amp;&amp; page.mathjax) &#123; %&gt; &lt;script src=&quot;&lt;%- theme.mathjax.cdn %&gt;&quot;&gt;&lt;/script&gt; &lt;script&gt; MathJax.Hub.Config(&#123; tex2jax: &#123; inlineMath: [[&#39;$&#39;, &#39;$&#39;], [&#39;\\(&#39;, &#39;\\)&#39;]] &#125; &#125;); &lt;/script&gt; &lt;% &#125; %&gt; 修改post-detail.ejs在themes\\matery\\layout\\_partial\\post-detail.ejs中，这个位置： 加上如下代码： &lt;% if (page.layout == &#39;bb&#39;) &#123; %&gt; &lt;style&gt; @font-face &#123; font-family: &quot;iconfont&quot;; src: url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.eot?t=1586882866168&#39;); /* IE9 */ src: url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.eot?t=1586882866168#iefix&#39;) format(&#39;embedded-opentype&#39;), /* IE6-IE8 */ url(&#39;data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAALcAAsAAAAAB2gAAAKPAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCCfgqCUII8ATYCJAMMCwgABCAFhG0HQBuEBsiuMRkynL4YFCHtLKs4b+k7/80U8DwHIB6+xtr7u3vniDZI6tmnkyDS8NC5iFgJlE7pTPcO8e5b+803aYQy8YtH1JPKyZzY3ttb1EonioVGSBAiRJp4JV9cFppCxLpe2z8sUs37O4QEDFRM0lFeAw4XN6bQPG06zTG8DRwHFOBeGEVWIjE+mP8wduVFPCbQNK4ktN8/OgFJhbEqEFemLkEyFVcUVqoL1ZKDRbyIqafb9AA8+9+PX41IklQyY+PBSZ8KnR+9iBx0OxZcp8PxvGDHyFgACnFY6j8QCfMLIppKPmoCrGtW8OG/y0eufLX/8AiJqDKa22AGWpMzUth6p6aARySQQRUUL4AnSBmuyvIwPdbz21OX5ybO5duOJifaLl6cvkrd1HR7kWEy6yikff29PvgO17V/Tf/9f/oN3PDqz22a719IYlZJHQetpLY08MV6fwFDrF0B6F4XyB3/FyEEnZnU2XGtVwHvpxtA1d6pftKB4AcoWo4U1QQbiiy35Xow27whbwK2NNFlhAc99zeOtM4S6ikFQ1IzhqxuglAoC6ho2UBV3Raa5g0cbxnCRURpYM4pQOh3h6TXG7J+j4RCeULFqFdU9UcETYfRdGHLVJjpHk6SIBXlTTQV5mmWS6SD1jHSVx2JJ1U+a4p4YKawvrSSLQ2QR3yMLcGa3hBCQ40zF/vBc+Q4DH3OLFJExRDCb64un5S9qaIwF9L2cEQiEBWSbUImBePR3PFCOvf5MUS3yiHhNR0VySmEC5jTo7qKWgvCgN5r1XEtrwTW6BoEQYM0HONC/cBLHDPPIL98noUohAqjR7uvWVV1HlVbfWV+o/t8J6DJOJ4jRY6idmVKnmVS1q8tK8zfBAAA&#39;) format(&#39;woff2&#39;), url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.woff?t=1586882866168&#39;) format(&#39;woff&#39;), url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.ttf?t=1586882866168&#39;) format(&#39;truetype&#39;), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */ url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.svg?t=1586882866168#iconfont&#39;) format(&#39;svg&#39;); /* iOS 4.1- */ &#125; .iconfont &#123; font-family: &quot;iconfont&quot; !important; font-size: 16px; font-style: normal; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; &#125; .icon-lianjie:before &#123; content: &quot;\\e6a3&quot;; &#125; .icon-lianjie-copy:before &#123; content: &quot;\\e6a4&quot;; &#125; &lt;/style&gt; &lt;main id=&quot;app&quot;&gt; &lt;p class=&quot;tip&quot;&gt;共计发送 &#123;&#123;count&#125;&#125; 条说说&lt;/p&gt; &lt;div class=&quot;timenode&quot; v-for=&quot;item in contents&quot; v-cloak&gt; &lt;div class=&quot;meta&quot;&gt; &lt;p&gt;&lt;time v-bind:datetime=&quot;item.attributes.time&quot;&gt;&#123;&#123;item.attributes.time&#125;&#125;&lt;/time&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;body&quot;&gt; &lt;p v-html=&#39;item.attributes.content&#39;&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/main&gt; &lt;% &#125; %&gt; 加上CSS效果css丢进themes\\matery\\source\\css\\matery.css里面 /* bb样式 */ div.timenode &#123; position: relative; &#125; div.timenode:before, div.timenode:after &#123; content: &#39;&#39;; z-index: 1; position: absolute; background: rgba(68,215,182,0.5); width: 2px; left: 7px; &#125; div.timenode:before &#123; top: 0px; height: 6px; &#125; div.timenode:after &#123; top: 26px; height: calc(100% - 26px); &#125; div.timenode:last-child:after &#123; height: calc(100% - 26px - 16px); border-bottom-left-radius: 2px; border-bottom-right-radius: 2px; &#125; div.timenode .meta, div.timenode .body &#123; max-width: calc(100% - 24px); &#125; div.timenode .meta &#123; position: relative; color: var(--color-meta); font-size: 0.875rem; line-height: 32px; height: 32px; &#125; div.timenode .meta:before, div.timenode .meta:after &#123; content: &#39;&#39;; position: absolute; top: 8px; z-index: 2; &#125; div.timenode .meta:before &#123; background: rgba(68,215,182,0.5); width: 16px; height: 16px; border-radius: 8px; &#125; div.timenode .meta:after &#123; background: #44d7b6; margin-left: 2px; margin-top: 2px; width: 12px; height: 12px; border-radius: 6px; transform: scale(0.5); transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; &#125; div.timenode .meta p &#123; font-weight: bold; margin: 0 0 0 24px; &#125; div.timenode .body &#123; margin: 4px 0 16px 24px; padding: 16px; border-radius: 8px; background: var(--color-block); display: inline-block; &#125; div.timenode .body:empty &#123; display: none; &#125; div.timenode .body &gt;*:first-child &#123; margin-top: 0.25em; &#125; div.timenode .body &gt;*:last-child &#123; margin-bottom: 0.25em; &#125; div.timenode .body .highlight &#123; border: 1px solid #e4e4e4; &#125; div.timenode:hover .meta &#123; color: var(--color-text); &#125; div.timenode:hover .meta:before &#123; background: rgba(255,87,34,0.5); &#125; div.timenode:hover .meta:after &#123; background: #ff5722; transform: scale(1); &#125; div.timenode .body &#123; margin: 0 0 0 24px; padding: 16px; border-radius: 8px; background: #f6f6f6; display: inline-block; &#125; div.timenode time&#123; margin-left: 20px; &#125; 修改主题配置_config.yml在主题配置中加入（注意要顶格）： ## 哔哔功能配置 ## 关注公众号 &quot;哔哔点啥&quot;，发送: //bindCurrentUser:你的APPID,你的MASTERKEY,你的RESTAPI ## 可用leancloud国际版，国际版api为 https://appid前八位.api.lncldglobal.com bbtime: appId: 你的appId appKey: 你的appKey serverURLs: https://你的api 创建bb页面输入终端命令： hexo new page bb hexo就在source文件夹下创建了bb/index.md 修改index.md的frontmater下的layout为bb： --- title: 黑石说 layout: bb --- 里面的文字可以自己随意加，会显示在哔哔的上方。 完毕！","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"微信","slug":"微信","permalink":"https://www.heson10.com/volantis/tags/%E5%BE%AE%E4%BF%A1/"},{"name":"哔哔","slug":"哔哔","permalink":"https://www.heson10.com/volantis/tags/%E5%93%94%E5%93%94/"},{"name":"说说","slug":"说说","permalink":"https://www.heson10.com/volantis/tags/%E8%AF%B4%E8%AF%B4/"}]},{"title":"Office 16 在线激活简单方法","slug":"office16-active","date":"2020-10-18T03:05:52.000Z","updated":"2020-10-18T12:10:07.702Z","comments":true,"path":"posts/7597.html","link":"","permalink":"https://www.heson10.com/volantis/posts/7597.html","excerpt":"","text":"媳妇办公室电脑换新了，帮她把office16激活的过程中，发现一个非常好用的激活方法，不用下载任何软件。 激活方法将以下内容复制粘贴到记事本，另存为bat文件，双击即可激活。原理，利用网络上的kms激活服务器激活。 @echo off %1 %2 mshta vbscript:createobject(&quot;shell.application&quot;).shellexecute(&quot;%~s0&quot;,&quot;goto :runas&quot;,&quot;&quot;,&quot;runas&quot;,1)(window.close)&amp;goto :eof :runas if exist &quot;%ProgramFiles%\\Microsoft Office\\Office16\\ospp.vbs&quot; cd /d &quot;%ProgramFiles%\\Microsoft Office\\Office16&quot; if exist &quot;%ProgramFiles(x86)%\\Microsoft Office\\Office16\\ospp.vbs&quot; cd /d &quot;%ProgramFiles(x86)%\\Microsoft Office\\Office16&quot; for /f %%x in (&#39;dir /b ..\\root\\Licenses16\\proplusvl*.xrm-ms&#39;) do cscript ospp.vbs /inslic:&quot;..\\root\\Licenses16\\%%x&quot; &gt;nul cscript //nologo ospp.vbs /inpkey:XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99 cscript //nologo ospp.vbs /sethst:kms.03k.org cscript //nologo ospp.vbs /act pause 亲测成功！ 在此记录，以便不时之需。不知道小伙伴们有什么其他的好办法？欢迎留言评论。","categories":[{"name":"技术交流","slug":"技术交流","permalink":"https://www.heson10.com/volantis/categories/%E6%8A%80%E6%9C%AF%E4%BA%A4%E6%B5%81/"}],"tags":[{"name":"激活","slug":"激活","permalink":"https://www.heson10.com/volantis/tags/%E6%BF%80%E6%B4%BB/"},{"name":"office","slug":"office","permalink":"https://www.heson10.com/volantis/tags/office/"}]},{"title":"《灌篮高手》开播27年，168男孩迎来了春天","slug":"basketball-27years","date":"2020-10-16T05:15:00.000Z","updated":"2020-10-18T12:10:32.902Z","comments":true,"path":"posts/47462.html","link":"","permalink":"https://www.heson10.com/volantis/posts/47462.html","excerpt":"","text":"今天是10月16日，《灌篮高手》开播27年纪念日。从我头像也能看出，这部动画对我影响很大。接下来，和大家分享一篇文章，能引起80、90年代的朋友共鸣的美文。文章写得不错，欢迎阅读。 今天是个很特殊的日子 《灌篮高手》开播27周年。 毫不夸张地说，这届90后，一半男生因《灌篮高手》爱上打球，一半女生第一任虚拟老公是流川枫。 当年百度贴吧尚辉煌，樱木粉和流川粉大战一千楼，就为证明谁是人气王。 最后吵得两败俱伤，化敌为友磕cp，你好我也好。 但这些爱恨都不属于年幼的我，因为我爱的是宫城良田——主角团里最不耀眼的那个。 至今记得，sd五周年人气排名，他竟然都没有能比过翔阳的藤真健司，人气只排第五，给弱小的我重重一击。 直到前段时间，看到某扑最喜欢的角色投票，宫城良田居然位于高赞第一。 底下有评论说：长大后重温灌篮，才发现宫城才是最打动人心的角色。 因为他是个没有主角光环的普通人，那种在合影里只会露出二分之一脸的背景板。 这样的男孩，是我们现实生活里的99%，却在《灌篮高手》里，拥有不输给主角的努力和可爱。 为单恋燃烧的普通男孩宫城良田在《灌篮高手》里，是唯二拥有感情线的男孩。 另一个樱木花道，巧的是，两个人对待爱情如出一辙。 宫城的人设是什么？ 超级问题儿童，热爱打架斗殴，带着一只耳钉，性格倔强认死理。 有一次被三井团伙围殴，他只暴揍三井寿一人，根本不管落在身上的其他拳头。 等他被打到站不起来的时候，三井寿已经晕过去了。 不知道你们上学时有没有这种男孩，外人面前臭屁又自信，一见到喜欢的女孩，连话都说不完整。 这可能就是所有的少年共通的软肋，宫城也不意外，他的软肋是篮球部经理彩子。 刚上高中，宫城看到球场旁明艳的彩子，一见钟情，毅然加入篮球队。 有一段时间球队状态不好，屡战屡败，他一度想退出。 但不管球队输多少分，彩子都在旁边拼命地呐喊助威。 那一瞬间宫城良田决定，一定要让球队变强，打赢比赛，只有这样，才对得起这个女孩。 为了这个目标，宫城良田硬是把自己修炼成神奈川第一后卫。 传闻中的宫城良田是不良混混、二年级刺头、问题儿童。 在彩子面前的他会打翻醋坛子，会没尊严地落泪，被拒绝后还要围着她转。 动漫里，我印象最深刻的一幕是有一场湘北军心不稳，几近崩溃。 这时，彩子非常郑重地在良田手上写下“神奈川第一后卫”几个字，良田上场，重新点燃湘北节奏，拿下比赛。 看起来是闪瞎眼的主角光环，但井上雄彦想告诉我们这样一个道理： 在少年人心里，爱就是宇宙间最难以抗衡的力量。 因为深爱着你，所以我变得更优秀，把最完美的品质赋予你，就算最后没有在一起，很多年后都不会有任何遗憾吧？ 那句“包在我身上，阿彩”，是我在《灌篮高手》里听过最美的情话。 不可或缺的那个同伴上次采访马赛克，高欣很羡慕湘北球队的友情，大家都是独立的个体，却会为目标成为一个整体。 但最难的也是相互适应、相互磨合的过程。 以前看《灌篮高手》，感慨刺头主角们顺利磨合，全靠缘分。 最近才发现，哪有那么多缘，不过是有人在默默发力。 这个人是宫城良田。 他是控球后卫，得控制球队进攻节奏，串联球队，相当于赛场上的教练，就必须了解大家的性格、优势、能力。 这也是为什么，他和大家相处模式都不一样。 樱木永远一根筋，流川永远冷着脸，三井永远有距离感。 宫城良田见人说人话见鬼说鬼话，褒义的那种，游走于团队，堪称湘北社交名媛。 和樱木相处时，他臭屁又自信，假装嫌弃樱木的技术，激发他的逆反心理，达到好好练习的效果。 偶尔也很温情，两人在秋千上互诉衷肠、抱头痛哭，像极了大学熄灯后彻夜卧谈交付真心的兄弟。 和高冷男神三井寿相处，宫城会释放大量善意和理解。 尽管开始两人死对头，但宫城察觉到三井对篮球复杂情感后，抛弃了私人恩怨，让三井迷途知返。 这份独属于两个男孩的惺惺相惜，我看一次哭一次。 队长赤木一直想称霸全国，压力特别大，只是不会表露出来。 宫城替他承担着副队长的角色，在球场上从不掉链子，私底下尊重赤木每一个决定。 所以你看，在湘北球队里，最容易被人忽略的宫城，拥有最细腻的情感和最高的情商。 其他几个人过于独立和个性，宫城充当起湘北的胶水，悄然游走其间，把大家凝聚在一起。 只是，他的力量就相当于他的球位——控球后卫，人们只看到耀眼的灌篮，忽略掉微小却不可或缺的后方支援。 这是独属于宫城的温柔与沉默。 挺住就是一切的配角光环十七年后，灌篮迷一听到主题曲，就能回想到对篮球的爱不亚于生命的热血笨蛋们。 那些经典台词我至今都记得—— 樱木花道：我要打篮球。 三井寿：安西教练，我想打篮球。 赤木刚宪：一定要称霸全国。 比起来，宫城似乎没有什么标志性的爱球宣言。 十年后回看，才发现他对篮球的热爱和他的凝聚力一样，隐藏在小细节里，不易被发现，但爱得深沉。 有一集，不良团伙砸场子，宫城被打到鲜血横流也不还手。因为一旦还手，球队犯规，不能参加全国大赛。 那么骄傲的他，半跪着道歉求饶，说“我错了”。 那一瞬间我真的泪崩，为了梦想可以这么卑微和忍耐，甚至可以抛弃掉自尊。 热爱归热爱，球场上实力说话。 作为后卫，宫城的短板再明显不过：身高太低，体型过瘦，在对抗性激烈的篮球运动里，毫无优势。 尤其还要面对其他大魔王后卫：仙道彰、牧绅一、藤真。 要是搁现在的影视剧，面对这么帅气多金技术好的对手，有短板的小人物会变成个炮灰，衬托别人身姿。 但168的小个子宫城，硬是凭借卓越的技术，在湘北内外都拥有姓名。 好几次比赛里，湘北前期处于下风，直到宫城反攻，局势才扭转。 身高受限？那就着力速度，发挥小身板的机动灵活，叫人防不胜防。 湘北的战术是快攻，而宫城一定是湘北的速度引擎。 一个网友曾说：从翔阳到山王，从藤真到阿牧，他遇上的都是最好的控卫，但对手有多强，他就有多强。 神奈川后卫No.1，宫城名副其实。 除了热爱和实力，宫城的球商也很高，在比赛里无论困境还是顺境，他都能保持理智和清醒。 仔细回忆的话，樱木容易犯规，流川偶尔体力不支，三井常常自我怀疑，就连队长赤木也曾受伤下场。 只有宫城，保持着从未被罚下场的记录，既是体能好，又是心态优。 用中国老话说是“胜不骄败不馁”，比赛里需要这样没感情的得分机器。 其实宫城良田这样的人设不讨喜。 毕竟美强惨才最惹人怜爱，谁不喜欢看主角被虐然后逆袭，多有张力和泪点啊。 然而称霸全国不是热血口号，每一次失误都很致命，每一个犹疑都将斩断后路。 所有人都曾在球场溃败，只有宫城良田卯着劲往前冲。 就凭这一份韧性，他也是主角团里必不可少的一员，哪有胜利可言，挺住意味着一切。 结束语多年后回看《灌篮高手》，才发现，宫城才是那个最后的人生赢家。 接任赤木，成为湘北的新队长，带领着湘北继续向着全国大赛冲击； 彩子也在他身边，继续做着球队助理。 爱情友情事业，一个都没落下，宫城良田把普普通通的一把牌，都打出花了。 他没有流川的得天独厚，没有樱木的天赋异禀，绝非一路坦途。 但“神奈川第一后卫”和“风驰电掣的男子”，都是宫城实打实靠自己努力出来的。 只要他说一句：“稳住，再进一球”，在屏幕外的我，就知道这场湘北稳了。 宫城凭借自己站在聚光灯下，让全世界为自己做一次配角。 普通也可以不平凡，这是宫城式的人生信条 而我们这些喜欢宫城的人，也是因为他才懂得，普通人也可以拥有高光时刻。 转载于 ONE文艺生活 公众号","categories":[{"name":"生活随笔","slug":"生活随笔","permalink":"https://www.heson10.com/volantis/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"纪念","slug":"纪念","permalink":"https://www.heson10.com/volantis/tags/%E7%BA%AA%E5%BF%B5/"},{"name":"灌篮高手","slug":"灌篮高手","permalink":"https://www.heson10.com/volantis/tags/%E7%81%8C%E7%AF%AE%E9%AB%98%E6%89%8B/"},{"name":"动画","slug":"动画","permalink":"https://www.heson10.com/volantis/tags/%E5%8A%A8%E7%94%BB/"}]},{"title":"博客成立100天","slug":"100days","date":"2020-10-14T03:02:59.000Z","updated":"2020-10-21T09:24:52.859Z","comments":true,"path":"posts/16197.html","link":"","permalink":"https://www.heson10.com/volantis/posts/16197.html","excerpt":"","text":"100天前，小站诞生了。 在这三个多月的时间里，认识了许多小伙伴，还找到了当年失散的伙伴(原来玩博客认识的小伙伴)。博客就像一条纽带，把我们连系在一起。100天的时间说多不多，说少也不少，在这100天里，对于这个博客来说，我还是做了不少工作的。借这个机会，简要记录这100天里，我做的工作和小站发生的一些事情： 关于博客建设的投入因为原来整过wp的博客，对建站还是很清楚的。建立这个hexo博客，就花了10分钟，但从建立之初到现在三个多月的时间，耗在博客上折腾的时间，我敢说绝对不少于300个小时。 折腾之路主要是对小站的一些页面美化、博客SEO优化和访问速度提升，前前后后整了3个主题，Next、Volantis和现在的Cuteen(本人移植hexo版)。博客Archive页面也记录着一些我曾经折腾过的玩意，有兴趣的小伙伴可以看看。现在看到之前写过的文章，就能一下子想到折腾这些的意义和方法。这也确实验证了那句老话： 🙇好记性不如烂笔头。✍ 每次记录折腾的过程，也是对这些知识点的再回顾、再学习。正如我博客第一篇文章最后所说，“对任何渴望进步的人来说，写博客/文章/回答对自己的成长帮助都是巨大的。频率和数量不必过分强求，有话要说就写写，没事就歇歇，随意点。因为坚持写作的那一刻起，你就已经开始受益。”正因为如此，我会一如既往的坚持下去。 粗略统计100天里： 加了15个群（真没想到有这么多），其中3个受到群主宠信，成为管理员👮。 认识小伙伴48个(qq好友45人，微信3人) 共计收到打赏￥748含帮助别人建站收入 折腾了2个hexo主题 移植了一款typecho付费主题cuteen 总访问量:9626人，22816次(从8月12日换域名后统计) 注册域名5个，备案4个 站点建立5个，其中1个主站，2个分站，1个宝盒，1个要饭。 共写了42篇文章 结束语是时候考虑我在关于里写的小目标了。还在筹划当中。尽量在下一个100天时完工。就酱，啰嗦了一大堆，over。","categories":[{"name":"生活随笔","slug":"生活随笔","permalink":"https://www.heson10.com/volantis/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"纪念","slug":"纪念","permalink":"https://www.heson10.com/volantis/tags/%E7%BA%AA%E5%BF%B5/"}]},{"title":"哔哔！换个姿势在静态博客上发短博文（Hexo-Volantis适配）","slug":"bb-blog","date":"2020-10-09T06:02:59.000Z","updated":"2020-11-06T15:05:53.061Z","comments":true,"path":"posts/15701.html","link":"","permalink":"https://www.heson10.com/volantis/posts/15701.html","excerpt":"","text":"要在静态博客上发送短博文，不像wordpress和typecho新建个栏目那么简单。 之前博客整的是artitalk（说说，想进一步了解，点我），已经有短博文的那种体验了，而且还能支持发送markdown、图片、音乐等等功能。感觉唯一的缺点就是：发文不是很方便，需要在博客上登陆。(至少我觉得很麻烦) 后来看到 @熊野 的那篇《哔哔点啥，换个舒服的姿势》，顿时感觉爱了，这就是我梦寐以求发送短博文的姿势。 🎀系列文章10月19日：《BB短博文Hexo-Matery主题适配》 10月20日：《BB短博文Hexo-Next主题(8.0+)适配》 10月21日：《BB短博文Hexo-Butterfly主题适配》 10月30日：《Typecho-Cuteen主题哔哔适配》 💖效果图 发文效果图，引用熊野大佬的图 黑石博客融合效果图： 🍔食用方法Leancloud创建存储空间 登陆leancloud创建应用 进入应用后，点击创建 Class 将「 Class 名称」命名为 content 点击刚刚创建的content Class，点击添加列并创建名称为content的列，类型为String，注意列注释也要填写（随意填） 记录appid，masterkey，api域名 因为我用的是国区版本，api绑定域名需要备案域名。 国际版leancloud不需要绑定域名，api地址为： appid前八位.api.lncldglobal.com 微信公众号绑定由 @林帅 给的leancloud对接公众号的源码，我搭建在自己公众号上了。 关注下面公众号： 按照公众号的提示的命令进行绑定： //bindCurrentUser:你的AppID,你的MasterKey,https://你的api域名 完成后会提示绑定成功。 Hexo博客适配这里主要介绍volantis主题（4.0版本已测试）的适配。我这里的代码是在 @熊野 的基础上，增加了图片发文功能（直接发送图片外链地址即可） 新建bb.ejs模板在themes\\volantis\\layout中新建bb.ejs，代码如下： &lt;%- partial(&#39;_pre&#39;) %&gt; &lt;%- partial(&#39;_partial/side&#39;) %&gt; &lt;div class=&#39;l_main&lt;%- page.sidebar == false ? &#39; no_sidebar&#39; : &#39;&#39; %&gt;&#39;&gt; &lt;%- partial(&#39;_partial/article&#39;, &#123;post: page, index: false&#125;) %&gt; &lt;/div&gt; &lt;script src=&quot;https://cdn.bootcss.com/vue/2.6.11/vue.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leancloud-storage@4.5.3/dist/av-min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; var &#123; Query &#125; = AV; AV.init(&#123; appId: &quot;&lt;%= theme.plugins.bbtime.appId %&gt;&quot;, appKey: &quot;&lt;%= theme.plugins.bbtime.appKey %&gt;&quot;, serverURLs: &#39;&lt;%= theme.plugins.bbtime.serverURLs %&gt;&#39; &#125;); var query = new AV.Query(&#39;content&#39;); var app = new Vue(&#123; el: &#39;#app&#39;, data: &#123; page: 0, count: 0, contents: [] &#125;, methods: &#123; loadMore: function (event) &#123; getData(++this.page); &#125; &#125; &#125;) //友好地显示时间，如果主题开启了theme.lastupd.friendlyShow: true ，则删掉以下 timeago 函数 function timeago(dateTimeStamp) &#123; var minute = 1000 * 60; //把分，时，天，周，半个月，一个月用毫秒表示 var hour = minute * 60; var day = hour * 24; var week = day * 7; var month = day * 30; var now = new Date().getTime(); //获取当前时间毫秒 var diffValue = now - dateTimeStamp; //时间差 if (diffValue &lt; 0) &#123; return; &#125; var minC = diffValue / minute; //计算时间差的分，时，天，周，月 var hourC = diffValue / hour; var dayC = diffValue / day; var weekC = diffValue / week; var monthC = diffValue / month; if (monthC &gt;= 1 &amp;&amp; monthC &lt;= 3) &#123; result = &quot; &quot; + parseInt(monthC) + &quot; 月前&quot; &#125; else if (weekC &gt;= 1 &amp;&amp; weekC &lt;= 3) &#123; result = &quot; &quot; + parseInt(weekC) + &quot; 周前&quot; &#125; else if (dayC &gt;= 1 &amp;&amp; dayC &lt;= 6) &#123; result = &quot; &quot; + parseInt(dayC) + &quot; 天前&quot; &#125; else if (hourC &gt;= 1 &amp;&amp; hourC &lt;= 23) &#123; result = &quot; &quot; + parseInt(hourC) + &quot; 小时前&quot; &#125; else if (minC &gt;= 1 &amp;&amp; minC &lt;= 59) &#123; result = &quot; &quot; + parseInt(minC) + &quot; 分钟前&quot; &#125; else if (diffValue &gt;= 0 &amp;&amp; diffValue &lt;= minute) &#123; result = &quot;刚刚&quot; &#125; else &#123; var datetime = new Date(); datetime.setTime(dateTimeStamp); var Nmonth = datetime.getMonth() + 1 &lt; 10 ? &quot;0&quot; + (datetime.getMonth() + 1) : datetime.getMonth() + 1; var Ndate = datetime.getDate() &lt; 10 ? &quot;0&quot; + datetime.getDate() : datetime.getDate(); result = Nmonth + &quot;-&quot; + Ndate &#125; return result; &#125; function urlToLink(str) &#123; //增加发图片功能 var re = /\\bhttps?:\\/\\/(?!\\S+(?:jpe?g|png|bmp|gif|webp|gif))\\S+/g; var re_forpic = /\\bhttps?:\\/\\/.*?(\\.gif|\\.jpeg|\\.png|\\.jpg|\\.bmp|\\.webp)/g; str = str.replace(re, function (website) &#123; return &quot;&lt;a href=&#39;&quot; + website + &quot;&#39; target=&#39;_blank&#39;&gt; &lt;i class=&#39;iconfont icon-lianjie-copy&#39;&gt;&lt;/i&gt;链接 &lt;/a&gt;&quot;; &#125;); str = str.replace(re_forpic, function (imgurl) &#123; return &quot;&lt;img src=&#39;&quot; + imgurl + &quot;&#39; /&gt; &quot;; &#125;); return str; &#125; function getData(page = 0) &#123; query.descending(&#39;createdAt&#39;).skip(page * 10).limit(10).find().then(function (results) &#123; if (results.length == 0) &#123; alert(&#39;之前没发表过说说了&#39;) &#125; else &#123; let resC = results; reqData = false; resC.forEach((i) =&gt; &#123; let dateTmp = new Date(i.createdAt); i.attributes.time = timeago(dateTmp); i.attributes.content = urlToLink(i.attributes.content); app.contents.push(i); &#125;) &#125; &#125;, function (error) &#123; &#125;); &#125; getData(0); query.count().then(function (count) &#123; app.count = count; &#125;, function (error) &#123; &#125;); &lt;/script&gt; 修改article.ejs找到themes\\volantis\\layout\\_partial\\article.ejs如下图位置所示： 加上如下代码： &lt;% if (page.layout == &#39;bb&#39;) &#123; %&gt; &lt;style&gt; @font-face &#123; font-family: &quot;iconfont&quot;; src: url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.eot?t=1586882866168&#39;); /* IE9 */ src: url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.eot?t=1586882866168#iefix&#39;) format(&#39;embedded-opentype&#39;), /* IE6-IE8 */ url(&#39;data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAALcAAsAAAAAB2gAAAKPAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCCfgqCUII8ATYCJAMMCwgABCAFhG0HQBuEBsiuMRkynL4YFCHtLKs4b+k7/80U8DwHIB6+xtr7u3vniDZI6tmnkyDS8NC5iFgJlE7pTPcO8e5b+803aYQy8YtH1JPKyZzY3ttb1EonioVGSBAiRJp4JV9cFppCxLpe2z8sUs37O4QEDFRM0lFeAw4XN6bQPG06zTG8DRwHFOBeGEVWIjE+mP8wduVFPCbQNK4ktN8/OgFJhbEqEFemLkEyFVcUVqoL1ZKDRbyIqafb9AA8+9+PX41IklQyY+PBSZ8KnR+9iBx0OxZcp8PxvGDHyFgACnFY6j8QCfMLIppKPmoCrGtW8OG/y0eufLX/8AiJqDKa22AGWpMzUth6p6aARySQQRUUL4AnSBmuyvIwPdbz21OX5ybO5duOJifaLl6cvkrd1HR7kWEy6yikff29PvgO17V/Tf/9f/oN3PDqz22a719IYlZJHQetpLY08MV6fwFDrF0B6F4XyB3/FyEEnZnU2XGtVwHvpxtA1d6pftKB4AcoWo4U1QQbiiy35Xow27whbwK2NNFlhAc99zeOtM4S6ikFQ1IzhqxuglAoC6ho2UBV3Raa5g0cbxnCRURpYM4pQOh3h6TXG7J+j4RCeULFqFdU9UcETYfRdGHLVJjpHk6SIBXlTTQV5mmWS6SD1jHSVx2JJ1U+a4p4YKawvrSSLQ2QR3yMLcGa3hBCQ40zF/vBc+Q4DH3OLFJExRDCb64un5S9qaIwF9L2cEQiEBWSbUImBePR3PFCOvf5MUS3yiHhNR0VySmEC5jTo7qKWgvCgN5r1XEtrwTW6BoEQYM0HONC/cBLHDPPIL98noUohAqjR7uvWVV1HlVbfWV+o/t8J6DJOJ4jRY6idmVKnmVS1q8tK8zfBAAA&#39;) format(&#39;woff2&#39;), url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.woff?t=1586882866168&#39;) format(&#39;woff&#39;), url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.ttf?t=1586882866168&#39;) format(&#39;truetype&#39;), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */ url(&#39;//at.alicdn.com/t/font_1755564_z4mhxbw13mq.svg?t=1586882866168#iconfont&#39;) format(&#39;svg&#39;); /* iOS 4.1- */ &#125; .iconfont &#123; font-family: &quot;iconfont&quot; !important; font-size: 16px; font-style: normal; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; &#125; .icon-lianjie:before &#123; content: &quot;\\e6a3&quot;; &#125; .icon-lianjie-copy:before &#123; content: &quot;\\e6a4&quot;; &#125; &lt;/style&gt; &lt;main id=&quot;app&quot;&gt; &lt;p class=&quot;tip&quot;&gt;共计发送 &#123;&#123;count&#125;&#125; 条说说&lt;/p&gt; &lt;div class=&quot;timenode&quot; v-for=&quot;item in contents&quot; v-cloak&gt; &lt;div class=&quot;meta&quot;&gt; &lt;p&gt;&lt;time v-bind:datetime=&quot;item.attributes.time&quot;&gt;&#123;&#123;item.attributes.time&#125;&#125;&lt;/time&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;body&quot;&gt; &lt;p v-html=&#39;item.attributes.content&#39;&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/main&gt; &lt;% &#125; %&gt; 修改主题配置_config.yml找到主题配置的plugins：，在下面加入： ## 哔哔功能配置 ## 关注公众号 &quot;哔哔点啥&quot;，发送: //bindCurrentUser:你的APPID,你的MASTERKEY,你的RESTAPI ## 可用leancloud国际版，国际版api为 https://appid前八位.api.lncldglobal.com bbtime: appId: 你的appId appKey: 你的appKey serverURLs: https://你的api 创建bb页面输入终端命令： hexo new page bb hexo就在source文件夹下创建了bb/index.md 修改index.md的frontmater下的layout为bb： --- title: 黑石说 layout: bb --- 开启了pjax的博客请ban掉bb pjax: enable: true timeout: 5000 # The timeout in milliseconds for the XHR requests. Set to 0 to disable the timeout. cacheBust: false # When set to true, Pjax appends a timestamp to skip the browser cache. animation: nprogress # nprogress, circle banUrl: # 被屏蔽的 url 地址将不启用 pjax 跳转，可以在控制台下使用 window.location.pathname 获取 # - /artitalk/ # artitalk 不支持 pjax - /bb/ # bb 不支持 pjax 完成修改！请享用！ volantis哔哔演示地址：https://www.heson10.com/volantis/bb/ 独立页面制作源码：https://github.com/ibearye/talk/tree/master/hosting 独立页面演示地址：https://bb.heson10.com 🎁鸣谢感谢 @熊野大佬 的哔哔源码，让我换了个姿势发送短博文。 感谢 @林大帅 发给我的leancloud对接公众号的源码，让我又能开心的折腾。（顺便帮你分流😁） 更新代码10月18日： 网友 @北海轻歌 反馈加在其他主题的时候，只显示条数，不显示内容。 原因是没有加上timeago()函数，部分volantis主题没开启友好显示时间功能时也会出现这个情况 解决方法为：在getData()函数前加上如下代码： //友好地显示时间 function timeago(dateTimeStamp) &#123; var minute = 1000 * 60; //把分，时，天，周，半个月，一个月用毫秒表示 var hour = minute * 60; var day = hour * 24; var week = day * 7; var month = day * 30; var now = new Date().getTime(); //获取当前时间毫秒 var diffValue = now - dateTimeStamp; //时间差 if (diffValue &lt; 0) &#123; return; &#125; var minC = diffValue / minute; //计算时间差的分，时，天，周，月 var hourC = diffValue / hour; var dayC = diffValue / day; var weekC = diffValue / week; var monthC = diffValue / month; if (monthC &gt;= 1 &amp;&amp; monthC &lt;= 3) &#123; result = &quot; &quot; + parseInt(monthC) + &quot; 月前&quot; &#125; else if (weekC &gt;= 1 &amp;&amp; weekC &lt;= 3) &#123; result = &quot; &quot; + parseInt(weekC) + &quot; 周前&quot; &#125; else if (dayC &gt;= 1 &amp;&amp; dayC &lt;= 6) &#123; result = &quot; &quot; + parseInt(dayC) + &quot; 天前&quot; &#125; else if (hourC &gt;= 1 &amp;&amp; hourC &lt;= 23) &#123; result = &quot; &quot; + parseInt(hourC) + &quot; 小时前&quot; &#125; else if (minC &gt;= 1 &amp;&amp; minC &lt;= 59) &#123; result = &quot; &quot; + parseInt(minC) + &quot; 分钟前&quot; &#125; else if (diffValue &gt;= 0 &amp;&amp; diffValue &lt;= minute) &#123; result = &quot;刚刚&quot; &#125; else &#123; var datetime = new Date(); datetime.setTime(dateTimeStamp); var Nmonth = datetime.getMonth() + 1 &lt; 10 ? &quot;0&quot; + (datetime.getMonth() + 1) : datetime.getMonth() + 1; var Ndate = datetime.getDate() &lt; 10 ? &quot;0&quot; + datetime.getDate() : datetime.getDate(); result = Nmonth + &quot;-&quot; + Ndate &#125; return result; &#125; 10月19日： 新增Matery版本适配：点我传送 新增next和butterfly主题，见系列文章。 10月27日： 更改友好显示时间代码：见下方评论区。","categories":[{"name":"技术交流","slug":"技术交流","permalink":"https://www.heson10.com/volantis/categories/%E6%8A%80%E6%9C%AF%E4%BA%A4%E6%B5%81/"}],"tags":[{"name":"微信","slug":"微信","permalink":"https://www.heson10.com/volantis/tags/%E5%BE%AE%E4%BF%A1/"},{"name":"哔哔","slug":"哔哔","permalink":"https://www.heson10.com/volantis/tags/%E5%93%94%E5%93%94/"},{"name":"说说","slug":"说说","permalink":"https://www.heson10.com/volantis/tags/%E8%AF%B4%E8%AF%B4/"}]},{"title":"为Hexo博客建立其他主题分站","slug":"build-other-theme-hexo-blog","date":"2020-10-09T04:20:01.000Z","updated":"2020-10-09T05:13:18.823Z","comments":true,"path":"posts/46324.html","link":"","permalink":"https://www.heson10.com/volantis/posts/46324.html","excerpt":"","text":"换了hexo主题后，之前魔改的主题又舍不得删，索性就把他们做成了分站，跟主站一起托管在github平台了。 hexo静态博客这点不错，生成的页面全是html静态页面，直接拖入分站文件夹就ok了。 有几个地方要注意的是： 分站域名和url的设置 主站跳过渲染文件夹的设置 设置教程根目录config.yml设置 切换到分站主题，如volantis主题 theme: volantis url和root设置 url: https://你的域名/volantis root: /volantis/ 设置好之后hexo g生成volantis分站public文件夹下的的html的文件，复制后放入主站的source/volantis文件夹 主站跳过渲染设置在主站的根目录设置里面，找到skip_render 我的设置如下： skip_render: - &#39;volantis/**&#39; - &#39;next/**&#39; 而后主站hexo cl &amp;&amp; hexo g -d就可以了。 分站效果volantis分站：https://www.heson10.com/volantis/ next分站: https://www.heson10.com/next/","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"博客","slug":"博客","permalink":"https://www.heson10.com/volantis/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"主题","slug":"主题","permalink":"https://www.heson10.com/volantis/tags/%E4%B8%BB%E9%A2%98/"},{"name":"分站","slug":"分站","permalink":"https://www.heson10.com/volantis/tags/%E5%88%86%E7%AB%99/"}]},{"title":"Hexo博客实现随机文章功能","slug":"hexo-random-posts","date":"2020-10-05T14:52:26.000Z","updated":"2020-10-05T15:46:54.729Z","comments":true,"path":"posts/31514.html","link":"","permalink":"https://www.heson10.com/volantis/posts/31514.html","excerpt":"","text":"写在前面动态博客程序提高内链数量必备功能之随机文章。随机文章这个功能旨在增加一定数量的文章内链，往往对增加访客黏性有着很大的帮助。 当然，静态博客也能实现（只不过在生成之后就固定了）。效果： 关键函数//打乱顺序 function shuffle(a) &#123; for (let i = a.length; i; i--) &#123; let j = Math.floor(Math.random() * i); [a[i - 1], a[j]] = [a[j], a[i - 1]]; &#125; return a; &#125; //随机文章函数，根据标签实现相关性 function recommended_posts(page, site, limit = 5) &#123; page.tags = page.tags || [] if (page.tags.length == 0) return []; let pageTags = page.tags.map(x =&gt; x.name); let sitePosts = site.posts.toArray().map(x =&gt; &#123; return &#123; tags: x.tags.toArray().map(y =&gt; y.name), title: x.title, permalink: x.permalink, date: x.date, img: x.headimg &#125; &#125;); let relatedPosts = pageTags.map(x =&gt; sitePosts.filter(y =&gt; y.title != page.title &amp;&amp; (y.tags.indexOf(x) != -1 || y.date.format(&#39;MM/DD&#39;) == page.date.format(&#39;MM/DD&#39;) || y.headimg == page.headimg))).reduce((prev, next) =&gt; &#123; return prev.concat(next); &#125;, []); return shuffle(Array.from(new Set(relatedPosts))).slice(0, limit); &#125; //随机头图，根据标题link.title生成固定的随机头图 var hashCode = function (str) &#123; if (!str &amp;&amp; str.length === 0) &#123; return 0; &#125; var hash = 0; for (var i = 0, len = str.length; i &lt; len; i++) &#123; hash = ((hash &lt;&lt; 5) - hash) + str.charCodeAt(i); hash |= 0; &#125; return hash; &#125;; var featureimg = &#39;https://picup.heson10.com/img/upyun/home_top_bg.webp&#39;; var featureImages = theme.featureImages; featureimg = featureImages[Math.abs(hashCode(link.title) % featureImages.length)]; //把绝对链接改为相对链接，下面的30代表从30个字符开始截取 //取值要自己去试试，改为相对链接的好处就是可用pjax var lianjie = function (e)&#123; return e.substr(30) &#125; 加上随机头图的调用，ejs模板可写成以下形式（根据主题需要，自行修改以下模板）： &lt;% var post_list = recommended_posts(page, site, theme.recommended_posts.limit) %&gt; &lt;% if(post_list.length &gt; 0 &amp;&amp; theme.recommended_posts.enable) &#123; %&gt; //此处放侧边栏外框 &lt;% post_list.forEach(function(link) &#123; %&gt; //以下开始文章循环 &lt;% var hashCode = function (str) &#123; if (!str &amp;&amp; str.length === 0) &#123; return 0; &#125; var hash = 0; for (var i = 0, len = str.length; i &lt; len; i++) &#123; hash = ((hash &lt;&lt; 5) - hash) + str.charCodeAt(i); hash |= 0; &#125; return hash; &#125;; var featureimg = &#39;https://picup.heson10.com/img/upyun/home_top_bg.webp&#39;; var featureImages = theme.featureImages; featureimg = featureImages[Math.abs(hashCode(link.title) % featureImages.length)]; var lianjie = function (e)&#123; return e.substr(30) &#125; %&gt; //以下参数调用 &lt;%= link.permalink %&gt;//文章绝对链接 &lt;%= lianjie(link.permalink) %&gt; //文章相对链接 &lt;%- link.img %&gt;//文章头图 &lt;%- url_for(featureimg) %&gt;//随机头图地址 &lt;%= date(link.date, config.date_format) %&gt;//日期 &lt;%= link.title %&gt;//文章标题 &lt;% &#125;) %&gt; //此处放侧边栏外框（对应） &lt;% &#125; %&gt; 配置文件如下： # 随机文章模块 recommended_posts: enable: true title: &#39;随便看看&#39; limit: 3 # 随机图片 featureImages: - https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/001.jpg - https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/002.jpg - https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/003.jpg - https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/004.jpg - 自己加图片。。。。 模板html和CSS样式根据博客需要自行修改 鸣谢感谢Ruri Shimotsuki（Shoka主题作者）随机文章提供的shuffle思路。 感谢xaoxuu（Volantis主题作者）在调用文章头图时提供的查错思路。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"随机","slug":"随机","permalink":"https://www.heson10.com/volantis/tags/%E9%9A%8F%E6%9C%BA/"},{"name":"文章","slug":"文章","permalink":"https://www.heson10.com/volantis/tags/%E6%96%87%E7%AB%A0/"},{"name":"功能","slug":"功能","permalink":"https://www.heson10.com/volantis/tags/%E5%8A%9F%E8%83%BD/"}]},{"title":"给博客优雅地加上谷歌思源宋体","slug":"add-google-cn-font","date":"2020-10-01T14:32:16.000Z","updated":"2020-10-02T04:58:36.471Z","comments":true,"path":"posts/16283.html","link":"","permalink":"https://www.heson10.com/volantis/posts/16283.html","excerpt":"","text":"🎈写在前面首先祝大家国庆节中秋节双节快乐！ 好久没更新了，今天蹭着国庆节休息，更新一篇。 水一篇。 🎏教程之前我记得好伙伴问了下怎么加谷歌的思源宋体，网上方法很多，有自己上传字体直接引用、或者用有字库里面的js简单快速，但我认为最好用的那就是引用谷歌字体的API了。 谷歌中文字体api地址：https://fonts.google.com/?subset=chinese-simplified 进入Noto Serif SC思源宋体的界面： 在这里就像超市挑选商品一样，选择一款自己喜欢的字体样式。 点击后面的select this style 浏览器地址栏就是接下来需要引用的api链接了。 我这边选的是400（普通）和900（加粗）的样式，结合异步加载代码，引用地址如下： &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;900&amp;display=swap&quot; rel=&quot;stylesheet&quot; media=&quot;print&quot; onload=&quot;this.media=&#39;all&#39;&quot;&gt; 把以上代码放入模板的&lt;head&gt;&lt;/head&gt;之间。同时设置字体css： font-family: &#39;Mulish&#39;, -apple-system, &#39;Noto Serif SC&#39;, &quot;PingFang SC&quot;, &quot;Microsoft Yahei UI&quot;, &quot;Microsoft Yahei&quot;, sans-serif; 以上代码是我博客用的字体，mulish是一款英文字体，一般放在中文字体前面（也是谷歌的英文字体，引用方法同上），效果： 经过测试，fonts.googleapis.com还是比 loli的节点要更快点。 🎀关于异步加载多说一句前面加载api里面可以看到比一般加载方式多了2个参数 media=&quot;print&quot; onload=&quot;this.media=&#39;all&#39;&quot; media=&quot;print&quot;意思是打印的时候才能看见，当页面刚加载的时候，只能看见后备字体，也就是我这边设置的PingFang SC onload=&quot;this.media=&#39;all&#39;&quot;当所有文档、css加载完毕之后，把media=&quot;print&quot;设置为media=&quot;all&quot;，这样以来就能看到刚刚设置的思源宋体了。 这样刚打开页面的时候，就不会出现那种字体群魔乱舞的情况了。💔 参考文章：https://io-oi.me/tech/loading-google-fonts-async/","categories":[{"name":"技术交流","slug":"技术交流","permalink":"https://www.heson10.com/volantis/categories/%E6%8A%80%E6%9C%AF%E4%BA%A4%E6%B5%81/"}],"tags":[{"name":"字体","slug":"字体","permalink":"https://www.heson10.com/volantis/tags/%E5%AD%97%E4%BD%93/"},{"name":"博客","slug":"博客","permalink":"https://www.heson10.com/volantis/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"谷歌","slug":"谷歌","permalink":"https://www.heson10.com/volantis/tags/%E8%B0%B7%E6%AD%8C/"},{"name":"技巧","slug":"技巧","permalink":"https://www.heson10.com/volantis/tags/%E6%8A%80%E5%B7%A7/"}]},{"title":"测试多彩标签","slug":"duocai-tags","date":"2020-09-28T13:47:34.000Z","updated":"2020-11-06T15:02:19.167Z","comments":true,"path":"posts/31061.html","link":"","permalink":"https://www.heson10.com/volantis/posts/31061.html","excerpt":"","text":"文字样式下划线 着重号 波浪线 删除线 command + D 这里没有验证码 这是一段彩虹字 这里没有验证码 多彩面板这个爆头，那个爆头 今天老八给你爆个头，爆个什么头捏 我给你爆个柠檬 看这柠檬头是怎么爆的 吧唧吧唧，咔咔咔咔 默认颜色 多彩信息面板 臭豆腐乳系凑豆配腐掳，美食界中的博主。不管是腥还是臭，到我嘴里就是肉。奥利给，干了兄弟们！吧唧吧唧，咔咔咔咔。 人生百味系老铁们啊，尝不到苦辣，你永远不知道酸甜。今天老八给你挑战一把酸甜苦辣咸。奥利给，干了兄弟们！辣椒，吧唧吧唧，苦瓜，吧唧吧唧，柠檬，吧唧吧唧，精盐，老干妈，白糖，咔咔~咕噜咕噜。 嘎嘣脆系兄弟们，不吃好的，不吃贵的，咱今天整俩嘎嘣脆的。都说圆葱它很辣，到我嘴里我得盘它。奥利给，干就完了。吧唧吧唧，咔咔咔咔。 秘制汉堡系一日三餐没烦恼，今天就吃老八秘制小汉堡。即实惠，还管饱。凑豆腐，腐掳，加柠檬，你看这汉堡做的行不行。奥利给，兄弟们，造它就完了。吧唧吧唧，咔咔咔咔。 火鸡面系火鸡面，大辣椒，一顿不吃心刺挠。都说这东西它很辣，到我嘴里我不怕。奥利给，兄弟们，造它就完了。吧唧吧唧，咔咔咔咔。 折叠面板 查看图片测试 查看默认打开的折叠框 这是一个默认打开的折叠框。 查看代码测试 &lt;%- list_tags([options]) %&gt; 查看列表测试 hahahehe 查看嵌套测试 查看嵌套测试2 查看嵌套测试3 hahaha 进度条20% 40% 60% 80% 100% 多媒体Your browser does not support the audio tag. Your browser does not support the video tag.","categories":[],"tags":[{"name":"标签","slug":"标签","permalink":"https://www.heson10.com/volantis/tags/%E6%A0%87%E7%AD%BE/"}]},{"title":"Hexo 标签函数 list_tags 用法","slug":"hexo-list-tags","date":"2020-09-24T04:56:08.000Z","updated":"2020-09-24T06:30:57.098Z","comments":true,"path":"posts/59108.html","link":"","permalink":"https://www.heson10.com/volantis/posts/59108.html","excerpt":"","text":"最近正在研究Hexo主题文档，关于标签函数有两条： &lt;%- list_tags([options]) %&gt; &lt;%- tagcloud([tags], [options]) %&gt; 因为现在用的主题采用的是list_tag标签，着重讲一下这个标签。 官网参数其中list_tag有以下参数： 选项 描述 预设值 orderby 标签排列方式 name order 标签排列顺序。1, asc 升序；-1, desc 降序。 1 show_count 显示每个标签的文章总数 true style 标签列表的显示方式。使用 list 以无序列表（unordered list）方式显示。 list separator 标签间的分隔符号。只有在 style 不是 list 时有用。 , class Class name of tag list (string) or customize each tag’s class (object, see below). tag transform 改变标签名称显示方法的函数。 amount 要显示的标签数量（0 = 无限制） 0 suffix 为链接添加前缀 None list_tags用法详解函数写法示例如下： list_tags(site.tags,&#123;orderby: &#39;name&#39;, order: &#39;desc&#39;, amount: 0,class: &#123;ul: &#39;ululul&#39;, li: &#39;lilili&#39;, a: &#39;aaa&#39;, count: &#39;ccc&#39;&#125;, style: list, separator: &#39; | &#39;&#125;) 其中第一个参数site.tags还可以写post.tags，意思是分别调用全站标签和当前文章标签 orderby这里默认值是name，如果想按照标签下的文章数量来进行排序的话，很明显name已经满足不了我们的需求，于是我们可以这样调用，使用length参数（之前一直想要找到这样的写法，最后还是在hexo官方github的issue上看到的，还是个外国朋友提供的），这样也称之为热门标签，并通过amount参数控制显示数量，这样的标签群放在侧边栏效果更佳： &lt;%- list_tags(site.tags,&#123;orderby: &#39;length&#39;, order: &#39;desc&#39;,amount: 8&#125;) %&gt; 效果如下图： order是升序和降序的参数 amount标签数量的控制 class这里是个参数集，区分ul、li、span分别给其加上css类，用于css美化，示例如图： style和separator配合使用，给标签与标签之间加上分隔符： style: false, separator: &#39; | &#39; 效果： show_count为是否显示每个标签的文章数，这个就很好理解了，填true和false即可。 transform可为标签字符串进行转化，最常见的就是大小写转化，这也是一个常见的方法，比如我喜欢给每个标签用小写，如hexo，但显示出来不好看，于是我们可以利用transform转为大写，写法如下： &lt;%- list_tags(site.tags,&#123;orderby: &#39;length&#39;, order: &#39;desc&#39;, amount: 0,transform(str) &#123;return str.toUpperCase();&#125;&#125;) %&gt; 原本小写的hexo，转变为大写，效果如下： ReferencesHexo官方文档","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"标签","slug":"标签","permalink":"https://www.heson10.com/volantis/tags/%E6%A0%87%E7%AD%BE/"}]},{"title":"16种人格类型，你属于哪一种？","slug":"16-personalities","date":"2020-09-19T03:52:00.000Z","updated":"2020-09-22T14:44:15.689Z","comments":true,"path":"posts/62369.html","link":"","permalink":"https://www.heson10.com/volantis/posts/62369.html","excerpt":"","text":"简介简单快速粗暴地直接推荐16PF人格测试站点： https://www.16personalities.com/ch 黑石推荐理由： 扁平化卡通人物画风，异常清新可爱。 人物特点分明，职业化参考。 问卷调查简单明了，不拖沓。 中文支持！ 网站缩略图： 16PF简介16种人格因素问卷是美国伊利诺州立大学人格及能力测验研究所卡特尔教授编制的用于人格检测的一种问卷，简称16PF。 调查问卷功能从乐群、聪慧、自律、独立、敏感、冒险、怀疑等16个相对独立的人格特点对人进行描绘，并可以了解应试者在环境适应、专业成就和心理健康等方面的表现。在人事管理中，16PF能够预测应试者的工作稳定性、工作效率和压力承受能力等。可广泛应用于心理咨询、人员选拔和职业指导的各个环节，为人事决策和人事诊断提供个人心理素质的参考依据。 16PF量表 我的16PF “鉴赏家” 人格 我想要享受人生，一个不同的人生。 我不想每天去去到同一个地方，遇见同样的人，做一样的工作。 我期待有趣的挑战。 HARRISON FORD 艺术能手人格类型的人喜欢用双手和眼睛去探索事物，他们通过冷静的理性主义和精神饱满的好奇心来感知和体验这个世界。 拥有这种人格的人是天生的制造者，他们在不同的项目中穿梭，从创造有用、充足的产物中获得乐趣，并在创造的过程中从外界学习。 艺术能手人格类型的人通常是机械师和工程师，他们亲手拆卸东西，并把它们安装还原到比之前更好一点的状态，从中获得极大的乐趣。 他们通过创造、解决难题、反复试验和第一手的经验来探索新想法。 他们喜欢别人对他们的计划感兴趣，有时候甚至不介意别人介入。 当然，这是建立在那些感兴趣的人不会干涉“艺术能手”原则和自由的基础上，并且能够接受以同样的兴趣回报他们。 艺术能手人格类型的人喜欢帮助别人和分享他们的经验，特别是他们关心的人。很可惜拥有这种人格类型的人并不常见，大约只占到人口总数的 5%。 艺术能手人格类型的女性尤其罕见，而且她们的角色可能与社会对女性的预期很不相配 — 她们通常从童年开始就被当成是假小子。 敢于不同“艺术能手”们天性保守务实，使他们乍看起来很简单，但实际上读懂他们相当不易。 他们友好又缄默，行事冷静但会突然的不由自主，好奇心旺盛但是不能够持续专注于正式的研究，即便是他们的朋友和爱人也常常觉得他们难以捉摸。 他们可以暂时表现得非常忠诚和稳定，但是他们倾向于积累冲动的能量，并在没有任何征兆的情况下爆发出来，将他们的兴趣带到全新的方向。 当这一人格类型的人发生巨大变化的时候，他们仅仅是在探索新兴趣的可行性，而不是一味的幻想探索。 艺术能手人格类型的人的选择来源于实用的现实主义。他们的心中有很强的公平感，并以此来对待别人。这有助于人们理解他们身上一些令人迷惑的特征。 他们不会过度谨慎，也不会奉行己所不欲勿施于人的信条，反而会更加变本加厉，做出类似的反击，不论好坏，只为公平。 艺术能手人格类型的人可能面临的最大的问题是，他们通常行动的太早。他们认为宽容的本性是理所当然的，并且想当然地认为别人也是如此。 他们会第一个讲出令人无动于衷的笑话，过度地参与到别人的项目和嬉笑打闹中。他们或许会因为更有趣的事物出现而突然改变计划。 没有什么比所有都人都赞同更无聊的事情了这种人格类型的人会认识到，许多其他类型的人和自己相比，在规则和可接受的行为上有更坚定的界限 — 感情更加细腻的人格类型不想听到令人无动于衷的玩笑，并且绝对不会自己也说一个，也不会参加喧闹的嬉戏，即使是在气氛融洽的聚会上也如此。 如果局面已经很情绪化，超越这些界线就会事与愿违，难以收场。 这种人格类型的人很难揣测他人的情感，但要揣摩他们内心的情感和动机也并非易事，因此这也算是他们所热爱的公平的一种自然体现。 但他们趋向于用行动而非同情来探索与人之间的关系，这种倾向可能会导致一些非常令人沮丧的情况出现。 拥有艺术能手人格类型的人常常在界线和准则中挣扎，他们更喜欢自由自在，并且在需要的时候稍稍出界。 如果能与理解他们风格和不可预测性的朋友一起共事，再加上他们的创造力、幽默感和亲力亲为，以创造可行的解决方案和实用的东西，那么“艺术能手”们会一直非常乐意创造各种有用的物品，并真心实意地喜欢它们。 结束语总得说来，测试结果还算比较中肯。 特别是这句话“他们在不同的项目中穿梭，从创造有用、充足的产物中获得乐趣，并在创造的过程中从外界学习。” 这也是黑石博客建立的初衷，天生喜欢折腾的我，特别热衷于折腾代码，对于网站建设这一块的爱好热情始终未褪。现在在各种博客程序中（Hexo、wordpress、typecho）不断的学习，在折腾代码中获得乐趣，相信我能通过不断地学习，并最终实现我在个人简介写下的小目标！😉 那么电脑前的你，属于哪一种呢？","categories":[{"name":"生活随笔","slug":"生活随笔","permalink":"https://www.heson10.com/volantis/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"人格","slug":"人格","permalink":"https://www.heson10.com/volantis/tags/%E4%BA%BA%E6%A0%BC/"}]},{"title":"记录一次24H在线要饭系统的搭建","slug":"24h-online-yaofan","date":"2020-09-08T13:44:04.000Z","updated":"2020-10-08T10:12:49.082Z","comments":true,"path":"posts/53612.html","link":"","permalink":"https://www.heson10.com/volantis/posts/53612.html","excerpt":"","text":"先上地址：https://yf.heson10.com 前方高能音乐来袭。。。。注意保护耳朵，可预先试听： Your browser does not support the audio tag. 为什么搭建？ 效果图前台效果图 前三个没付款的家伙，你们有本事倒是付啊！😂 后台 搭建摘要 源码用的是烟雨要饭 源码下载地址：http://cdn.yyhy.me/yaofan.zip 对接的是码支付，特点：支付宝 QQ全免 微信免手续费只需交易额度 码支付地址→点击我 下面是其网站的宣传图： 支付宝开通了商家服务、qq钱包上传了收款码、微信付费签约了并上传收款码 源码需要修改适配码支付，下面简单讲一下 关于源码修改适配问题核心函数php文件：Pay.Class.php主要修改了submit()函数，增加了对码支付支付工具type的判断，以及财主爸爸昵称nick的调用，以及增加码支付一些自用参数，函数代码如下: public function submit($type, $out_trade_no, $notify_url, $return_url, $name, $money, $sitename, $nick) &#123; if ($type == &#39;alipay&#39;) &#123; $typeid = 1; &#125; if ($type == &#39;qqpay&#39;) &#123; $typeid = 2; &#125; if ($type == &#39;wxpay&#39;) &#123; $typeid = 3; &#125; $data = [ &#39;id&#39; =&gt; $this-&gt;pid, &#39;type&#39; =&gt; $typeid, &#39;out_trade_no&#39; =&gt; $out_trade_no, &#39;notify_url&#39; =&gt; $notify_url, &#39;return_url&#39; =&gt; $return_url, &#39;name&#39; =&gt; $name, &#39;price&#39; =&gt; $money, &#39;sitename&#39; =&gt; $sitename, &#39;act&#39; =&gt; 0, &#39;debug&#39; =&gt; 0, &#39;pay_type&#39; =&gt; 1, &#39;pay_id&#39; =&gt; $nick, &#39;param&#39; =&gt; $out_trade_no ]; $string = http_build_query($data); $sign = $this-&gt;getsign($data); return &#39;http://codepay.fateqq.com/create_order/?&#39; . $string . &#39;&amp;token=换成自己的token&#39;; &#125; 其中http://codepay.fateqq.com/create_order/?是码支付API的地址，码支付的token写在token=的后面。 网站端yf.heson10.com/Admin/后台里，要填写码支付的id： Pay/Submit/index.php的修改主要是前面和前面submit()函数相对应。注意这里的https，如果服务器没开ssl，就换成http submit($order[&#39;type&#39;], $order[&#39;trade_no&#39;], &#39;https://&#39; . $_SERVER[&#39;HTTP_HOST&#39;] . &#39;/Pay/Notify/&#39;, &#39;https://&#39; . $_SERVER[&#39;HTTP_HOST&#39;] . &#39;/Pay/Return/&#39;, config(&#39;sitename&#39;) . &#39; - 支付订单&#39;, $order[&#39;money&#39;], config(&#39;sitename&#39;), $order[&#39;nick&#39;]); 修改后附图： Pay/Ruturn/index.php的修改去掉验证数据，增加对订单号的验证，同时调用自定义参数param，用于定位当前订单号。 $data = $_REQUEST; $pay = new Pay(config(&#39;pid&#39;), config(&#39;key&#39;),config(&#39;api&#39;)); if ($data[&#39;pay_no&#39;]) &#123; $order = Db(&#39;select * from yyhy_order where trade_no=&quot;&#39; . $data[&#39;param&#39;] . &#39;&quot;&#39;); if (!$order) exit(&#39;fail&#39;); $order = $order[0]; if ($order[&#39;status&#39;] != 1) &#123; Db(&#39;update yyhy_order set `status`=1,`endtime`=&quot;&#39; . date(&#39;Y-m-d H:i:s&#39;) . &#39;&quot; where trade_no=&quot;&#39; . $data[&#39;param&#39;] . &#39;&quot;&#39;); &#125; alert(&#39;施舍成功，好人有好报！&#39;, &#39;/&#39;); &#125; else &#123; alert(&#39;支付验证失败,施舍失败了，又吃不到饭饭了！&#39;, &#39;/&#39;); &#125; 修改后附图： Pay/Notify/index.php的修改简单验证单号就行，还要具备补单功能： include &#39;../../Core/Common.php&#39;; $data = $_REQUEST; $pay = new Pay(config(&#39;pid&#39;), config(&#39;key&#39;),config(&#39;api&#39;)); if ($data[&#39;pay_no&#39;]) &#123; echo &#39;success&#39;; $order = Db(&#39;select * from yyhy_order where trade_no=&quot;&#39; . $data[&#39;param&#39;] . &#39;&quot;&#39;); if (!$order) exit(&#39;fail&#39;); $order = $order[0]; if ($order[&#39;status&#39;] != 1) &#123; Db(&#39;update yyhy_order set `status`=1,`endtime`=&quot;&#39; . date(&#39;Y-m-d H:i:s&#39;) . &#39;&quot; where trade_no=&quot;&#39; . $data[&#39;param&#39;] . &#39;&quot;&#39;); &#125; &#125; else &#123; echo &#39;fail&#39;; &#125; 写在后面好吧，今天又水了一篇。😂😂 Q:为什么写这么一篇水文？ A:因为弄这个还是花了不少功夫，简单记录一下： 一是做笔记让自己知道修改了哪些东西 二是为需要的小伙伴提供思路。 9月11日更新： 已经不算是水文了，更新的文章加上了修改方法和配图，学会的扣111111111111111，没学会的扣眼珠子！ 9月12日更新： 解决微信、qq支付异步问题。 10月8日更新： 黑石自用修改版本：https://github.com/heson525/yaofan 此版已按教程修改，后台直接填写码支付pid和token即可。 后期打算更新 前台界面二开 待定","categories":[{"name":"技术交流","slug":"技术交流","permalink":"https://www.heson10.com/volantis/categories/%E6%8A%80%E6%9C%AF%E4%BA%A4%E6%B5%81/"}],"tags":[{"name":"搭建","slug":"搭建","permalink":"https://www.heson10.com/volantis/tags/%E6%90%AD%E5%BB%BA/"},{"name":"源码","slug":"源码","permalink":"https://www.heson10.com/volantis/tags/%E6%BA%90%E7%A0%81/"}]},{"title":"如何找一款漂亮的字体并快速应用？iFonts字体助手！","slug":"fonts-manager","date":"2020-09-07T11:24:53.000Z","updated":"2020-09-22T14:36:26.674Z","comments":true,"path":"posts/32383.html","link":"","permalink":"https://www.heson10.com/volantis/posts/32383.html","excerpt":"","text":"嗯，首先声明：这是一篇水文。 今天主要介绍一下这款字体管理软件，iFonts字体管理助手，老规矩，先上在Photoshop里更换字体的效果图： 怎么样？被这个一键更换字体惊呆了吧？无需下载安装字体文件，只需在iFonts中点击你想要的字体即可应用到任何软件中，省去传统的找寻字体→预览字体→下载字体→安装字体→再在软件找寻字体的繁琐步骤。竟然还有这么好用的东西，爱了。 功能介绍 轻松应用管理字体 1、无需下载字体文件，点击即用点击字体一键使用，快速查看字体效果，无需下载安装。 2、右键管理字体分类收藏您喜欢的字体，给喜欢的字体打分类标签。 3、本地字体 自动读取自动读取本地字体，无需额外操作。 一键缺失字体补齐 1、系统自动补齐打开应用软件，再打开iFonts客户端，系统自动补齐字体。 2、点击智能补齐系统自动没有补齐的情况下，点击补齐按钮，可智能后台补齐。 3、上传文件补齐在系统智能都没有补齐都情况下，可上传源文件补齐。 炫酷特效 拖拽即用 1、在线预览 拖拽即用在线输入文案，及时生成拖拽到任何应用软件。 下载地址Mac和Windows都支持，点我下载：点我下载 写在后面同类型软件还有字由（上海驿创信息技术有限公司，注册资金165万元），在字体选择上感觉都差不多，还是推荐ifonts（上海羚狼网络信息科技有限公司，注册资金1000万元）吧，毕竟注册资金高。阿呸，ifonts点一下就能换字体，字由需要先点一下下载，然后才能更换。这感觉这个是最大的不同了，不过你也可以两个都下载，一起用。就像我这样： 说实在的，普通设计者用这个软件，够了！也挺方便！ ok，今天这篇水完了。既然进来看了，就留个言吧！","categories":[{"name":"软件","slug":"软件","permalink":"https://www.heson10.com/volantis/categories/%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"字体","slug":"字体","permalink":"https://www.heson10.com/volantis/tags/%E5%AD%97%E4%BD%93/"}]},{"title":"给博客增加彩色标签云","slug":"color-tags","date":"2020-09-02T11:27:22.000Z","updated":"2020-09-22T14:49:03.987Z","comments":true,"path":"posts/5892.html","link":"","permalink":"https://www.heson10.com/volantis/posts/5892.html","excerpt":"","text":"简介标签云个人认为最重要的作用，是方便用户根据标签分类，进行文章查找，对于提升博客浏览深度很有帮助。同样，归档和分类页面同样有着相同的作用。 至于SEO方面，一是可以丰富博客内链，二是用于提升关键词密度。 鉴于此，通过修改模板可以把标签云和归档放在同一页面下，同时给标签云加上彩色的背景和文字，使它更加的好(zhuang)看(bi)。于是有了下面这个页面： 闲话不多说，下面是教程 教程同样是以volantis主题为例（我是4.0版本）： 合并标签云和归档页面合并之前，需要搞清楚这两个页面是通过哪个文件生成的。 标签云页面：\\themes\\volantis\\layout\\tag.ejs 归档页面：themes\\volantis\\layout\\archive.ejs 下面我们打开tag.ejs页面，复制以下内容（下面是我修改过的，增加了标题）： &lt;article id=&quot;tag&quot; class=&quot;post article white-box reveal &lt;%- theme.custom_css.body.effect.join(&#39; &#39;) %&gt;&quot;&gt; &lt;h2&gt;&lt;i class=&quot;fas fa-cloud&quot;&gt;&lt;/i&gt;&amp;nbsp;标签云&lt;/h2&gt; &lt;div class=&quot;all-tags&quot;&gt; &lt;% let tc = theme.sidebar.widget_library.tagcloud; %&gt; &lt;%- list_tags(&#123;&#125;) %&gt; &lt;/div&gt; &lt;script&gt;colortag();&lt;/script&gt; &lt;br&gt; &lt;%- page.content %&gt; &lt;/article&gt; 到archive.ejs页面： 加到如图这个地方，同时我加了标签云和归档的标题： &lt;h2&gt;&lt;i class=&quot;fas fa-cloud&quot;&gt;&lt;/i&gt;&amp;nbsp;标签云&lt;/h2&gt; &lt;h2&gt;&lt;i class=&quot;fas fa-book-open&quot;&gt;&lt;/i&gt;&amp;nbsp;时间轴&lt;/h2&gt; 添加CSS样式同样直接扔到main.styl里面： .tagred background: #feecf0 color:#cc0f35 .tagyellow background: #f4e9ff color:#8a51c0 .tagblue background: #eef3fc color:#2160c4 .taggreen background: #ebfffc color:#00947e .tagpurple background: #f4e9ff color:#8a51c0 .taggrown background: #fffbeb color:#947600 若有的童鞋不变色的话，请给此css加上最高优先级，如下： .tagred background: #feecf0!important color:#cc0f35!important .tagyellow background: #f4e9ff!important color:#8a51c0!important .tagblue background: #eef3fc!important color:#2160c4!important .taggreen background: #ebfffc!important color:#00947e!important .tagpurple background: #f4e9ff!important color:#8a51c0!important .taggrown background: #fffbeb!important color:#947600!important 增加jQuery函数放到themes\\volantis\\source\\js\\app.js里面 function colortag()&#123; $(&quot;ul.tag-list li&quot;).each(function()&#123; let random = Math.floor(Math.random()*5+1); if(random == 2)&#123; $(this).find(&#39;a&#39;).addClass(&#39;tagred&#39;); &#125; else if ( random == 3 )&#123; $(this).find(&#39;a&#39;).addClass(&#39;tagyellow&#39;); &#125; else if ( random == 4 )&#123; $(this).find(&#39;a&#39;).addClass(&#39;tagblue&#39;); &#125; else if ( random == 5 )&#123; $(this).find(&#39;a&#39;).addClass(&#39;taggreen&#39;); &#125; else if ( random == 2 )&#123; $(this).find(&#39;a&#39;).addClass(&#39;tagpurple&#39;); &#125; else if ( random == 1 )&#123; $(this).find(&#39;a&#39;).addClass(&#39;taggrown&#39;); &#125; &#125;);&#125; colortag(); 此函数主要随机取得标签云的a链接，并添加随机颜色的class，之前class样式已经在css里设置了。 修改完毕！ 最后，发布一条声明： 我的博客即将同步至腾讯云+社区，邀请大家一同入驻：https://cloud.tencent.com/developer/support-plan?invite_code=1md043iqtkk1p","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[]},{"title":"Hexo博客调用Valine最新评论","slug":"hexo-new-comment","date":"2020-08-28T04:53:31.000Z","updated":"2020-10-20T15:28:58.761Z","comments":true,"path":"posts/7207.html","link":"","permalink":"https://www.heson10.com/volantis/posts/7207.html","excerpt":"","text":"简介Hexo作为静态博客，访问速度还是挺快的，但是还是有局限性的，比如调用最新评论、根据点击量和评论数进行热门文章排序等等。最近几天，在icraus主题的魔改版amazing主题上看到了最新评论的调用，适用于valine和gitalk，就想把这个功能移植过来，于是就有了这样一个最初的版本： 感谢辣椒の酱提供的思路，还有水寒大佬的代码。 本文调用Valine最新评论的代码，是在水寒博客的评论调用的基础上，增加了一下功能： 评论者网址 评论定位链接 博主判断 评论头像显示 感觉没啥必要，但功能可以实现 9月4日更新: 修改为保姆级教程，附上修改位置图。见修改思路。 使用方法引用文件这个是leancloud sdk，必须在最开始调用，否则会报错 //cdn.jsdelivr.net/npm/leancloud-storage@3/dist/av-min.js 接下来就是valine.js的调用，这个主题都自带 //cdn.jsdelivr.net/npm/valine@1.4/dist/Valine.min.js js核心代码把功能代码封装成名为 newcomment() 的函数： function newcomment() &#123; function queryLeanCloud(k) &#123; let root = this; let len = arguments.length; if (len == 1) &#123; let notExist = new AV.Query(&quot;Comment&quot;); notExist.doesNotExist(&#39;rid&#39;); let isEmpty = new AV.Query(&quot;Comment&quot;); isEmpty.equalTo(&#39;rid&#39;, &#39;&#39;); let q = AV.Query.or(notExist, isEmpty); if (k === &#39;*&#39;) q.exists(&#39;url&#39;); else q.equalTo(&#39;url&#39;, decodeURI(k)); q.addDescending(&#39;createdAt&#39;); q.addDescending(&#39;insertedAt&#39;); return q; &#125; else &#123; let ids = JSON.stringify(arguments[1]).replace(/(\\[|\\])/g, &#39;&#39;); let cql = `select * from $&#123;root[&#39;config&#39;][&#39;clazzName&#39;]&#125; where rid in ($&#123;ids&#125;) order by -createdAt,-createdAt`; return AV.Query.doCloudQuery(cql) &#125; &#125; var valine = new Valine(&#123; el: &#39;#valine_container_ba（因为主题已经有valine的这些参数了，这里随意填都行）&#39;, app_id: &#39;换成自己的leancloud appid&#39;, app_key: &#39;换成自己的&#39;, placeholder: &#39;&#39;, serverURLs: &#39;换成自己的api&#39; &#125;); //判断博主，heson改为自己的昵称 function bozhu(e)&#123; if (e == &quot;heson&quot;)&#123; nick = e + &#39;[博主]&#39; return nick; &#125; else &#123; return e &#125; &#125; //判断网址 function wangzhi(e)&#123; http = e.slice(0,4) https = e.slice(0,5) if (http == &quot;http&quot; || https == &quot;https&quot; )&#123; return e &#125; else if (e == &quot;&quot; || e == null || e == undefined)&#123; return e &#125; else &#123; e = &#39;http://&#39;+ e return e &#125; &#125; //查询评论 valine.Q(&#39;*&#39;).limit(7).find().then(function (comments) &#123; var hotComments = $(&quot;#hot-comments&quot;); for (var i = 0; i &lt; comments.length; i++) &#123; if (i === 0) &#123; console.log(comments[0]); &#125; var nick = bozhu(comments[i]._serverData.nick); var content = comments[i]._serverData.comment; var newcontent = content.substring(0, 50).replace(/&lt;[^&gt;]+&gt;/g,&quot;&quot;); var url = comments[i]._serverData.url; var link = wangzhi(comments[i]._serverData.link); var updatedAt = timeago(comments[i].updatedAt); var commentId = &#39;#&#39; + comments[i].id; hotComments.append(&#39;&lt;div class=&quot;card-comment-item&quot;&gt;&lt;div class=&quot;item-header-text&quot;&gt;&lt;a href=&quot;&#39;+ link +&#39;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot; class=&quot;newcomment&quot; &gt;&#39; + nick + &#39;&lt;/a&gt;&amp;nbsp;发表于&#39; + updatedAt + &#39;&lt;/div&gt;&lt;div class=&quot;item-text&quot;&gt;&lt;a href=&quot;&#39; + url + commentId +&#39;&quot; rel=&quot;nofollow&quot; style=&quot;color:#717171&quot; class=&quot;comments-detail&quot; &gt;&#39; + newcontent + &#39;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&#39;); &#125; &#125;); &#125;; 注意在判断博主的位置，需要改成自己评论的昵称。 在content.substring(0, 50)处是截断评论字数，这里设置为50个英文字符长度。 通过F12控制台可以看到，这里还能根据邮箱信息，调用头像参数，但我就没写上去了，感觉没什么必要，如图所示： css 代码每个评论底部加上分割线用于区分，发表时间淡化字体颜色，链接hover用的主题的颜色，要改的基本就这些，如果含有头像的话，可以设置鼠标悬停显示，这样效果也挺不错，动手能力强的小伙伴可以自己加： .card-comment-item margin:10px 0 10px 0 border-bottom: 1px solid #e2dada padding-bottom:5px .item-header-text color:#9a9a9a .item-text margin-top:5px padding:0 a.newcomment&#123; font-weight:bold; color:#444; &#125; a.newcomment:hover&#123; color:#36ac91!important; &#125; a.comments-detail:hover&#123; color:#36ac91!important; &#125; 修改思路 核心js代码加载themes\\volantis\\layout\\_third-party\\comments\\valine\\script.ejs 因为开启了pjax，newcomment()的调用放在themes\\volantis\\layout\\_third-party\\pjax\\index.ejs CSS直接丢在main.styl里了 主题配置里面要加上通用文本栏目，核心是id为hot-comments的div框，js要通过这个id进行渲染，代码如下： newcomment: class: text display: [desktop] # [desktop, mobile] header: icon: far fa-comments title: 最新评论 url: content: - &#39;&lt;div id=&quot;hot-comments&quot;&gt;&lt;/div&gt;&#39; 代码更新10月1日： 最新的cuteen主题（hexo移植版）我加上了头像的调用(下面列出修改部分)： //获取头像 function getAvater(mail)&#123; var a = mail.slice(-5,-6) return &#39;//v1.alapi.cn/api/avatar?email=&#39;+mail+&#39;&amp;size=100&#39; &#125; //查询评论 valine.Q(&#39;*&#39;).limit(7).find().then(function (comments) &#123; var hotComments = $(&quot;#hot-comments&quot;); for (var i = 0; i &lt; comments.length; i++) &#123; if (i === 0) &#123; console.log(comments[0]); &#125; var nick = bozhu(comments[i]._serverData.nick); var content = comments[i]._serverData.comment; var newcontent = content.replace(/&lt;[^&gt;]+&gt;/g,&quot;&quot;).substring(0, 50); var url = comments[i]._serverData.url; var mail = getAvater(comments[i]._serverData.mail); var link = wangzhi(comments[i]._serverData.link); var updatedAt = timeago(comments[i].updatedAt); var commentId = &#39;#&#39; + comments[i].id; hotComments.append(&#39;&lt;li class=&quot;px1 pb2 flex items-center&quot;&gt;&lt;img style=&quot;width: 40px;height:40px&quot; class=&quot;circle mx1 listavatar&quot; src=&quot;&#39;+mail+&#39;&quot;&gt;&lt;div class=&quot;w100&quot;&gt;&lt;div class=&quot;flex justify-between&quot;&gt;&lt;div class=&quot;h6 listauthor overflow-hidden&quot; title=&quot;&#39; + nick + &#39;&quot;&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener external nofollow noreferrer&quot; href=&quot;&#39; + link + &#39;&quot;&gt;&#39; + nick + &#39;&lt;/a&gt;&lt;/div&gt;&lt;span class=&quot;h6 mr1 listdate wenzi hang1&quot;&gt;&#39; + updatedAt + &#39;&lt;/span&gt;&lt;/div&gt; &lt;a href=&quot;&#39; + url + commentId +&#39;&quot;&gt;&lt;div class=&quot;h5 list-comcontent overflow-hidden&quot;&gt;&#39; + newcontent + &#39;&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&#39;); &#125; &#125;); 10月18日： 部分童鞋调用成功但是不显示，是因为没有timeago()这个友好显示时间的函数，需把下面代码加在//查询评论代码之前： function timeago(dateTimeStamp) &#123; var minute = 1000 * 60; //把分，时，天，周，半个月，一个月用毫秒表示 var hour = minute * 60; var day = hour * 24; var week = day * 7; var month = day * 30; var now = new Date().getTime(); //获取当前时间毫秒 var diffValue = now - dateTimeStamp; //时间差 if (diffValue &lt; 0) &#123; return; &#125; var minC = diffValue / minute; //计算时间差的分，时，天，周，月 var hourC = diffValue / hour; var dayC = diffValue / day; var weekC = diffValue / week; var monthC = diffValue / month; if (monthC &gt;= 1 &amp;&amp; monthC &lt;= 3) &#123; result = &quot; &quot; + parseInt(monthC) + &quot; 月前&quot; &#125; else if (weekC &gt;= 1 &amp;&amp; weekC &lt;= 3) &#123; result = &quot; &quot; + parseInt(weekC) + &quot; 周前&quot; &#125; else if (dayC &gt;= 1 &amp;&amp; dayC &lt;= 6) &#123; result = &quot; &quot; + parseInt(dayC) + &quot; 天前&quot; &#125; else if (hourC &gt;= 1 &amp;&amp; hourC &lt;= 23) &#123; result = &quot; &quot; + parseInt(hourC) + &quot; 小时前&quot; &#125; else if (minC &gt;= 1 &amp;&amp; minC &lt;= 59) &#123; result = &quot; &quot; + parseInt(minC) + &quot; 分钟前&quot; &#125; else if (diffValue &gt;= 0 &amp;&amp; diffValue &lt;= minute) &#123; result = &quot;刚刚&quot; &#125; else &#123; var datetime = new Date(); datetime.setTime(dateTimeStamp); var Nmonth = datetime.getMonth() + 1 &lt; 10 ? &quot;0&quot; + (datetime.getMonth() + 1) : datetime.getMonth() + 1; var Ndate = datetime.getDate() &lt; 10 ? &quot;0&quot; + datetime.getDate() : datetime.getDate(); result = Nmonth + &quot;-&quot; + Ndate &#125; return result; &#125;","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"评论","slug":"评论","permalink":"https://www.heson10.com/volantis/tags/%E8%AF%84%E8%AE%BA/"},{"name":"折腾","slug":"折腾","permalink":"https://www.heson10.com/volantis/tags/%E6%8A%98%E8%85%BE/"}]},{"title":"用Python给Markdown文件优雅更名","slug":"python-rename-markdown","date":"2020-08-24T07:59:38.000Z","updated":"2020-08-26T13:00:45.994Z","comments":true,"path":"posts/899.html","link":"","permalink":"https://www.heson10.com/volantis/posts/899.html","excerpt":",前期域名从heson.xyz更换到heson10.com，好多图片链接需要重新更换，这里记录了由Python优雅地帮助我们快速更换markdown文件字符的一次过程。","text":",前期域名从heson.xyz更换到heson10.com，好多图片链接需要重新更换，这里记录了由Python优雅地帮助我们快速更换markdown文件字符的一次过程。 简介python真的是太万能了，直接上效果图： 食用方法首页得要安装python的环境，这个网上教程一大堆，自行出门左拐找度娘。 直接上代码： #!/usr/bin/env python # -*- coding:utf-8 -*- import os import re import time def modify_md_content(top): for root, dirs, files in os.walk(top, topdown=False): # 循环文件 for file_name in files: file_name_split = file_name.split(&#39;.&#39;) try: if file_name_split[-1] == &#39;md&#39;: # 找到md文件并且复制一份md文件路径 md_file_path = os.path.join(root, &#39;.&#39;.join(file_name_split)) copy_md_file_path = os.path.join(root, &#39;.&#39;.join([f&#39;&#123;file_name_split[0]&#125;_copy&#39;, file_name_split[1]])) # 打开md文件然后进行替换 with open(md_file_path, &#39;r&#39;, encoding=&#39;utf8&#39;) as fr, \\ open(copy_md_file_path, &#39;w&#39;, encoding=&#39;utf8&#39;) as fw: data = fr.read() # 选择md文件中想要替换的字段 data = re.sub(&#39;https://pic.heson.xyz/img/&#39;, &#39;https://pic.heson10.com/img/&#39;, data) fw.write(data) # 新文件一次性写入原文件内容 # fw.flush() # 删除原文件 os.remove(md_file_path) # 重命名新文件名为原文件名 os.rename(copy_md_file_path, md_file_path) print(f&#39;&#123;md_file_path&#125; done...&#39;) time.sleep(0.5) except FileNotFoundError as e: print(e) time.sleep(0.5) if __name__ == &#39;__main__&#39;: top = r&#39;D:\\hexo\\source\\_posts&#39; modify_md_content(top) 其中由三个变量需要自己修改： 1.https://pic.heson.xyz/img/ 这是原来的字符 2.https://pic.heson10.com/img/这是用来替换的字符 3.D:\\hexo\\source\\_posts这是系统中markdown文件存放的位置 写在后面当然，举一反三，这个不仅能用来替换连续的字符，再加上一点修改，利用正则表达式，替换正括号%note, %反括号等这样一些标签元素，理论上也是可行的。","categories":[{"name":"python","slug":"python","permalink":"https://www.heson10.com/volantis/categories/python/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://www.heson10.com/volantis/tags/markdown/"},{"name":"Python","slug":"Python","permalink":"https://www.heson10.com/volantis/tags/Python/"}]},{"title":"给Hexo Volantis主题添加图片轮播功能","slug":"volantis-pic-lunbo","date":"2020-08-21T04:23:12.000Z","updated":"2020-09-21T05:19:18.853Z","comments":true,"path":"posts/19736.html","link":"","permalink":"https://www.heson10.com/volantis/posts/19736.html","excerpt":"很多网站首页都会有图片轮播效果，给网站的首页加上图片轮播的效果，可以很好的起到广告的作用也可以起到推荐优秀内容的作用。来吧，下面是给Volantis主题加上首页图片轮播的效果。","text":"很多网站首页都会有图片轮播效果，给网站的首页加上图片轮播的效果，可以很好的起到广告的作用也可以起到推荐优秀内容的作用。来吧，下面是给Volantis主题加上首页图片轮播的效果。 效果图以下是1.0版本的效果图，后期说不定会改： 整体思路1.寻找自己喜欢的图片轮播插件； 2.在首页模板archive.ejs中添加图片轮播代码； 3.引用所需的jq库（主题自带）、js和css； 4.修改配置文件，增加轮播开关和图片替换等功能。 教程开始下载JQuery插件我已经上传到网盘： 链接：https://pan.baidu.com/s/1D0ytw6w33uRCyXDX-4ubPA 提取码：q4hg 增加轮播框架 在themes\\volantis\\layout\\_widget中新建main_banner.ejs文件 在main_banner.ejs文件中写入以下代码： &lt;div class=&quot;heson_row&quot;&gt; &lt;div class=&quot;main_banner shadow floatable blur&quot;&gt; &lt;div class=&quot;banners&quot;&gt; &lt;!--加上左右箭头》》--&gt; &lt;div class=&quot;click_left&quot;&gt; &lt;img class=&quot;get_height&quot; onclick=&quot;banner_left_right(&#39;left&#39;)&quot; src=&quot;../img/banner_left.png&quot;&gt; &lt;/div&gt; &lt;div class=&quot;click_right&quot;&gt; &lt;img onclick=&quot;banner_left_right(&#39;right&#39;)&quot; src=&quot;../img/banner_right.png&quot;&gt; &lt;/div&gt; &lt;!--《《加上左右箭头--&gt; &lt;div class=&quot;number&quot;&gt; &lt;div class=&quot;numbers&quot;&gt; &lt;/div&gt; &lt;div style=&quot;clear: both;&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;banner_img&quot;&gt; &lt;!--主题config中配置参数--&gt; &lt;%- theme.plugins.main_banner.pics %&gt; &lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; var speed = &lt;%= theme.plugins.main_banner.speed %&gt;;//配置中调用切换等待时间 var banner_max = &lt;%= theme.plugins.main_banner.banner_max %&gt;;//配置中调用banner总数 &lt;/script&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;hot_post&quot;&gt; &lt;!--热门文章含图片--&gt; &lt;div class=&quot;index-banner&quot;&gt; &lt;a href=&quot;&lt;%- theme.plugins.hot_post.post_one %&gt;&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;&lt;%- theme.plugins.hot_post.pic_one %&gt;&quot; style=&quot;width: 100%;&quot;&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class=&quot;index-banner forpadding&quot;&gt; &lt;a href=&quot;&lt;%- theme.plugins.hot_post.post_two %&gt;&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;&lt;%- theme.plugins.hot_post.pic_two %&gt;&quot; style=&quot;width: 100%;&quot;&gt; &lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; 增加CSS样式和所需图片 把前面网盘里面文件下载，找到img里的箭头图标，放进themes\\volantis\\source\\img 在themes\\volantis\\source\\css\\style.css中，增加代码： if hexo-config(&#39;plugins.main_banner.enable&#39;) @import &#39;_other/main_banner&#39; 在themes\\volantis\\source\\css\\_other文件夹（没有请新建）里增加文件main_banner.styl，并在其添加如下代码： .main_banner width:66% float:left img border-radius: 8px; height:100% @media screen and (max-width: 800px) width:100% height:40vw float:left .hot_post width:33% height:100% float:left padding:0 0px 0 1vw @media screen and (max-width: 800px) width:100% height:50vw float:left margin-top:1vw padding:0 .forpadding padding-top:0.5vw .index-banner position: relative; height:50% .heson_row background-color: none width:100% height:20vw max-height:400px margin-top:20px; @media screen and (max-width: 800px) width:100% height:65vw @media screen and (max-width: $device-2k) width:100% height:25vw .banners width: 100%; height: 100%; margin: 0 auto; position: relative; overflow: hidden; background-color: rgba(200,200,200,0.5) @media screen and (max-width: 600px) width:100% height:40vw float:left .hot_post img &#123; height:100% border-radius:8px &#125; .banners:hover .click_left &#123; display: block; &#125; .banners:hover .click_right &#123; display: block; &#125; .click_left &#123; width: 1vw; position: absolute; z-index: 10; left: 2vw; top:2.5vw; display: none; &#125; .click_right &#123; width: 1vw; position: absolute; z-index: 10; right: 2vw; top:2.5vw; display: none; &#125; .click_left img,.click_right img &#123; width: 100%; height: 100%; &#125; .number &#123; width: 100%; height: 1vw; line-height: 1vw; position: absolute; z-index: 10; text-align: center; bottom: 1.5vw; &#125; .numbers &#123; display: inline-block; &#125; .numbers span &#123; color: white; font-size: 0.7vw; display: block; float: left; width: 1vw; height: 1vw; line-height: 1vw; text-align: center; border-radius: 100vw; margin: 0 0.5vw; padding: 0vw; border: 0.1vw solid white; &#125; .numbers span:hover &#123; cursor: pointer; &#125; .banner_img &#123; width: 100%; height: 100%; &#125; .banner_img img &#123; width: 100%; height: 100%; position: absolute; break-inside: 1; &#125; .l_main .post-list &#123; margin:0 auto!important; float: left; &#125; 增加JS文件 在themes\\volantis\\layout\\layout.ejs中&lt;/body&gt;上加上代码: &lt;% if (theme.plugins.main_banner.enable == true) &#123; %&gt; &lt;script src=&quot;../js/main_banner.js&quot;&gt;&lt;/script&gt; &lt;% &#125; %&gt; 在themes\\volantis\\source\\js中增加main_banner.js，其中代码为： /*图片轮播*/ var banners = 1;//banner显示的第一幅画面1~banner_max范围内任意选择 var timer;//计时器对象 //img标签后直接调用运行 function loads() &#123; var img_num = banner_max $(&quot;.banner_img&quot; + banners).fadeTo(100, 1);//显示设置的第一张banner var numbers_span = &quot;&quot;; for (var i = 1; i &lt;= img_num; ++i) &#123; numbers_span += &#39;&lt;span class=&quot;num&#39; + i + &#39;&quot; onclick=&quot;manual_replace_banner(&#39; + i + &#39;)&quot;&gt;&#39; + i + &#39;&lt;/span&gt;&#39;; //循环赋值到字符串 &#125; $(&quot;.numbers&quot;).html(numbers_span);//设置对应banner的数字 //自适应修改行高 var banners_height = $(&quot;.banners&quot;).height(); $(&quot;.banners&quot;).css(&quot;line-height&quot;, banners_height + &quot;px&quot;); &#125; //窗口事件修改行高 $(window).resize(function () &#123; var banners_height = $(&quot;.banners&quot;).height(); $(&quot;.banners&quot;).css(&quot;line-height&quot;, banners_height + &quot;px&quot;); &#125;); //页面文件加载完毕后自动调用 $(document).ready(function () &#123; banner_number();//banner页数高亮显示 timer = setInterval(auto_replace_banner, speed * 1000);//banner切换计时器 &#125;); //点击左右按钮更换banner function banner_left_right(sj) &#123; var sjs; if (sj == &quot;left&quot;) &#123; if (banners == 1) &#123; sjs = banner_max; &#125; else &#123; sjs = banners - 1; &#125; &#125; else &#123; if (banners == banner_max) &#123; sjs = 1; &#125; else &#123; sjs = banners + 1; &#125; &#125; manual_replace_banner(sjs); &#125; //点击数字切换 function manual_replace_banner(sj) &#123; var bannerz = banners; banners = sj; if (banners == bannerz) &#123; return; &#125; clearInterval(timer);//停止计时器 fade_in_out(bannerz, banners);//调用切换函数 timer = setInterval(auto_replace_banner, speed * 1000);//banner切换计时器重新启动 &#125; //自动更换banner function auto_replace_banner() &#123; var bannerz = banners; if (banners == banner_max) &#123; banners = 1; &#125; else &#123; banners += 1; &#125; fade_in_out(bannerz, banners);//调用切换函数 &#125; //淡入淡出效果方法 function fade_in_out(bannerz, banners) &#123; var out_id = &quot;.banner_img&quot; + bannerz;//淡出标签的ID名 var banner_out = $(out_id);//获取淡出对象 var in_id = &quot;.banner_img&quot; + banners;//淡入标签的ID名 var bannet_in = $(in_id);//获取淡入对象 banner_out.fadeTo(600, 0);//JQuery方法淡出到指定透明度,参数1为速度，参数2为透明度 bannet_in.fadeTo(500, 1);//JQuery方法淡入,参数1为速度，参数2为透明度 banner_number();//调用数字颜色更换 &#125; //banner数字显示 function banner_number() &#123; for (var i = 1; i &lt;= banner_max; i++) &#123; var num_id = &quot;.num&quot; + i; var num_object = $(num_id); if (banners == i) &#123; num_object.css(&quot;color&quot;, &quot;black&quot;); num_object.css(&quot;backgroundColor&quot;, &quot;white&quot;); &#125; else &#123; num_object.css(&quot;color&quot;, &quot;white&quot;); num_object.css(&quot;backgroundColor&quot;, &quot;rgba(0,0,0,0)&quot;); &#125; &#125; &#125; //banner链接跳转 function link(url, mode = true) &#123; if (mode == true) &#123; window.open(url); &#125; else &#123; window.location.href = url; &#125; &#125; loads(); 修改主题配置文件在plugins:下增加如下代码： main_banner: enable: true # 开启图片轮播 banner_max: 3 #图片数量 speed: 2 #切换秒数 pics: # 在此更换图片 &lt;img class=&quot;banner_img（注意这里填1、2、3、4、5）&quot; src=&quot;图片地址&quot; onclick=&quot;link(&quot;跳转地址&quot;,true（代表新窗口打开）)&quot; style=&quot;opacity: 1;&quot;(第一个填1，后面填0)&gt; &#39; &lt;img class=&quot;banner_img1&quot; src=&quot;https://cdn.jsdelivr.net/gh/heson10/pic@master/img/Texture-1.png&quot; onclick=&quot;link(&quot;https://www.heson10.com&quot;,true)&quot; style=&quot;opacity: 1;&quot;&gt; &lt;img class=&quot;banner_img2&quot; src=&quot;https://cdn.jsdelivr.net/gh/heson10/pic@master/img/Texture-2.png&quot; onclick=&quot;link(&quot;https://www.heson10.com&quot;,false)&quot; style=&quot;opacity: 0;&quot;&gt; &lt;img class=&quot;banner_img3&quot; src=&quot;https://cdn.jsdelivr.net/gh/heson10/pic@master/img/Texture-3.png&quot; onclick=&quot;link(&quot;https://www.heson10.com&quot;,true)&quot; style=&quot;opacity: 0;&quot;&gt; &#39; ########### 热门帖子 ############## hot_post: ###### 热门1 ##### pic_one: https://picup.heson10.com/img/spring-boot-learning.png post_one: https://www.heson10.com ###### 热门2 ##### pic_two: https://picup.heson10.com/img/spring-cloud-learning.png post_two: https://www.heson10.com 最终效果","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"图片","slug":"图片","permalink":"https://www.heson10.com/volantis/tags/%E5%9B%BE%E7%89%87/"},{"name":"volantis","slug":"volantis","permalink":"https://www.heson10.com/volantis/tags/volantis/"},{"name":"轮播","slug":"轮播","permalink":"https://www.heson10.com/volantis/tags/%E8%BD%AE%E6%92%AD/"}]},{"title":"优化Volantis主题中文章页面h1—h6标签（排版更清爽）","slug":"volantis-article-hxx-plus","date":"2020-08-16T14:43:41.000Z","updated":"2020-08-16T15:15:14.295Z","comments":true,"path":"posts/35039.html","link":"","permalink":"https://www.heson10.com/volantis/posts/35039.html","excerpt":",Volantis是一个非常优秀的主题，各种模块化的小功能让人眼前一亮。但………这个文章内容页h1、h2、h3等标签感觉都是一个样，加上昏暗的#444颜色，着实让人感觉很着急。特别是今天写这个Valine教程合集的时候，因为标题太多了，眼睛都快瞎了。赶紧优化一下！","text":",Volantis是一个非常优秀的主题，各种模块化的小功能让人眼前一亮。但………这个文章内容页h1、h2、h3等标签感觉都是一个样，加上昏暗的#444颜色，着实让人感觉很着急。特别是今天写这个Valine教程合集的时候，因为标题太多了，眼睛都快瞎了。赶紧优化一下！ 修改h1-h6颜色在hexo\\themes\\volantis\\source\\css\\_layout文件夹下找到article.styl文件 在开头处增加h1-h6颜色参数： //自定义参数设置 $color-h2 = #ad2121 $color-h3 = #0028bb $color-h4 = #ad9521 以上是我加的，一般文章里不用h1标题，我就没有加进去，h5h6用的很少，我也就没加了。 加粗h1-h6同样是article.styl文件，找到h1-h6标签样式处： h1 text-align: $textalign-h1 color: $color-h1 margin-top: $gap-h2 h2 ... 给每个加上font-weight: bold，如下图： h1 font-weight: bold text-align: $textalign-h1 color: $color-h1 margin-top: $gap-h2 h2 font-weight: bold text-align: $textalign-h2 color: $color-h2 margin-top: $gap-h2 h3 font-weight: bold text-align: $textalign-h3 color: $color-h3 margin-top: $gap-h3 h4 font-weight: bold text-align: $textalign-h4 color: $color-h4 margin-top: $gap-h4 h5 font-weight: bold color: $color-h5 margin-top: $gap-paragraph h6 font-weight: bold color: $color-h6 margin-top: $gap-paragraph 或者直接在开头加 h1,h2,h3,h4,h5,h6 font-weight: bold 效果对比图 长文效果图预览：所有关于Valine的配置都在这里【合集】 warning ,自用修改，不喜勿喷。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"优化","slug":"优化","permalink":"https://www.heson10.com/volantis/tags/%E4%BC%98%E5%8C%96/"},{"name":"主题","slug":"主题","permalink":"https://www.heson10.com/volantis/tags/%E4%B8%BB%E9%A2%98/"},{"name":"volantis","slug":"volantis","permalink":"https://www.heson10.com/volantis/tags/volantis/"}]},{"title":"所有关于Valine评论系统的配置都在这里【合集】","slug":"all-about-valine","date":"2020-08-16T02:27:26.000Z","updated":"2020-10-18T12:09:04.795Z","comments":true,"path":"posts/28396.html","link":"","permalink":"https://www.heson10.com/volantis/posts/28396.html","excerpt":"用Hexo博客的小伙伴们对于Valine并不陌生，这款快速、简洁且高效的无后端评论系统，既能快速加载又能提供文章阅读统计，加上一些魔改，可以增加微信与QQ提醒、后台管理、垃圾评论过滤，可以说非常好用。本文主要是介绍配置Valine和可能会遇到的问题【合集】，很多都是搬运过来的教程，文后会附上参考资料。在此感谢这些大佬的参考教程。","text":"用Hexo博客的小伙伴们对于Valine并不陌生，这款快速、简洁且高效的无后端评论系统，既能快速加载又能提供文章阅读统计，加上一些魔改，可以增加微信与QQ提醒、后台管理、垃圾评论过滤，可以说非常好用。本文主要是介绍配置Valine和可能会遇到的问题【合集】，很多都是搬运过来的教程，文后会附上参考资料。在此感谢这些大佬的参考教程。 目录以下标题点击可直接跳转： Hexo设置Valine评论系统 Valine增强版配置：博主标签、评论后台、微信qq提醒、垃圾评论过滤 解决LeanCloud流控问题 如有其他疑问，或者还需要添加的教程，请在评论区留言。 评论区直达 Hexo设置Valine评论系统申请LeanCloud账号Valine 是基于LeanCloud开发的，所以要去LeanCloud申请一个Serverless服务。 1.官网地址：https://leancloud.cn/ （国内版） https://leancloud.app/ （国际版） 国内和国际版功能上没有区别，只不过国版版本绑定后台域名时，需要绑定备案域名 2.注册后登陆，创建一个应用，名称随意填写，开发版即可。 3.进入刚才创建的应用→点击设置→应用Keys→记录AppID、AppKey Volantis主题开启valine评论以下适合3.0版本，4.0建议看官网文档 任何主题都是一样，建议多看看官方文档。看官方文档是配置主题各项功能的第一步。 1.打开主题配置文件，开启Valine评论 2.开启文章阅读数量统计 要在主题配置文件以下地方加上counter和valinecount，才能开启 3.配置好了之后记得要设置安全域名：传送门 Valine官网已经给出了集成了valine评论功能的主题，开启方法跟上面大同小异：1.找到主题评论模块设置；2.按照相关参数进行设置。欢迎各位小伙伴选用支持valine的主题→传送门 Valine增强版配置：博主标签、评论后台、微信qq提醒、垃圾评论过滤Valine增强版主要功能是给Valine评论增加一个后台管理功能，经过DesertsP、zhaojun1998、HCLonely、Dreamy.TZK等多位大佬开发、修改，现在功能逐渐完善并实现邮件回复提醒、微信QQ消息推送、邮件回复模板多样化、垃圾评论过滤等功能，主要基于小康修改的valine-admin ，为了符合自己的口味，专门 博主、小伙伴、访客标签效果如图所示： 博主 小伙伴 访客 下面以Volantis设置为例： 添加js链接、并在配置文件增加参数 使用的是懒人大佬修改的js： https://cdn.jsdelivr.net/gh/HCLonely/Valine@latest/dist/Valine.min.js 与原生的相比，多了以下功能： 添加博主，小伙伴，访客标签添加浏览器和操作系统图标，需 fontawesomeV5 支持邮箱检测更严格增加 QQ 邮箱识别（原版只能通过昵称栏输入 QQ 号识别）meta placeholder 可自定义 使用方法与原生的类似，不同的是可以多设置几个参数： 参数类型说明默认示例tagMetaArray标签要显示的文字[“博主”,“小伙伴”,“访客”][“博主”,“小伙伴”,“访客”]masterArray/Stringmd5 加密后的博主邮箱[][“fc2c9b067f65c9e2d7057ba797f7cfca”]friendsArraymd5 加密后的小伙伴邮箱[][“4a713ec085a4431f15a8da0942656713”]metaPlaceholderObjectmeta placeholder 内容{}{“nick”:“昵称 / QQ 号”,“mail”:“邮箱 (必填)”}verifyBoolean评论时是否需要验证，需 jQuery 支持falsetrue volantis在主题配置文件中可直接更换，如图： MD5加密网站：https://md5jiami.51240.com/ 修改主题文件 找到主题文件volantis\\layout\\_third-party\\comments\\valine\\script.ejs，按图添加增加的配置 代码： master: &#39;[&lt;%= theme.comments.valine.master %&gt;]&#39;, friends: &#39;[&lt;%= theme.comments.valine.friends %&gt;]&#39; 至此，就可以在主题配置文件中，直接填写master和friends参数，通过MD5加密的邮箱地址判断博主和小伙伴了。其他参数、其他主题原理相同： 原理 在配置文件增加参数。 主题模板里增加参数调用。 部署Valine-Admin评论后台创建应用进入leancloud，登陆之前创建的Valine应用 进行部署安利下我用的自己valine-admin-server （基于小康大佬），去掉了一些二次元的东西（本博主年龄偏大，对此不感冒😂）。 地址如下： https://github.com/heson525/Valine-Admin-Server 绑定评论后台域名warning ,国内leancloud绑定域名必须使用备案过的域名 添加参数 变量名 说明 示例 SITE_NAME [必填] 网站名称 黑石博客 SITE_URL [必填] 网站地址，最后不要加 / https://www.heson10.com SMTP_USER [必填] SMTP 服务用户名，一般为邮箱地址。 &#109;&#x61;&#105;&#x6c;&#64;&#x68;&#101;&#x73;&#111;&#110;&#49;&#x30;&#46;&#99;&#111;&#109; SMTP_PASS [必填] SMTP 密码，一般为授权码，而不是邮箱的登陆密码，请自行查询对应邮件服务商的获取方式 XXXXXXXXXX SMTP_SERVICE [新版支持] 邮件服务提供商，内置支持 163 SENDER_NAME [必填] 寄件人名称。 黑石博客 TO_EMAIL [可选] 博主通知收件地址，默认使用 SMTP_USER &#x6d;&#x61;&#x69;&#x6c;&#64;&#x68;&#x65;&#115;&#111;&#x6e;&#49;&#x30;&#46;&#99;&#111;&#109; BLOGGER_EMAIL [可选] 如果设置则作为后台管理员邮箱（/sign-up 页面设置），不设置则默认以 SMTP_USER &#109;&#x61;&#105;&#x6c;&#64;&#x68;&#101;&#115;&#111;&#110;&#49;&#48;&#46;&#x63;&#111;&#109; TEMPLATE_NAME [必填] 设置提醒邮件的主题 custom2 AKISMET_KEY [可选] Akismet Key 用于垃圾评论检测，设为 MANUAL_REVIEW 开启人工审核，留空不使用反垃圾 xxxx ADMIN_URL [可选] 后台管理地址 (非博客地址) https://xxxx.leanapp.cn/ COMMENT [可选] 评论 div 的 ID 名 #comments SCKEY [可选] server 酱的 SCKEY xxx AKISMET_KEY [可选] Akismet Key 用于垃圾评论检测 xxxxxxxxxxxx QMSG_KEY [可选] Qmsg 酱的密钥 xxxxx QQ [可选] Qmsg 酱发送的 qq，不填为全部。支持多个，用英文逗号分隔即可 535668586 DISABLE_EMAIL [可选]，填写则代表停止发送邮件 TRUE QQ_SHAKE [可选]，填写代表发送 QQ 戳一戳 TRUE ICP [可选] 备案信息，直接填写即可。 赣ICP备20008960号 INFO [可选] 自定义信息输出，支持 HTML 代码 test favicon [可选] 网页 favicon 图标 https://cdn.jsdelivr.net/gh/heson525/pic@master/pic/favicon.ico SPAM_WORDS [可选] 需要对屏蔽的关键词，关键词用半角逗号分隔 单号，物流 MAIN_COLOR [可选] 仅针对 custom2 模板主题的主要颜色 #ff9191 MAIN_IMG [可选] 仅针对 custom2 模板主题的头图 https://bing.rthe.net/wallpaper 当使用自定义邮件服务器时（需将 SMTP_SERVICE 变量删掉哦！） 变量名 说明 示例 SMTP_HOST 邮件服务提供商 SMTP 地址，此项需要自行查询或询问其服务商。 smtp.ym.163.com SMTP_PORT 邮件服务提供商 SMTP 端口，此项需要自行查询或询问其服务商。 994 SMTP_SECURE 是否启用加密，默认为 true，一般不需要设置，如有特殊请自行配置。 此项需要自行查询或询问其服务商。 true 此项目的主题字段 模板名称 说明 default 默认主题 rainbow 原版的 rainbow custom1 基于🎉梨花町の肾兄さん🎉的模板 custom2 对 custom1 的改进版 设置位置： 后台管理员注册打开绑定的域名 +/sign-up，例如我的域名为 https://leancloud.heson10.com/，那么我访问的地址就是 https://leancloud.heson10.com/sign-up。接下来设置你的登录信息。 后台评论管理登录地址：https://leancloud.heson10.com 至此，Valine-admin已设置完毕。 微信、QQ提醒微信Server酱 SCKEY 获取官网注册：http://sc.ftqq.com/3.version 用github账户登录 获取SCKEY并填入变量 在Server酱上绑定微信即可 QQmsg 密钥获取官网注册：https://qmsg.zendee.cn/ 最近貌似官网要停业了，已经不开放注册了 建议设置微信提醒。 又被续命了！ 垃圾评论过滤info,Akismet (Automattic Kismet) 是应用广泛的一个垃圾留言过滤系统，其作者是大名鼎鼎的 WordPress 创始人 Matt Mullenweg，Akismet 也是 WordPress 默认安装的插件，其使用非常广泛，设计目标便是帮助博客网站来过滤留言 Spam。有了 Akismet 之后，基本上不用担心垃圾留言的烦恼了。 启用 Akismet 后，当博客再收到留言会自动将其提交到 Akismet 并与 Akismet 上的黑名单进行比对，如果名列该黑名单中，则该条留言会被标记为垃圾评论且不会发布。 只需在AKISMET_KEY变量上填入Akismet Key 申请地址：https://akismet.com/development/ 解决LeanCloud流控问题之前几天后台不能发送邮件通知，查看日志显示”因流控原因，通过定时任务唤醒体验版实例失败，建议升级至标准版云引擎实例避免休眠”，相信大家会碰到这样的问题。 因为好多都是同一时间用定时任务触发容器运行，leancloud服务器不堪重负。 多得理论性知识可直接查看小康大佬的这篇帖子。下面只讲方法： 解决方法之GitHub+Actions大法新建一个Token方法之前教程有写很详细，点这里。不过这里用到的权限很少。勾上： repo admin:repo_hook workflow TOKEN名字请务必使用GITHUB_TOKEN Fork项目地址地址： https://github.com/blogimg/WakeLeanCloud 进入后点击右上角的 fork，这样会fork到自己的账户下。 配置唤醒项目在自己fork的仓库下，进入Secrets ，设置SITE变量 填评论后台的地址，这个leancloud国内版本是自己域名绑定的后台地址。我的是https://leancloud.heson10.com 启动接下来对自己的项目点个 star 就能启动了，启动后请切换到 actions，看看是否运行成功。 在actions选项，可以看是否唤醒成功。 如果你的 GitHub 从来没有用过 actions，那么需要先 “了解”。方法很简单，点击绿色的按钮即可。 然后再取消star，再点击一次就可以看到了。 参考文档 1.Valine官方文档：https://valine.js.org/ 2.懒人大佬：https://blog.hclonely.com/posts/409d3090/ 3.小康博客：https://www.antmoe.com/posts/2380732b/index.html","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"valine","slug":"valine","permalink":"https://www.heson10.com/volantis/tags/valine/"},{"name":"评论","slug":"评论","permalink":"https://www.heson10.com/volantis/tags/%E8%AF%84%E8%AE%BA/"},{"name":"合集","slug":"合集","permalink":"https://www.heson10.com/volantis/tags/%E5%90%88%E9%9B%86/"},{"name":"配置","slug":"配置","permalink":"https://www.heson10.com/volantis/tags/%E9%85%8D%E7%BD%AE/"}]},{"title":"hexo博客访问速度优化：又拍云CDN","slug":"hexo-upyun-CDN","date":"2020-08-13T15:10:20.000Z","updated":"2020-09-21T05:17:10.194Z","comments":true,"path":"posts/30982.html","link":"","permalink":"https://www.heson10.com/volantis/posts/30982.html","excerpt":",为了追求极致的博客访问速度，还是决定把博客挂上又拍云CDN，之前已经申请了又拍云联盟，每个月送15GB的CDN流量，关键还是HTTPS的。访问速度已经在17CE测试过了，全国绿油油的一片，简直不能太香😂","text":",为了追求极致的博客访问速度，还是决定把博客挂上又拍云CDN，之前已经申请了又拍云联盟，每个月送15GB的CDN流量，关键还是HTTPS的。访问速度已经在17CE测试过了，全国绿油油的一片，简直不能太香😂 注册又拍云1.注册又拍云：点我注册 2.加入又拍云联盟：https://www.upyun.com/league 点击申请 3.在网站底部footer处加上又拍云LOGO。又拍云LOGO下载4.耐心等待审核成功通知。 创建CDN服务 在又拍云上创建一个CDN服务，设置如下图： 记住又拍云提供的CNAME地址，去域名提供商解析到加速域名（我的是www.heson10.com ） Coding上的设置先解绑域名，取消强制https，待又拍云CDN挂上HTTPS后在绑定 Github上的设置同样，github上也要取消强制HTTPS 又拍云CDN配置 配置SSL（HTTPS） 1.进入HTTPS设置 2.申请一个免费SSL证书，推荐免费的Let’s Encryppt 的证书 3.开启HTTPS 优化配置 开启 Gzip 和 Brotli，压缩级别调到3 开启页面压缩 HTTP 302 调度 开启TLS1.3，最低建议TLSv1.1 开启 HTTP/2 + Server Push WebP 自适应 开启源站资源迁移 sucess ,这样设置后更快！上效果图——又拍云CDN加速效果 最后至此，又拍云CDN就弄好了，加速很明显。遇到问题，请在下方回复。码字不易请多多支持！ 更新问题8月16日更新： Q:开启了源站资源迁移功能，修改博客css等样式文件，长时间不刷新。 A:开启源站资源迁移功能后，会把CSS 、js等文件迁移到又拍云云存储。要在对应的云存储中，使用 FTP 或者文件管理，删除或上传最新的CSS 、js样式脚本。 8月26日更新： 为防止恶意攻击，经群友提醒，建议开启ip限制和cc防护。 1.IP访问限制： 2.CC防护","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"CDN","slug":"CDN","permalink":"https://www.heson10.com/volantis/tags/CDN/"},{"name":"又拍云","slug":"又拍云","permalink":"https://www.heson10.com/volantis/tags/%E5%8F%88%E6%8B%8D%E4%BA%91/"}]},{"title":"在腾讯云服务器上搭建WordPress博客","slug":"tencent-cloud-build-wordpress-blog","date":"2020-08-12T01:55:11.000Z","updated":"2020-08-13T14:50:19.939Z","comments":true,"path":"posts/44528.html","link":"","permalink":"https://www.heson10.com/volantis/posts/44528.html","excerpt":",准备做个WordPress主题演示站点，后期更新制作的主题会在此演示，准备找个便宜的云服务器作为载体。看到腾讯新用户有活动（99元/年），果断购入。开始搭建Wordpress博客。此篇文章就是边搭边写而来的。","text":",准备做个WordPress主题演示站点，后期更新制作的主题会在此演示，准备找个便宜的云服务器作为载体。看到腾讯新用户有活动（99元/年），果断购入。开始搭建Wordpress博客。此篇文章就是边搭边写而来的。 整体思路 购买云服务器 SSH登陆，使用宝塔面板创建运行环境 搭建WordPress 教程登入腾讯云登陆后可以看到已经购买的实例，推荐买Linux版的实例，方便操作： 重置密码开始创建的随机密码太难记了，重新创建一个自己记得住的密码： 登陆SSH终端点击登陆按钮，输入刚才自己设置的密码，进入SSH终端 创建宝塔面板 宝塔官网：https://www.bt.cn/ 点击 Linux版 按钮，点击立即安装，会出现安装教程，找到Centos（购买的时候会选择此系统）安装命令 在终端输入安装代码（右键→粘贴），然后回车： yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh 等待安装完毕，记住登陆网址、用户名和密码（下图红色部分） 登陆宝塔面板 在浏览器里输入 外网面板地址 ，然后输入用户名和密码 登陆后直接安装LNMP环境： 在等待安装的过程中，在左侧→面板设置栏目里面，修改登陆地址、用户名和密码，方便自己记录 获取WordPress中文官方下载地址：https://cn.wordpress.org/download/ 我下载的是：WordPress 5.4.2 版本 下载后解压缩，找到解压缩后的文件夹。 添加一个网站 在域名解析商那，把你自己的域名解析到面板左上角那个IP地址上 点击面板左侧网站→添加站点 生成网站完毕 搭建WordPress 点击刚才生成的网站 点击上传 把wordpress程序传入根目录，完成后如下图： 可以先把wp博客文件压缩之后，上传压缩包，然后在面板解压 注意：完成后一定和我上图的文件目录要一致，很多新手会出现根目录一个wordpress的文件夹，里面才是我这个文件，如果这样的话，访问地址就会变成：http://绑定域名/wordpress WordPress在线安装 浏览器输入： http://绑定的域名/ 就出现WordPress在线安装程序，选择简体中文→继续→现在就开始！ 输入数据库配置信息 面板上的信息： 我输入的信息： 完成后设置：站点标题、用户名、密码等信息→安装 又一个wordpress站点诞生了！ 腾讯云下的绑定的域名需要备案才能访问！ 此教程适合零基础的新手，不一定是腾讯云，阿里云、百度云，只要是云服务器都适用，码字不易，喜欢的请留言支持一下。","categories":[{"name":"WordPress","slug":"WordPress","permalink":"https://www.heson10.com/volantis/categories/WordPress/"}],"tags":[{"name":"搭建","slug":"搭建","permalink":"https://www.heson10.com/volantis/tags/%E6%90%AD%E5%BB%BA/"},{"name":"博客","slug":"博客","permalink":"https://www.heson10.com/volantis/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"WordPress","slug":"WordPress","permalink":"https://www.heson10.com/volantis/tags/WordPress/"},{"name":"云服务器","slug":"云服务器","permalink":"https://www.heson10.com/volantis/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"Hexo在coding上持续集成","slug":"test","date":"2020-08-09T15:58:28.000Z","updated":"2020-09-21T05:16:48.657Z","comments":true,"path":"posts/27150.html","link":"","permalink":"https://www.heson10.com/volantis/posts/27150.html","excerpt":"能看到这篇文章的时候，代表已经实现hexo在coding上的持续集成","text":"能看到这篇文章的时候，代表已经实现hexo在coding上的持续集成 开始之前 确保已经实现github和coding双部署 确保已经获取github令牌，传送门 确保已经获取coding令牌，传送门 并在根目录如图配置过，传送门 coding新建博客源码仓库并上传博客源码 新建名字为hexoblog的私有空白仓库（不要readme.md初始化），用来存放博客源码 这个是我建立的hexoblog仓库，记住这个地址。 找到博客源码目录： 删除.git文件**(这个是隐藏文件)**后，进入git bash（一般情况主题文件里有一个.git文件也要删除，以免报错） 用git init初始化仓库 因为你不是第一次用git上传，所以不用设置用户名、邮箱，否则： git config --global user.email &quot;you@example.com&quot; git config --global user.name &quot;Your Name&quot; 关联远程仓库 git remote add origin https://令牌用户名:令牌密码@项目地址 这个地方注意一下，因为是私有仓库，这里要填带令牌的https地址，coding令牌获取传送门，如图（绿色文字）： 分行输入一下代码： git add . //添加目录下所有发生改变的文件 git commit -m &#39;上传博客源码（随意填写）&#39; //注释信息一定要写，方便标记 git push -u origin master //本地仓库代码提交至远程仓库 上传后如图所示： 构建持续集成 新建一个持续集成 点最下面的自定义： 开始新建 填写构建代码 代码如下： pipeline &#123; agent any stages &#123; stage(&#39;克隆项目&#39;) &#123; steps &#123; sh &#39;git clone https://你的令牌用户名:令牌密码@e.coding.net/hesonxyz/hexoblog/hexoblog.git（这换成博客源码地址） .&#39; sh &#39;ls -a&#39; &#125; &#125; stage(&#39;安装依赖&#39;) &#123; steps &#123; sh &#39;ls -a&#39; sh &#39;npm install -g hexo-cli&#39; sh &#39;npm install hexo --save&#39; sh &#39;npm install&#39; &#125; &#125; stage(&#39;构建发布&#39;) &#123; steps &#123; sh &#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d&#39; &#125; &#125; &#125; &#125; 触发规则一般是推送到master时触发构建，如图： 后期使用问题 更新博文： 1._post文件夹直接新建md文件； 2.软件（ git小乌龟）推送至仓库，触发自动构建。 （稍后详细介绍） 固定链接问题 因为使用过hexo-abbrlink插件，部署之后如果要修改md文件，记得要在抬头加上abbrlink的值","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"部署","slug":"部署","permalink":"https://www.heson10.com/volantis/tags/%E9%83%A8%E7%BD%B2/"},{"name":"持续集成","slug":"持续集成","permalink":"https://www.heson10.com/volantis/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"},{"name":"coding","slug":"coding","permalink":"https://www.heson10.com/volantis/tags/coding/"}]},{"title":"Vercel+Github+Coding三线部署HEXO,提升访问速度","slug":"vercel-cdn","date":"2020-08-07T09:34:51.000Z","updated":"2020-09-04T15:21:41.808Z","comments":true,"path":"posts/38770.html","link":"","permalink":"https://www.heson10.com/volantis/posts/38770.html","excerpt":"之前已经用github+coding双线部署过博客：传送门。因为我一直用的联通，访问coding还是挺快的，知道有些移动宽带的网友反应博客打不开。我才意识到，coding对移动不太友好。这两天刚好看到colsrch那有一篇关于使用vercel的文章，便在此做下记录！","text":"之前已经用github+coding双线部署过博客：传送门。因为我一直用的联通，访问coding还是挺快的，知道有些移动宽带的网友反应博客打不开。我才意识到，coding对移动不太友好。这两天刚好看到colsrch那有一篇关于使用vercel的文章，便在此做下记录！ 1.用github账号注册vercel 2.克隆github的public仓库 3.域名解析默认和移动线路到vercel提供的ip地址，联通线路cname到coding，境外就直接github 注意不要用qq邮箱，要不然注册不了vercel，换个163或者gmail都行！！！ vercel配置完毕： 未配置vercel前双线部署测速： 配置后三线部署测速： 现在还有更猛的又拍云CDN提升访问速度，你确定不来看一下？传送门","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"CDN","slug":"CDN","permalink":"https://www.heson10.com/volantis/tags/CDN/"},{"name":"vercel","slug":"vercel","permalink":"https://www.heson10.com/volantis/tags/vercel/"},{"name":"加速","slug":"加速","permalink":"https://www.heson10.com/volantis/tags/%E5%8A%A0%E9%80%9F/"}]},{"title":"jsDelivr CDN加速Github仓库图片做博客图床","slug":"github-jsDelivr-pic","date":"2020-08-05T01:54:19.000Z","updated":"2020-08-13T15:01:48.530Z","comments":true,"path":"posts/18256.html","link":"","permalink":"https://www.heson10.com/volantis/posts/18256.html","excerpt":"","text":"简介黑石博客之前已经用七牛云作为博客图床，速度加载都挺快。那为什么还要整一个Github图床呢？ 因为免费啊，放博客里面经常加载的背景图片、头像什么的，不香吗？：） jsDelivr 是国外的一家优秀的公共 CDN 服务提供商，也是首个「打通中国大陆（网宿公司运营）与海外的免费 CDN 服务」。jsDelivr 有一个十分好用的功能——它可以加速 Github 仓库的文件。我们可以借此搭建一个免费、全球访问速度超快的图床。 教程主要思路整个过程比较简单，创建 Github 仓库，并获取 token，填入 PicGo 配置即可完成。 使用 jsDelivr 加速静态文件访问，能够优化博客体验。 在 Github 存储图片，利于博主对于图片的掌控。 使用 PicGo 的原因是因为能够方便地将上传图片到 Github，并直接获取 jsDelivr 的加速后的图片地址。 获取Github Token 之前讲利用cloud studio进行云部署的时候已经说过，详见：https://www.heson10.com/posts/57815.html#GitHub 这个地方需要说明的是，图床token权限不用那么多，只用这几个： 创建Github仓库进入Github，点击右上角➕号 名字我填的是pic，并使用readme.md初始化仓库，建立后仓库如图所示： Picgo配置下载安装就不讲了，详见https://www.heson10.com/posts/38720.html#安装PICGO Github图床配置如下： 关于自定义域名填写我的设定是： https://cdn.jsdelivr.net/gh/heson525/pic@master 换成自己的写法： https://cdn.jsdelivr.net/gh/用户名/仓库名@master 这样就可以了。配置完成后，进行测试。 完成！","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"jsDelivr","slug":"jsDelivr","permalink":"https://www.heson10.com/volantis/tags/jsDelivr/"},{"name":"Github","slug":"Github","permalink":"https://www.heson10.com/volantis/tags/Github/"},{"name":"CDN","slug":"CDN","permalink":"https://www.heson10.com/volantis/tags/CDN/"},{"name":"图床","slug":"图床","permalink":"https://www.heson10.com/volantis/tags/%E5%9B%BE%E5%BA%8A/"}]},{"title":"SEO优化：Hexo-abbrlink插件生成永久固定链接","slug":"hexo-abbrlink","date":"2020-08-01T16:49:02.000Z","updated":"2020-08-13T15:00:02.526Z","comments":true,"path":"posts/31426.html","link":"","permalink":"https://www.heson10.com/volantis/posts/31426.html","excerpt":"前言Hexo默认的静态URL格式是 :year/:month/:day/:title，也就是按照年、月、日、标题来生成固定链接的。如http://xxx.yy.com/2020/07/06/hello-world 这种默认配置的缺点就是一般文件名是中文，导致url链接里有中文出现，这会造成很多问题，也不利于seo，另外就是年月日都会有分隔符。","text":"前言Hexo默认的静态URL格式是 :year/:month/:day/:title，也就是按照年、月、日、标题来生成固定链接的。如http://xxx.yy.com/2020/07/06/hello-world 这种默认配置的缺点就是一般文件名是中文，导致url链接里有中文出现，这会造成很多问题，也不利于seo，另外就是年月日都会有分隔符。 知识点info,百度蜘蛛抓取网页的规则: 对于蜘蛛说网页权重越高、信用度越高抓取越频繁，例如网站的首页和内页。蜘蛛先抓取网站的首页，因为首页权重更高，并且大部分的链接都是指向首页。然后通过首页抓取网站的内页，并不是所有内页蜘蛛都会去抓取。 success,搜索引擎认为对于一般的中小型站点，3层足够承受所有的内容了，所以蜘蛛经常抓取的内容是前三层，而超过三层的内容蜘蛛认为那些内容并不重要，所以不经常爬取。出于这个原因所以permalink后面跟着的最好不要超过2个斜杠。 使用 hexo-abbrlink 插件可以完美解决，具体使用方法如下： 安装插件 安装npm包： npm install hexo-abbrlink --save 修改_config.yml文件中的配置项（记得把原来的permalink:删除掉）: #设置永久链接 permalink: posts/:abbrlink.html # 此处可以自己设置，也可以直接使用 :/abbrlink abbrlink: alg: crc16 #算法： crc16(default) and crc32 rep: dec #进制： dec(default) and hex 关于插件设置Abbrlink插件拥有两项设置选项: alg: 算法(目前支持crc16和crc32算法，默认值是crc16) rep: 形式(生成的链接可以是十六进制格式也可以是十进制格式，默认值是十进制格式) 示例crc16 &amp; hex https://www.heson10.com/posts/55c6.html crc16 &amp; dec https://www.heson10.com/posts/43212.html crc32 &amp; hex https://www.heson10.com/posts/6ec16a2c.html crc32 &amp; dec https://www.heson10.com/posts/1521457752.html danger,注意在生成之前就要改好算法和形式。不然后面再改的话会导致链接不统一。我就踩过坑，但后来是一个文章一个文章删除abbrlink:的值才改过来的，还好我文章不是很多。 话说最近看到了Hexo-abbrlink2这个插件，可以从1.html开始编。 我试用了一下，会导致文章重复，正在研究如何解决。如果能从1开始编写的话，这样更容易看得出写了多少篇文章，当前上传和修改的是哪一篇。后面再研究。 PS：刚使用这个插件后，阅读人数和评论都会变为0，介意慎用！综上所述，这插件适合新站！","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"SEO","slug":"SEO","permalink":"https://www.heson10.com/volantis/tags/SEO/"},{"name":"插件","slug":"插件","permalink":"https://www.heson10.com/volantis/tags/%E6%8F%92%E4%BB%B6/"},{"name":"链接","slug":"链接","permalink":"https://www.heson10.com/volantis/tags/%E9%93%BE%E6%8E%A5/"}]},{"title":"Next7.8主题更换思源宋体","slug":"hexo-next-change-fonts","date":"2020-08-01T01:39:33.000Z","updated":"2020-08-16T15:19:03.442Z","comments":true,"path":"posts/19246.html","link":"","permalink":"https://www.heson10.com/volantis/posts/19246.html","excerpt":"效果 配置Google Fonts在2018年12月7日支持思源宋体。这是一款适合长时间阅读的字体。 国内的网络对 Google 的域名并不友好，建议将fonts.googleapis.com修改为烧饼博客提供的镜像fonts.loli.net","text":"效果 配置Google Fonts在2018年12月7日支持思源宋体。这是一款适合长时间阅读的字体。 国内的网络对 Google 的域名并不友好，建议将fonts.googleapis.com修改为烧饼博客提供的镜像fonts.loli.net&gt; Next7.8主题配置文件_config.ymlfont: enable: true # Uri of fonts host, e.g. https://fonts.googleapis.com (Default). # 使用烧饼博客的CDN host: https://fonts.loli.net # Font options: # `external: true` will load this font family from `host` above. # `family: Times New Roman`. Without any quotes. # `size: x.x`. Use `em` as unit. Default: 1 (16px) # Global font settings used for all elements inside &lt;body&gt;. # 全局字体设置 global: external: true #family: EB Garamond family: Noto Serif SC size: 0.9 # Font settings for site title (.site-title). # .site-title 站点标题字体设置 title: external: true family: Lobster Two size: # Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;). # 文章标题字体设置 headings: external: true #family: Roboto Slab family: EB Garamond size: # Font settings for posts (.post-body). # 文章页面字体设置 posts: external: true #family: Roboto Slab # Font settings for &lt;code&gt; and code blocks. # 代码块字体设置 codes: external: true family: Source Code Pro 改为我上面的配置就可以了。解释说明已经在上方注释，按需修改。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"字体","slug":"字体","permalink":"https://www.heson10.com/volantis/tags/%E5%AD%97%E4%BD%93/"},{"name":"next","slug":"next","permalink":"https://www.heson10.com/volantis/tags/next/"},{"name":"美化","slug":"美化","permalink":"https://www.heson10.com/volantis/tags/%E7%BE%8E%E5%8C%96/"},{"name":"更换","slug":"更换","permalink":"https://www.heson10.com/volantis/tags/%E6%9B%B4%E6%8D%A2/"}]},{"title":"hexo删除algolia搜索增加本地搜索功能","slug":"delete-algolia-build-local-search","date":"2020-07-29T15:43:22.000Z","updated":"2020-08-13T14:57:38.415Z","comments":true,"path":"posts/2635.html","link":"","permalink":"https://www.heson10.com/volantis/posts/2635.html","excerpt":"简介之前博客里面用的是algolia第三方搜索功能，后来发现有几个问题：一是js加载时间特别慢；二是每次增加文章都要重新提交一下如下代码： export HEXO_ALGOLIA_INDEXING_KEY=your apiKey hexo algolia 这个就是最不能忍的原因。于是准备换上local search（本地搜索服务）。","text":"简介之前博客里面用的是algolia第三方搜索功能，后来发现有几个问题：一是js加载时间特别慢；二是每次增加文章都要重新提交一下如下代码： export HEXO_ALGOLIA_INDEXING_KEY=your apiKey hexo algolia 这个就是最不能忍的原因。于是准备换上local search（本地搜索服务）。 本地搜索很快，效果如下： 关闭Algolia搜索服务 在站点配置文件中，注释掉原有的algolia： 在主题配置文件中，关闭algolia服务： 卸载algolia插件： npm uninstall hexo-algolia 增加Local Search本地搜索服务 安装插件： npm install hexo-generator-searchdb --save 在站点配置文件_config.yml`中添加: search: path: search.xml field: post format: html limit: 10000 在主题配置文件_config.yml中启用： 最后记得hexo三连，如果直接hexo g -d的话，搜索关键字不会变红 hexo cl &amp; hexo g &amp; hexo d 哦不对，一键三连是这样的： hexo clean &amp;&amp; hexo g -d","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"algolia","slug":"algolia","permalink":"https://www.heson10.com/volantis/tags/algolia/"},{"name":"搜索","slug":"搜索","permalink":"https://www.heson10.com/volantis/tags/%E6%90%9C%E7%B4%A2/"},{"name":"本地","slug":"本地","permalink":"https://www.heson10.com/volantis/tags/%E6%9C%AC%E5%9C%B0/"}]},{"title":"帮助网友搭建WORDPRESS博客","slug":"help-build-wp-blog","date":"2020-07-29T05:14:29.000Z","updated":"2020-08-13T14:51:04.517Z","comments":true,"path":"posts/8045.html","link":"","permalink":"https://www.heson10.com/volantis/posts/8045.html","excerpt":"","text":"前些天加了一个WordPress的博客群，在里面帮助一些萌新小白网友解答一些关于网站建设方面的问题，中途有几个网友加了我的微信。 今天呢，有个网友在搭建wp的过程中遇到了一些问题（域名访问不了，wp无法安装，http500错误等等），向我请教。微信教了下，发现还是把这位网友整的有点云里雾里的。我就干脆要了他阿里云的账号，直接帮他整起来了！ 熟悉的界面，熟悉的配方，熟悉的感觉。 仿佛又回到了十年前，刚整wp时的那种感觉。哈哈！ 搭建网站这种事，我很乐于帮助大家的，对于我来说应该算举手之劳的事情！ 结果…结果…. 这位可爱的网友给我发了个红包！！！！！！！！ 感谢这位网友的大红包！ 其实，我想说的是，真的没必要这样，网友之间互相帮助是应该的。这些是我力所能及的事情，简简单单动了几下鼠标的事情。 古人云：三人行，必有我师焉。我有你不知道的，你也有我不知道。我们相互帮助，这样以来大家都得到了成长和进步，何乐而不为呢？","categories":[{"name":"WordPress","slug":"WordPress","permalink":"https://www.heson10.com/volantis/categories/WordPress/"}],"tags":[{"name":"搭建","slug":"搭建","permalink":"https://www.heson10.com/volantis/tags/%E6%90%AD%E5%BB%BA/"},{"name":"帮助","slug":"帮助","permalink":"https://www.heson10.com/volantis/tags/%E5%B8%AE%E5%8A%A9/"},{"name":"网友","slug":"网友","permalink":"https://www.heson10.com/volantis/tags/%E7%BD%91%E5%8F%8B/"},{"name":"博客","slug":"博客","permalink":"https://www.heson10.com/volantis/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"Coding Studio实现hexo的云环境部署","slug":"hexo-cloud-bushu-coding-studio","date":"2020-07-27T04:27:58.000Z","updated":"2020-08-27T14:55:56.174Z","comments":true,"path":"posts/57815.html","link":"","permalink":"https://www.heson10.com/volantis/posts/57815.html","excerpt":"这些天一直在思考一个问题，怎么才能让hexo想wordpress一样随时随地写博客？ 昨天上午研究了一番，发现还真的可以。思路是这样的：我的博客是在GitHub和Coding上双部署，想要云端写博客就必须拿到两个平台的最强token，把token直接写在根目录_config.yml里面，就可以直接在云端推送。","text":"这些天一直在思考一个问题，怎么才能让hexo想wordpress一样随时随地写博客？ 昨天上午研究了一番，发现还真的可以。思路是这样的：我的博客是在GitHub和Coding上双部署，想要云端写博客就必须拿到两个平台的最强token，把token直接写在根目录_config.yml里面，就可以直接在云端推送。 token的获取方式GitHub 登陆GitHub，右上角设置 输入密码后创建一个全权限的token，名称随意 记录好此token，后面放在配置文件里面GitHub的推送代码就是： Coding token 登录Coding，打开个人设置 新建一个令牌 授予全权限 注意Coding的令牌是有用户名的 记录好用户名和token，后面放在配置文件里面Coding的推送代码就是： 上图后面GitHub和Coding的两个仓库，均为存放网页的两个仓库。 修改根目录_config.yml文件找到deploy，按我这个图把两个token填进去 Coding-Cloud Studio的建立新建一个存放博客源码的Coding仓库 注意不要用readme.md初始化此仓库，此仓库是用来接收博客源码的仓库。 上传博客源码到新建的Coding仓库 Git bash here 进入博客目录 输入git init命令 输入添加此目录的命令 git add . 提交修改的命令git commit -m &#39;上传博客源码&#39; 关联远程仓库 这个是刚才我们创建的仓库，鉴于之前部署在coding的时候已经上传了公钥，在此可以直接用ssh的方式上传。传送门：Hexo在GitHub和Coding双线部署教程 git remote add origin 新建立的仓库ssh地址 git push -u origin master 建立Cloud Studio工作空间 进入官网：https://cloudstudio.net/ ，直接用Coding的账号登录。 新建一个工作空间 进入Cloud Studio空间 在Cloud Studio里安装Hexo博客刚克隆过来的仓库里面只有以下文件 所以还需要安装Hexo，这里就跟本地安装一样，输入安装命令。 在终端里输入： npm install -g hexo-cli npm install hexo --save npm install 这时候就可以hexo g看看能不能生成文章，此时就会建立public文件夹 设置一下git标识 git config --global user.email &quot;you@example.com&quot; git config --global user.name &quot;Your Name&quot; 推送到GitHub Pages和Coding Pages hexo d 到此我们就可以用Cloud Studio在线写文章了 写在后面 整个思路再里一遍： 1.在Cloud Studio搭一个hexo云环境 2.利用GitHub和Coding 的TOKEN 云推送至pages页面 值得注意的问题： 1.Cloud Studio云环境里编写的内容记得同步到hexo博客源码仓库 2.如果在本地编写文章后，也要记得同步推送至hexo博客源码仓库（这里其实可以设置自动部署，后面再弄。） 3.时刻注意备份！时刻注意备份！时刻注意备份！","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"部署","slug":"部署","permalink":"https://www.heson10.com/volantis/tags/%E9%83%A8%E7%BD%B2/"},{"name":"cloud","slug":"cloud","permalink":"https://www.heson10.com/volantis/tags/cloud/"},{"name":"coding-studio","slug":"coding-studio","permalink":"https://www.heson10.com/volantis/tags/coding-studio/"}]},{"title":"hexo+next设置微信打赏功能","slug":"wechat-pay","date":"2020-07-24T15:43:29.000Z","updated":"2020-08-13T14:52:05.088Z","comments":true,"path":"posts/47102.html","link":"","permalink":"https://www.heson10.com/volantis/posts/47102.html","excerpt":"Next主题里面直接集成了这个功能，可以直接打开就行。","text":"Next主题里面直接集成了这个功能，可以直接打开就行。 生成打赏码打开微信→右上角➕号→收付款→赞赏码→设置后保存图片→裁剪为1:1的png图像并命名为wechatpay.png→放在hexo/public/images/文件夹里 开启打赏功能在next主题设置里面找到如下代码： reward_settings: # If true, reward will be displayed in every article by default. enable: true #是否开启打赏功能 animation: true #微信支付跳动动画开关 comment: 你的鼓励是我更新的动力！ #页面上留言信息 reward: wechatpay: /images/wechatpay.png #alipay: /images/alipay.png #paypal: /images/paypal.png #bitcoin: /images/bitcoin.png 按照上面设置就行。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"next","slug":"next","permalink":"https://www.heson10.com/volantis/tags/next/"},{"name":"微信","slug":"微信","permalink":"https://www.heson10.com/volantis/tags/%E5%BE%AE%E4%BF%A1/"},{"name":"打赏","slug":"打赏","permalink":"https://www.heson10.com/volantis/tags/%E6%89%93%E8%B5%8F/"}]},{"title":"给hexo博客添加fancybox图片灯箱功能","slug":"pic-fancybox","date":"2020-07-23T11:43:31.000Z","updated":"2020-08-13T14:53:01.958Z","comments":true,"path":"posts/16996.html","link":"","permalink":"https://www.heson10.com/volantis/posts/16996.html","excerpt":"","text":"效果图 教程 首先安装依赖： git clone https://github.com/theme-next/theme-next-fancybox3 themes/next/source/lib/fancybox 安装后打开主题配置文件，找到fancybox fancybox: true 完毕！","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"图片","slug":"图片","permalink":"https://www.heson10.com/volantis/tags/%E5%9B%BE%E7%89%87/"},{"name":"灯箱","slug":"灯箱","permalink":"https://www.heson10.com/volantis/tags/%E7%81%AF%E7%AE%B1/"},{"name":"幻灯","slug":"幻灯","permalink":"https://www.heson10.com/volantis/tags/%E5%B9%BB%E7%81%AF/"},{"name":"fancybox","slug":"fancybox","permalink":"https://www.heson10.com/volantis/tags/fancybox/"}]},{"title":"hexo添加相关文章功能","slug":"related-popular-posts","date":"2020-07-23T11:31:40.000Z","updated":"2020-08-13T14:52:43.718Z","comments":true,"path":"posts/49693.html","link":"","permalink":"https://www.heson10.com/volantis/posts/49693.html","excerpt":"","text":"效果预览 教程该功能由 hexo-related-popular-posts 插件提供，在站点根目录下Git中执行以下命令安装依赖： npm install hexo-related-popular-posts --save next主题配置文件里面已经有参数，直接搜索related_posts: related_posts: enable: true title: 相关文章推荐 # 属性的命名 display_in_home: false # false代表首页不显示 params: maxCount: 5 # 最多5条 #PPMixingRate: 0.0 # 相关度 #isDate: true # 是否显示日期 #isImage: false # 是否显示配图 #isExcerpt: false # 是否显示摘要 修改完毕！","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"相关文章","slug":"相关文章","permalink":"https://www.heson10.com/volantis/tags/%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0/"},{"name":"推荐","slug":"推荐","permalink":"https://www.heson10.com/volantis/tags/%E6%8E%A8%E8%8D%90/"}]},{"title":"解决Hexo分类页面访问404问题","slug":"file-ignorecase","date":"2020-07-23T04:37:16.000Z","updated":"2020-08-13T14:57:17.924Z","comments":true,"path":"posts/60484.html","link":"","permalink":"https://www.heson10.com/volantis/posts/60484.html","excerpt":"","text":"问题访问Hexo分类页面会出现404页面。 之前我Hexo是用的大写，后来改成hexo了，即H改成h了。hexo博客正常生成，本地访问没问题，但是上传到github和coding上就访问不了分类页面。 原因git 检查不到文件大小写的变更，默认设置为忽略文件名大小写。 解决办法 git 博客根目录 ，输入： cd .deploy_git vim .git/config 如图： 按下键盘上Insert按钮，进入编辑模式 光标移到ignorecase把其布尔值改为 false (上图我已经改过的) 按Esc退出编辑模式，再按两下大写字母Z，退出 使用HEXO再次生成及部署 搞定！","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"分类","slug":"分类","permalink":"https://www.heson10.com/volantis/tags/%E5%88%86%E7%B1%BB/"},{"name":"404","slug":"404","permalink":"https://www.heson10.com/volantis/tags/404/"},{"name":"页面","slug":"页面","permalink":"https://www.heson10.com/volantis/tags/%E9%A1%B5%E9%9D%A2/"},{"name":"访问","slug":"访问","permalink":"https://www.heson10.com/volantis/tags/%E8%AE%BF%E9%97%AE/"}]},{"title":"关于Hexo+next主题的SEO优化","slug":"about-hexo-next-SEO","date":"2020-07-22T11:32:37.000Z","updated":"2020-08-13T14:58:17.653Z","comments":true,"path":"posts/10441.html","link":"","permalink":"https://www.heson10.com/volantis/posts/10441.html","excerpt":"","text":"问题用了hexo博客中的next主题，发现主题中的&lt;meta property=&quot;og:description&quot; content=&quot;xxxxxxx&quot;&gt; 网站描述内容，跟头像下面的描述是一样的。（我自己的已经改过来了，下面用别人的博客举个例子） 上面两张图红框都是显示的description，此描述可以在hexo配置中修改。 一般弄过SEO的童鞋都知道，网站描述一般都要用一段话来说明此网站的性质或者写一点简短而又有特点的描述性语言，但头像下方的文字可作为你的座右铭或者你喜欢的一句话，所以这两者不能一样。 如何修改？header里面的description我们就不用管它了，直接hexo配置文件里面设置。 主要是修改侧边栏sidebar里面头像下的内容。看下效果图： 找到hexo\\themes\\next\\layout_partials\\sidebar\\site-overview.swig中以下代码： &lt;div class=&quot;site-description&quot; itemprop=&quot;description&quot;&gt; &lt;/div&gt; 删除这个标签里面的内容，改成以下内容： &lt;div id=&quot;binft&quot;&gt;&lt;/div&gt; &lt;script&gt; var binft = function (r) &#123; function t() &#123; return b[Math.floor(Math.random() * b.length)] &#125; function e() &#123; return String.fromCharCode(94 * Math.random() + 33) &#125; function n(r) &#123; for (var n = document.createDocumentFragment(), i = 0; r &gt; i; i++) &#123; var l = document.createElement(&quot;span&quot;); l.textContent = e(), l.style.color = t(), n.appendChild(l) &#125; return n &#125; function i() &#123; var t = o[c.skillI]; c.step ? c.step-- : (c.step = g, c.prefixP &lt; l.length ? (c.prefixP &gt;= 0 &amp;&amp; (c.text += l[c.prefixP]), c.prefixP++) : &quot;forward&quot; === c.direction ? c.skillP &lt; t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction = &quot;backward&quot;, c.delay = a) : c.skillP &gt; 0 ? (c.text = c.text.slice(0, -1), c.skillP--) : (c.skillI = (c.skillI + 1) % o.length, c.direction = &quot;forward&quot;)), r.textContent = c.text, r.appendChild(n(c.prefixP &lt; l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d) &#125; var l = &quot;&quot;, o = [&quot;人生在勤，不索何获&quot;, &quot;一个伪IT技术型骨灰级米粉&quot;,&quot;日日待明日,万事成蹉跎&quot;,&quot;丈夫志四海，万里犹比邻&quot;,&quot;还在看这里吗？&quot;,&quot;能不能别看了？&quot;,&quot;文章更精彩....&quot;].map(function (r) &#123; return r + &quot;&quot; &#125;), a = 2, g = 1, s = 5, d = 75, b = [&quot;rgb(110,64,170)&quot;, &quot;rgb(150,61,179)&quot;, &quot;rgb(191,60,175)&quot;, &quot;rgb(228,65,157)&quot;, &quot;rgb(254,75,131)&quot;, &quot;rgb(255,94,99)&quot;, &quot;rgb(255,120,71)&quot;, &quot;rgb(251,150,51)&quot;, &quot;rgb(226,183,47)&quot;, &quot;rgb(198,214,60)&quot;, &quot;rgb(175,240,91)&quot;, &quot;rgb(127,246,88)&quot;, &quot;rgb(82,246,103)&quot;, &quot;rgb(48,239,130)&quot;, &quot;rgb(29,223,163)&quot;, &quot;rgb(26,199,194)&quot;, &quot;rgb(35,171,216)&quot;, &quot;rgb(54,140,225)&quot;, &quot;rgb(76,110,219)&quot;, &quot;rgb(96,84,200)&quot;], c = &#123; text: &quot;&quot;, prefixP: -s, skillI: 0, skillP: 0, direction: &quot;forward&quot;, delay: a, step: g &#125;; i() &#125;; binft(document.getElementById(&#39;binft&#39;)); &lt;/script&gt; 中间的文字部分，自己修改好了。 这样就改好了，hexo配置中自由写描述，两者不影响，各自独立。这样SEO也更加地友好。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"SEO","slug":"SEO","permalink":"https://www.heson10.com/volantis/tags/SEO/"},{"name":"优化","slug":"优化","permalink":"https://www.heson10.com/volantis/tags/%E4%BC%98%E5%8C%96/"}]},{"title":"Typora+Picgo+七牛云实现图片快速上传","slug":"markdown-tool-typora","date":"2020-07-21T04:16:35.000Z","updated":"2020-10-29T08:33:20.806Z","comments":true,"path":"posts/38720.html","link":"","permalink":"https://www.heson10.com/volantis/posts/38720.html","excerpt":"软件预览试了很多工具，最后还是发现typora这款markdown编辑器是真的香，界面清新、即时预览、配合Picgo和七牛云等图床可以实现图片快速上传。 预览效果：","text":"软件预览试了很多工具，最后还是发现typora这款markdown编辑器是真的香，界面清新、即时预览、配合Picgo和七牛云等图床可以实现图片快速上传。 预览效果： 怎么样？看到这个操作速度没有？这样编辑博客文章就跟写word文档一样方便。 如何使用图片快速上传建立七牛云图床七牛云的空间大小有10GB，流量也是10GB/月，对于个人博客来讲已经完全够用。但要说明的是，七牛云的免费空间会有一个30天的临时域名，后续要使用的话，必须绑定自己已经备案过的域名才行。如果域名没有备案，就用其他的图床吧，github\\gitee\\SM.MS等等。 七牛云官网注册：https://www.qiniu.com/ 添加一个对象存储 创建一个存储空间 提取密钥 记住AK和SK两个密钥，后面要使用的。 安装PICGO picgo下载地址： https://github.com/Molunerfinn/picgo/releases 就用最新版吧，免得他每次提醒自动更新。（选exe那个版本） 配置Picgo图床在picgo图床设置里面，打开七牛云图床设置，如图设置： 然后确认，并设置为默认图床。 Typora配置picgo图片上传功能 下载Typora：https://www.typora.io/ 安装后，点击软件工具栏，文件 –&gt; 偏好设置 –&gt; 图像 –&gt; 配置picgo 点击验证图片上传选项后 可以看到127.0.0.1后面有个端口号36677，这个端口号一定要和picgo里面设置的端口号要一致！否则上传不成功！ 到这里全部设置完毕，可以测试一下！看是不是跟我开始那个操作图一样丝滑！：） 10月29日更新： 现在我用的是又拍云的图床。原理跟这个是一样的。又拍云每个月有免费的https额度，而七牛云没有。","categories":[{"name":"软件","slug":"软件","permalink":"https://www.heson10.com/volantis/categories/%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://www.heson10.com/volantis/tags/markdown/"},{"name":"tools","slug":"tools","permalink":"https://www.heson10.com/volantis/tags/tools/"},{"name":"typora","slug":"typora","permalink":"https://www.heson10.com/volantis/tags/typora/"},{"name":"picgo","slug":"picgo","permalink":"https://www.heson10.com/volantis/tags/picgo/"},{"name":"图片","slug":"图片","permalink":"https://www.heson10.com/volantis/tags/%E5%9B%BE%E7%89%87/"},{"name":"上传","slug":"上传","permalink":"https://www.heson10.com/volantis/tags/%E4%B8%8A%E4%BC%A0/"}]},{"title":"Hexo+next主题自定义友情链接页面","slug":"hexo-next-friend-links","date":"2020-07-19T15:30:50.000Z","updated":"2020-08-13T14:55:25.873Z","comments":true,"path":"posts/3243.html","link":"","permalink":"https://www.heson10.com/volantis/posts/3243.html","excerpt":"","text":"新增links页面hexo new page links 打开在/source/links里面刚生成的index.md文件，在头部加上type: &quot;links&quot;，如图： 代码如下： --- title: 朋友圈 date: 2020-07-19 22:28:52 type: &quot;links&quot; --- 配置menu在主题配置文件menu下添加： links: /links/ || fa fa-link 在\\themes\\next\\languages\\zh-CN.yml文件中menu下增加中文描述 links: 朋友圈 新增links.swig页面在\\themes\\next\\layout新建links.swig，内容如下： &#123;% block content %&#125; &#123;######################&#125; &#123;### LINKS BLOCK ###&#125; &#123;######################&#125; #links&#123; margin-top: 5rem; &#125; .links-content&#123; margin-top:1rem; &#125; .link-navigation::after &#123; content: \" \"; display: block; clear: both; &#125; .card &#123; width: 300px; font-size: 1rem; padding: 10px 20px; border-radius: 4px; transition-duration: 0.15s; margin-bottom: 1rem; display:flex; &#125; .card:nth-child(odd) &#123; float: left; &#125; .card:nth-child(even) &#123; float: right; &#125; .card:hover &#123; transform: scale(1.1); box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04); &#125; .card a &#123; border:none; &#125; .card .ava &#123; width: 3rem!important; height: 3rem!important; margin:0!important; margin-right: 1em!important; border-radius:4px; &#125; .card .card-header &#123; font-style: italic; overflow: hidden; width: 236px; &#125; .card .card-header a &#123; font-style: normal; color: #2bbc8a; font-weight: bold; text-decoration: none; &#125; .card .card-header a:hover &#123; color: #d480aa; text-decoration: none; &#125; .card .card-header .info &#123; font-style:normal; color:#a3a3a3; font-size:14px; min-width: 0; text-overflow: ellipsis; overflow: hidden; white-space: nowrap; &#125; 👨‍🎓 跟着大佬走，成为小大佬 &#123;% for link in theme.defaultlinks %&#125; &#123;&#123; link.nickname &#125;&#125; &#123;&#123; link.info &#125;&#125; &#123;% endfor %&#125; 🍭 五湖四海的朋友们 &#123;% for link in theme.friendslinks %&#125; &#123;&#123; link.nickname &#125;&#125; &#123;&#123; link.info &#125;&#125; &#123;% endfor %&#125; &#123;&#123; page.content &#125;&#125; &#123;##########################&#125; &#123;### END LINKS BLOCK ###&#125; &#123;##########################&#125; &#123;% endblock %&#125; 修改page.swig修改\\themes\\next\\layout\\page.swig文件，在开头的block title内部两个elif之间加上： &#123;% elif page.type === 'links' and not page.title %&#125; &#123;&#123; __('title.links') + page_title_suffix &#125;&#125; 如图所示： 在下面 page.content的前面加上： &#123;% elif page.type === 'links' %&#125; &#123;% include 'links.swig' %&#125; 为了引入刚才新建的links界面。如图： 修改links/index.md这个是友链页面的申请信息，可以按照自己想法修改： --- title: 朋友圈 date: 2020-07-19 22:28:52 type: &quot;links&quot; --- ### 申请要求： 1、内容持续更新且可以稳定访问 2、网页整洁无繁杂广告推广 3、博客主页被百度或谷歌等搜索引擎收录 4、头像能够快速加载 5、拥有独立域名 ### 友链声明： 1、本站会定期清理无法访问的友链，如果更换了链接信息请至评论区留言，谢谢合作！ 2、本站会定期查看双方是否互为友链，如果取消本站友链，本站也会将您的友链移除 ### 申请方式： 先将本站的友链添加到您的友链，相关信息如下 然后按照以下格式在本站留言区留言，待博主为您添上友链 &gt;名 称：Heson 头像链接：https://cdn.jsdelivr.net/gh/heson525/pic@master/pic/avatar03.png 主页链接：https://heson.xyz 说明信息：人生在勤，不索何获 修改主题_config配置文件在结尾处添加： # 友情链接 defaultlinks: - nickname: Heson # 昵称 avatar: https://cdn.jsdelivr.net/gh/heson525/pic@master/pic/avatar03.png # 头像地址 site: https://www.heson10.com #友链地址 info: 人生在勤，不索何获 friendslinks: - nickname: Heson # 昵称 avatar: https://cdn.jsdelivr.net/gh/heson525/pic@master/pic/avatar03.png # 头像地址 site: https://www.heson10.com #友链地址 info: 人生在勤，不索何获 defaultlinks:对应的是links.swig文件中 👨‍🎓 跟着大佬走，成为小大佬段落，此处链接写大佬的博客；friendslinks:对应的是links.swig文件中 🍭 五湖四海的朋友们段落，此处链接写朋友的博客。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"页面","slug":"页面","permalink":"https://www.heson10.com/volantis/tags/%E9%A1%B5%E9%9D%A2/"},{"name":"友情链接","slug":"友情链接","permalink":"https://www.heson10.com/volantis/tags/%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/"}]},{"title":"Hexo博客添加canvas-nest几何条纹动态背景","slug":"hexo-next-canvas-nest","date":"2020-07-19T14:01:37.000Z","updated":"2020-08-01T17:26:17.960Z","comments":true,"path":"posts/795.html","link":"","permalink":"https://www.heson10.com/volantis/posts/795.html","excerpt":"","text":"进入主题文件夹以我用的next主题为例子 cd themes/next 从github下载canvas-nest把canvas-nest下载到next目录下的ource/lib目录里 git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest 在主题开启配置在NexT配置文件_config.yml中配置开启canvas_nest 在配置文件中找到canvas_nest，将enable设置成true，还可以自定义颜色、透明度、数量等。 canvas_nest: enable: true #开启canvas onmobile: true # 是否在移动站开启canvas color: &#39;34,34,34&#39; # 颜色值 opacity: 0.5 # 数值 0~1 ，线条透明度 zIndex: -1 # 背景叠层大小，-1代表放在文章的后面 count: 200 # 线条数量 完毕，hexo clean &amp; hexo g &amp; hexo d","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"next","slug":"next","permalink":"https://www.heson10.com/volantis/tags/next/"},{"name":"canvas","slug":"canvas","permalink":"https://www.heson10.com/volantis/tags/canvas/"},{"name":"美化","slug":"美化","permalink":"https://www.heson10.com/volantis/tags/%E7%BE%8E%E5%8C%96/"}]},{"title":"hexo+next设置网站运行时间","slug":"blog-set-time","date":"2020-07-18T16:04:17.000Z","updated":"2020-10-01T15:36:07.052Z","comments":true,"path":"posts/46662.html","link":"","permalink":"https://www.heson10.com/volantis/posts/46662.html","excerpt":"效果预览： 1.找到hexo\\themes\\next\\layout\\_partials\\footer.swig添加如下代码：","text":"效果预览： 1.找到hexo\\themes\\next\\layout\\_partials\\footer.swig添加如下代码： &lt;!--添加网站运行时间 --&gt; &#123;%- if (theme.running_time && theme.running_time.enable && theme.running_time.create_time)&#123; %&#125; &lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt; &lt;script&gt; function createtime() &#123; var now = new Date(); function createtime() &#123; var grt= new Date(&#123;%- theme.running_time.create_time %&#125;);//此处修改你的建站时间或者网站上线时间 now.setTime(now.getTime()+250); days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 )&#123;hnum = &quot;0&quot; + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = &quot;0&quot; + mnum;&#125; seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = &quot;0&quot; + snum;&#125; document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;; document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;; &#125; setInterval(&quot;createtime()&quot;,250); &lt;/script&gt; &#123;%- &#125; %&#125; &lt;!-- 添加网站运行时间 --&gt; 2.修改主题配置文件_config.yml添加如下代码 # 网站运行时间，格式形如：“本站已安全运行 12 天 11 小时 16 分 31 秒” # Runing Time running_time: enable: true create_time: &#39;07/05/2020 17:38:00&#39; #此处修改你的建站时间或者网站上线时间 完毕！","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"运行","slug":"运行","permalink":"https://www.heson10.com/volantis/tags/%E8%BF%90%E8%A1%8C/"},{"name":"时间","slug":"时间","permalink":"https://www.heson10.com/volantis/tags/%E6%97%B6%E9%97%B4/"}]},{"title":"Hexo中next主题启用文章置顶功能","slug":"top-post","date":"2020-07-16T14:26:22.000Z","updated":"2020-08-13T14:52:24.122Z","comments":true,"path":"posts/38719.html","link":"","permalink":"https://www.heson10.com/volantis/posts/38719.html","excerpt":"","text":"方法很简单，仓库已经有代码，直接安装 $ npm uninstall hexo-generator-index --save $ npm install hexo-generator-index-pin-top --save 然后在需要置顶的文章的Front-matter中加上top: true即可。比如我这篇文章： title: 写在最开始 tags: - 网站 - 爱好 - 热爱 author: Heson date: 2020-07-06 12:28:00 top: true 然后加上置顶的标识： 打开：/themes/next/layout/_macro目录下的post.swig文件，定位到&lt;div class=&quot;post-meta&quot;&gt;标签下，插入如下代码： &#123;% if post.top %&#125; 置顶 | &#123;% endif %&#125; 上面的green可以换成你喜欢的颜色，如red、yellow或者用十六进制的颜色代码#53ffcc 都可以。 搞定。效果如下：","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"美化","slug":"美化","permalink":"https://www.heson10.com/volantis/tags/%E7%BE%8E%E5%8C%96/"},{"name":"置顶","slug":"置顶","permalink":"https://www.heson10.com/volantis/tags/%E7%BD%AE%E9%A1%B6/"}]},{"title":"为Hexo增加algolia搜索功能","slug":"hexo-algolia-search","date":"2020-07-13T14:47:33.000Z","updated":"2020-08-13T14:57:04.019Z","comments":true,"path":"posts/51572.html","link":"","permalink":"https://www.heson10.com/volantis/posts/51572.html","excerpt":"今天给博客增加了algolia站内搜索功能，中途有个地方整了半天，现在把遇到的坑填了。 功能预览： 注册algolia 官网注册：https://www.algolia.com/ ，或者直接用GitHub账号登陆，登陆地址： https://www.algolia.com/users/sign_in 我就是用GitHub账号登陆的 新建一个index","text":"今天给博客增加了algolia站内搜索功能，中途有个地方整了半天，现在把遇到的坑填了。 功能预览： 注册algolia 官网注册：https://www.algolia.com/ ，或者直接用GitHub账号登陆，登陆地址： https://www.algolia.com/users/sign_in 我就是用GitHub账号登陆的 新建一个index 左侧侧边栏找到API Keys，进入后，点击ALL API Keys（这点比较重要，因为前面的API不可用，要自己新建一个拥有增加删除权限的api key） 点开新增api keys后，如上图所示，重要的是在ACL里面增加删除和新增Object的权限（按理说只用这两个权限就行，我加了好多，如上上图所示），然后填上indices栏目中的index name，可以选刚才你创建的那个index，其余默认就行。 这样你就有了一个api key（如红框马赛克），保存好，后面要用的。 安装algolia搜索功能 在Hexo工程根目录下执行下面的语句。 npm install hexo-algolia --save 在Hexo根目录的_config.yml中加入algolia的配置，注意改成前面API Keys页面相应配置。 这里注意apikey填写刚才你创建的那个有权限的，其余的在your api keys里面可以找到 algolia: applicationID: &#39;your applicationID&#39; apiKey: &#39;your apiKey&#39; adminApiKey: &#39;your adminApiKey&#39; indexName: &#39;your indexName&#39; chunkSize: 5000 上传数据到algolia，下面your apiKey替换为刚才自己创建拥有权限的api export HEXO_ALGOLIA_INDEXING_KEY=your apiKey hexo algolia 注意这里需要先设置环境变量，否则会报 ERROR [Algolia] Please set an `HEXO_ALGOLIA_INDEXING_KEY` environment variable to enable content indexing. ERROR &gt;&gt; Read https://npmjs.com/hexo-algolia#api-key for more informations. 看到如下信息，证明成功了，可以去algolia网站上查看，索引已经上传成功了。 INFO [Algolia] Testing HEXO_ALGOLIA_INDEXING_KEY permissions. INFO Start processing INFO [Algolia] Identified 5 pages and posts to index. INFO [Algolia] Indexing chunk 1 of 1 (50 items each) INFO [Algolia] Indexing done. 到Hexo开启algolia我使用的Next主题，开启只需要一步，到主题目录下的_config.yml，修改为开启。 algolia_search: enable: true 以下是我的设置： algolia_search: enable: true hits: per_page: 10 labels: input_placeholder: Search for Posts hits_empty: &quot;我们没有找到任何搜索结果: $&#123;query&#125;&quot; hits_stats: &quot;找到$&#123;hits&#125;条结果（用时$&#123;time&#125; ms）&quot; ok，hexo d -g！","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"algolia","slug":"algolia","permalink":"https://www.heson10.com/volantis/tags/algolia/"},{"name":"搜索","slug":"搜索","permalink":"https://www.heson10.com/volantis/tags/%E6%90%9C%E7%B4%A2/"}]},{"title":"Hexo+Next7.X 博客美化教程合集","slug":"hexo-next7-more-beautiful","date":"2020-07-12T14:42:19.000Z","updated":"2020-09-21T05:17:57.346Z","comments":true,"path":"posts/52911.html","link":"","permalink":"https://www.heson10.com/volantis/posts/52911.html","excerpt":"","text":"写在最前面这两天刚认识Hexo博客系统，人就像着了魔一样，跟当年倒腾WordPress博客一样，每天想着怎么能让自己的博客更好看、更实用、更有人气。 要想达到上面的要求，首先得从美化自己的博客开始… 话说网上教程也特别多，在此我想做个合集，一来作为自己的记录，二来能给后来的朋友留点东西，把自己在倒腾过程中踩得坑也一并说清楚，让后面的童鞋更快的入门。 （关于博客搭建→点击传送门：用hexo+github pages+独立域名搭建个人博客） 此教程贴持续更新，没写完的地方请见谅。 关于Next主题安装next主题的官网地址：https://theme-next.iissnan.com/ 下载next在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码： $ cd your-hexo-site $ git clone https://github.com/iissnan/hexo-theme-next themes/next 启用next与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。 theme: next 到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。 验证主题首先启动 Hexo 本地站点，并开启调试模式（即加上 --debug），整个命令是 hexo s --debug。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出： INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop. 主题设定Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是： Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白 Mist - Muse 的紧凑版本，整洁有序的单栏外观 Pisces - 双栏 Scheme，小家碧玉似的清新 Gemini - 我现在用的这款 Scheme 的切换通过更改 主题配置文件，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。 # Schemes #scheme: Muse #scheme: Mist #scheme: Pisces scheme: Gemini 教程开始设置背景图片 找到CSS存放位置： 新建 _other.styl 文件，用来存放自己后面添加的CSS样式 打开主要CSS文件 main.styl ，引入_other.styl CSS样式文件，添加如下代码： //个人添加 @import &quot;_other.styl&quot; 插入博客背景的CSS样式到_other.styl //背景图片 body &#123; background:url(https://pic.heson10.com/img/image-20200712231958010.png); background-repeat: no-repeat; background-attachment:fixed; background-size: cover; background-position:50% 50%; &#125; 代码中url的链接就是你想要替换的博客背景图片链接，建议上传到图床，然后粘贴上去。 设置半透明效果插入半透明的CSS样式到_other.styl //博客内容透明化 //文章内容的透明度设置 .content-wrap &#123; opacity: 0.9; &#125; //侧边框的透明度设置 .sidebar &#123; opacity: 0.9; &#125; //菜单栏的透明度设置 .header-inner &#123; background: rgba(255,255,255,0.9); &#125; //搜索框（local-search）的透明度设置 .popup &#123; opacity: 0.9; &#125; 0.9代表透明度为90%，这个可以自己设置，当然不要设置的太低，要不文章看不见了。 博主头像实现圆形并旋转360°方法一：适用next7.x 以上（2020.7.14更新）直接在主题配置文件里面找到rounded和rotated设置成true： 完毕！ 方法二：适用老版本next 找到作者头像CSS样式位置： \\hexo\\themes\\next\\source\\css\\_common\\outline\\sidebar\\sidebar-author.styl 添加如下代码到**.site-author-image这个样式的括号里面** //头像圆形 border-radius: 50%; webkit-border-radius: 1.4s all; moz-transition: 1.4s all; ms-transition: 1.4s all; transition: 1.4s all; //鼠标经过头像旋转360度 -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out; 括号外面添加： img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg); &#125; /* Z 轴旋转动画 */ @-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125; &#125; @-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125; &#125; @keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125; &#125; 如图所示： 效果完成。 为Hexo增加algolia搜索功能传送门：为Hexo增加algolia搜索功能 Next主题启用文章置顶功能传送门：Hexo中next主题启用文章置顶功能 添加canvas-nest几何条纹动态背景传送门：Hexo博客添加canvas-nest几何条纹动态背景 关于Hexo+next主题的SEO优化Typora+Picgo+七牛云实现图片快速上传Hexo+next主题自定义友情链接页面hexo+next设置网站运行时间首页顶部留白顶部留白个人感觉更好看，同样找到_other.styl（之前自己加的，可以看此篇文章开头） 效果： 加上如下代码： //首页顶部留白 .container&#123;margin-top:10px;&#125; 首页banner渐变色效果： 修改_other.styl //首页banner渐变色 .site-brand-container &#123; background: linear-gradient(200deg, #2e80a5, #0c0c0b); &#125; 颜色可以自己选 设置所有边框为圆角打开文件，路径：\\themes\\next\\source\\css_variables\\Gemini.styl ，添加以下代码： ps：Gemini是我用的样式，用哪个样式修改哪个文件 // 修改主题页面布局为圆角 $border-radius-inner = 15px 15px 15px 15px; $border-radius = 15px; 阅读人数改为热度文章阅读人数是由LeanCloud提供的PageView服务。在主题配置里面设置好参数后，可直接开启。 1.找到themes\\next\\layout\\_macro\\post.swig文件，找到代码： &#123;# LeanCloud PageView #&#125; &#123;%- if theme.leancloud_visitors.enable or (theme.valine.enable and theme.valine.appid and theme.valine.appkey and theme.valine.visitor) %&#125; &lt;span id=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot; class=&quot;post-meta-item leancloud_visitors&quot; data-flag-title=&quot;&#123;&#123; post.title &#125;&#125;&quot; title=&quot;&#123;&#123; __('post.views') &#125;&#125;&quot;&gt; &lt;span class=&quot;post-meta-item-icon&quot;&gt; &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; &lt;/span&gt; &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123; __('post.views') + __('symbol.colon') &#125;&#125;&lt;/span&gt; &lt;span class=&quot;leancloud-visitors-count&quot;&gt;&lt;/span&gt; &lt;/span&gt; &#123;%- endif %&#125; 在 后面加上 ℃ 2.找到\\themes\\next\\languages\\zh-CN.yml 更改views的中文译名为 热度 SEO优化：Hexo-abbrlink插件生成永久固定链接Next7.8主题更换思源宋体hexo删除algolia搜索增加本地搜索功能Coding Studio实现hexo的云环境部署给hexo博客添加fancybox图片灯箱功能hexo添加相关文章功能","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"美化","slug":"美化","permalink":"https://www.heson10.com/volantis/tags/%E7%BE%8E%E5%8C%96/"},{"name":"主题","slug":"主题","permalink":"https://www.heson10.com/volantis/tags/%E4%B8%BB%E9%A2%98/"},{"name":"教程","slug":"教程","permalink":"https://www.heson10.com/volantis/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"小米10降级回稳定版教程","slug":"mi10-andriod11-bug","date":"2020-07-12T02:43:34.000Z","updated":"2020-08-13T14:53:27.016Z","comments":true,"path":"posts/14925.html","link":"","permalink":"https://www.heson10.com/volantis/posts/14925.html","excerpt":"7月9日看到小米10推出了最新的MIUI内测包，作为400勇士的我，毫不犹豫的升级了手机。 然后····然后我后悔了。 真的是各种bug： 屏幕有时候不能动，只能重启解决； 微信看不了word文档，说是存储设备有问题，只能重启； 状态栏有花屏现象； 各种app不兼容（这个问题还好，内测版，正常） 等等bug，论坛上反馈了好多 作为骨灰级米粉的我，遇到bug很正常，但有bug不能代表不能用吧，最让人忍受不了的就是手机卡住不动….. 实在没办法，现在只好线刷回去了，放上教程：","text":"7月9日看到小米10推出了最新的MIUI内测包，作为400勇士的我，毫不犹豫的升级了手机。 然后····然后我后悔了。 真的是各种bug： 屏幕有时候不能动，只能重启解决； 微信看不了word文档，说是存储设备有问题，只能重启； 状态栏有花屏现象； 各种app不兼容（这个问题还好，内测版，正常） 等等bug，论坛上反馈了好多 作为骨灰级米粉的我，遇到bug很正常，但有bug不能代表不能用吧，最让人忍受不了的就是手机卡住不动….. 实在没办法，现在只好线刷回去了，放上教程： 注意：小米10降级线刷需要解BL锁 下载线刷包 进入官网 https://www.miui.com/download.html 选机型 下载完整刷机包 刷机包解压，解压后如图所示 下载刷机通用工具 下载地址：http://www.miui.com/shuaji-393.html 直接下载地址：http://bigota.d.miui.com/tools/MiFlash2018-5-28-0.zip （如果失效，请按上面方法下载） 刷机流程 在手机上操作：关机状态下，同时按住 音量下+电源键 进入Fastboot模式将手机USB连接电脑。 线刷包下载完成后解压，打开线刷包文件夹，复制地址栏地址如下图。 刷机工具下载完成后安装（如遇到系统安全提示请选择允许安装），打开XiaoMiFlash.exe将复制的内容粘贴到蓝色区域位置。点击黄色圈选部分加载设备，刷机程序会自动识别手机，点击红色圈选部分刷机开始刷机。有BL锁机型默认会选择“全部删除并LOCK”，没有BL锁机型需要手动选择“全部删除”（如下图绿框显示） 然后是漫长的等待 看见结果中显示success，代表刷机成功。 关于手机BL锁 什么是BL锁？ BL锁是BootLoader的简称，就是在操作bai系统内核du运行之前运行的一段小程序。在嵌入式操作系统中，BootLoader是在操作系统内核运行之前运行。可以初始化硬件设备、建立内存空间映射图，从而将系统的软硬件环境带到一个合适状态，以便为最终调用操作系统内核准备好正确的环境。 小米手机解锁 1.进入解锁官网： http://www.miui.com/unlock 2.下载小米助手 http://zhushou.xiaomi.com/ 3.按照工具提示进行解锁。 这个地方要说明一下，手机绑定小米账号后，要进入开发者模式里面的设备解锁状态： 新解锁用户绑定后，要等168个小时才能刷机，所以还没解锁的小伙伴可以提前申请绑定进行解锁。 结束语跨版本升级的首个更新包bug会很多，不建议更新。建议过半个月更新后面的开发版，这个版本通常会修复第一个版本中的bug。 好了，我要重新开始安装应用了。","categories":[{"name":"MIUI","slug":"MIUI","permalink":"https://www.heson10.com/volantis/categories/MIUI/"}],"tags":[{"name":"小米","slug":"小米","permalink":"https://www.heson10.com/volantis/tags/%E5%B0%8F%E7%B1%B3/"},{"name":"刷机","slug":"刷机","permalink":"https://www.heson10.com/volantis/tags/%E5%88%B7%E6%9C%BA/"},{"name":"bug","slug":"bug","permalink":"https://www.heson10.com/volantis/tags/bug/"}]},{"title":"Hexo在GitHub和Coding双线部署教程","slug":"github-coding-bushu","date":"2020-07-11T10:34:34.000Z","updated":"2020-09-21T05:18:40.692Z","comments":true,"path":"posts/54971.html","link":"","permalink":"https://www.heson10.com/volantis/posts/54971.html","excerpt":"","text":"写在前面使用GitHub+coding双托管博客，可以提升国内访问博客的速度。总的来讲就是：国内访问coding的服务器，国外访问GitHub的服务器，访问速度更快。 教程创建Coding仓库1.官网注册 https://coding.net/ 2.打开密钥，之前部署GitHub的时候已经用过，可以用everything这个搜索神器搜索一下id_rsa.pub文件，复制其内容。 打开Coding的个人设置，SSH公钥，添加公钥，名称自定，粘贴刚才复制的公钥，添加好后如下图。 新建一个代码托管项目：项目名称任意，但是最好设置与自己网站有关的，好辨认；启用README.md（不要勾选）、公开源代码等都默认，公开源代码勾选后别人可以访问你的仓库，不建议勾选；项目描述选填。 博客部署到Coding仓库1.打开你自己新建的仓库，点击克隆➡模式选ssh➡复制地址 2.打开站点配置文件，在下图位置添加仓库链接： 因为是GitHub+Coding的双托管，所以仓库设置要按照我上图的格式配置。 修改完之后部署就会将 public 目录推送到 Coding 上博客仓库的 master 分支。 部署命令hexo d，部署后仓库如下： 开启 Coding Pages 服务把博客上传部署到仓库后，我们还要在Coding生成静态页面。coding pages我找了半天，终于找到了，项目设置放在最下面也是醉了。 开启教程如下： 进入仓库，进入项目设置（注意这个在左下角!!我找了半天），项目与成员，右侧功能开关，开启 持续部署即可 开启后就会在仓库的左侧看到此功能，点击静态网站，新建，填写网站名称，其它默认，保存。 开启服务后会出现访问地址，第一次新建之后应该只有一个地址，如下图红框，我的第一个地址为 http://3pt4q7.coding-pages.com ，我有三个地址(http://heson.xyz http://www.heson.xyz)是因为配置了自己的域名。 访问类似红框的地址，如果成功了会跳转到你的博客首页。与GitHub部署类似，此网址相当于你博客的另一个访问地址。我们后面要把所有的这些网址都解析到同一个域名上。 添加自定义域名我用的是阿里云的域名，打开域名控制台界面，我们要解析域名。 添加解析记录：记录类型为CNAME，主机记录为www，解析线路选择默认，记录值为你 Hexo 项目所部署到 Coding Pages 的访问地址，我的为http://3pt4q7.coding-pages.com 。（@记录表示直接用顶级域名，比如heson.xyz，而www记录表示用www.heson.xyz 作为域名，当然短一点更酷，如果对域名邮箱没什么要求的话，就用短域名好点。否者加上www） 之后为了让国内访问Coding服务器，国外访问GitHub服务器，我们修改一下之前的GitHub自定义域名，把GitHub的解析线路修改为境外，Coding的解析线路还是为默认。最后我的配置完成后如下图： Coding绑定自定义域名：打开Coding的仓库，进入静态网站，点击设置，进入设置。 把刚才解析的域名添加到自定义域名中，添加后把不带www的设置为首选，把www的非首选域名勾选跳转至首选，很重要，这样第三方的统计数据才会准确。 SSL证书我还没开始弄，先这样设置吧，后面弄了再讲。 OK！现在我们就算完成了GitHub+Coding双托管博客了。 速度对比访问网站：http://ping.chinaz.com/ 国内访问Coding服务器： 国内访问GitHub服务器： 一对比我们就可以看到Coding服务器在国内访问快多了，而GitHub服务器在国内访问很多都是超时。速度提升非常明显。 现在还有更猛的三线部署，你确定不来看一下？传送门","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"搭建","slug":"搭建","permalink":"https://www.heson10.com/volantis/tags/%E6%90%AD%E5%BB%BA/"},{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"部署","slug":"部署","permalink":"https://www.heson10.com/volantis/tags/%E9%83%A8%E7%BD%B2/"}]},{"title":"用hexo+github pages+独立域名搭建个人博客","slug":"use-hexo-githubpages-build-blog","date":"2020-07-08T11:28:00.000Z","updated":"2020-11-11T09:43:30.453Z","comments":true,"path":"posts/121.html","link":"","permalink":"https://www.heson10.com/volantis/posts/121.html","excerpt":"摘要用hexo建立博客这个教程，查阅了很多资料，自己倒腾了两三个小时弄好了。 现在简单记录下，以便不时之需。 基本环境 Window10 Node.js （点击进入官网下载）博主版本号为 Node.js 12.18.2 LTS 在 Windows 环境下安装 Node.js 非常简单，仅须到官网下载安装文件并执行即可完成安装。 Git（点击进入官网下载）版本号为2.27.0","text":"摘要用hexo建立博客这个教程，查阅了很多资料，自己倒腾了两三个小时弄好了。 现在简单记录下，以便不时之需。 基本环境 Window10 Node.js （点击进入官网下载）博主版本号为 Node.js 12.18.2 LTS 在 Windows 环境下安装 Node.js 非常简单，仅须到官网下载安装文件并执行即可完成安装。 Git（点击进入官网下载）版本号为2.27.0 GIT安装教程 安装Hexo (版本4.2.1) 在任意盘新建hexo文件夹并右键，选择Bit Bash Here，如图： 输入安装hexo命令 npm install -g hexo-cli 接下来我们对hexo 进行初始化 hexo init hexo g 或者hexo generate hexo s 或者hexo server 这样就可以到http://localhost:4000/ 查看了 2020/11/9日更新： 如果hexo init出现下面报错： 要挂上梯子才能继续。 Github 设置GitHub的优点GitHub是基于git实现的代码托管。git可能是目前最好用的版本控制系统了，非常受欢迎。 GitHub可以免费使用，并且快速稳定。 Github上面的世界很精彩，用久了你的眼界会开阔很多。 什么是GitHub Pages？Github Pages可以被认为是用户编写的、托管在github上的静态网页。GitHub Pages 本用于介绍托管在GitHub的项目，不过，由于他的空间免费稳定，用来做搭建一个博客再好不过了。 为什么使用GitHub Pages可以绑定你的域名(但只能绑定一个)。 简单快捷，使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦. 相关操作 注册GitHub账号在创建博客之前，当然必须有GitHub的帐号，该帐号将用来创建项目，默认的域名username.github.com/projectName 中的username也要用到这个帐号。（请记住username，之后会多次用到） 注意：下面涉及到的一些命令凡是更用户名和项目名有关的一律会用这里的username和projectName代替，注意替换 访问：https://www.github.com/ 注册你的username和邮箱，邮箱十分重要，GitHub上很多通知都是通过邮箱的。比如你的主页上传并构建成功会通过邮箱通知，更重要的是，如果构建失败的话也会在邮件中说明原因。 创建项目仓库在创建博客之前，还需要用已有的帐号创建一个项目，上面那个链接的projectName将是这里即将创建的项目名称。 在Git中，项目被称为仓库(Repository)，仓库顾名思义，当然可以包含代码或者非代码。将来我们的网页或者模板实际上都是保存在这个仓库中的。 登录后，访问https://github.com/new ，创建仓库如下图： 注意Repository name这里一定要填写username.github.io 这样后面才能使用Github Pages功能。 每个帐号只能有一个仓库来存放个人主页，而且仓库的名字必须是username/username.github.io，这是特殊的命名约定。你可以通过http://username.github.io 来访问你的个人主页。 创建了仓库后，我们就需要管理它，无论是管理本地仓库还是远程仓库都需要Git客户端；Git客户端实际上十分强大，它本身就可以offline的创建本地仓库，而本地仓库和远程仓库之间的同步也是通过Git客户端完成的。 配置SSH上传文件需要配置ssh key，不然无法上传。首先先检查一下本地是否已经存在ssh key,在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。 ls -al ~/.ssh 设置你的那么和email（如果你安装git时已经有了这步操作就跳过，name可以随意，但最好设置成你的github的name防止遗忘。邮箱与你的github邮箱没什么关系，但是最好写为同一个，好记住） git config --global user.name &quot;name&quot; git config --global user.email &quot;&lt;your email&gt;&quot; 生成ssh密钥输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车： ssh-keygen -t rsa -C &quot;XXXXX@163.com&quot; 一路回车就可以了，如果设置了密码就记住。 这一步在~/.ssh/下生成了两个文件id_rsa 和 id_rsa.pub 获取keycat ~/.ssh/id_rsa.pub 然后拷贝key（key是以ssr（应该是这个开头的）开头 你的邮箱结尾的一长串字符。 在GitHub上添加SSH密钥在https://github.com/settings/keys 下 add new ssh key title可随意填写，key就是我们拷贝的key 接下来测试一下是否配置正确。 输入一下命令： ssh git@github.com 成功后大概会出现一下内容：（可能会有部分不一致） 部署到GitHub 配置_config.yml编辑 你所建立的hexo文件夹中_config.yml（用记事本打开）修改deployment部分。 自行替换成你的GitHub的名称。注意：每个：后面必须有一个空格！！！ 安装Git包npm install hexo-deployer-git --save 部署到GitHub上hexo deploy 或者 hexo d 现在我们可以通过访问 http://username.github.io/ 来访问我们自己的博客啦,可以看到我们的博客已成功搭建，接下来就是一些主题的优化和配置呢。 如何添加一篇文章新建一篇博文可通过以下的命令 hexo new HEXO主题我用的是Next 7，版本更新很快，插件也很多，样式很简单，折腾的东西也很多，确实非常喜欢。 具体主题的使用，后面再做记录。https://hexo.io/themes/ 这里可以下载主题。 通过搜索框搜索自己喜欢的主题。 关于Markdown编辑器推荐使用Typora这一款，试用了一段时间，非常符合我的预期。 加上现在Typora可以联合Picgo实现快速上传图片到图床，简直是神器。放出截图： Typora截图 Picgo截图 Typora联合Picgo功能设置截图 关于这个markdown编辑器，出了一个教程贴，大家可以看看： Typora+Picgo+七牛云实现图片快速上传","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"博客","slug":"博客","permalink":"https://www.heson10.com/volantis/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"域名","slug":"域名","permalink":"https://www.heson10.com/volantis/tags/%E5%9F%9F%E5%90%8D/"}]},{"title":"写在最开始","slug":"write-beginning","date":"2020-07-06T04:28:00.000Z","updated":"2020-09-25T05:18:32.785Z","comments":true,"path":"posts/18074.html","link":"","permalink":"https://www.heson10.com/volantis/posts/18074.html","excerpt":"&ensp;&ensp; &ensp;&ensp; 2010年，那时还在大学的时候，凭着对网页设计及网站制作的热爱，建立了自己的一个博客，网名也就是我现在这个域名的网名heson，也认识了很多志同道合的小伙伴。当时用的是风靡一时的WordPress博客系统，平时喜欢在博客里面分享一些制作网站和WordPress模板之中遇到的一些难点问题。同时呢，在度娘和谷哥的辅导之下，制作了一些好看的WordPress模板，得到了不少网友的认可和支持，感到非常开心，很有成就感。 &ensp;&ensp; &ensp;&ensp; 作品展示： 演示站点：https://wp.heson10.com &ensp;&ensp; &ensp;&ensp; 后来由于工作的关系，把博客荒废了。这一晃就是十年了…..最近不知怎么心血来潮,又想干起”老本行”，想搞个博客分享一下平时的生活，而且这次想一直坚持下去。查了下现在最流行的博客系统,发现hexo最适合我这样的佛系博主了，一来hexo+github pages能做到免费搭建个人博客；二来就是时隔多年后，我不想因为使用的是其他博客系统而看到Unknown database。","text":"&ensp;&ensp; &ensp;&ensp; 2010年，那时还在大学的时候，凭着对网页设计及网站制作的热爱，建立了自己的一个博客，网名也就是我现在这个域名的网名heson，也认识了很多志同道合的小伙伴。当时用的是风靡一时的WordPress博客系统，平时喜欢在博客里面分享一些制作网站和WordPress模板之中遇到的一些难点问题。同时呢，在度娘和谷哥的辅导之下，制作了一些好看的WordPress模板，得到了不少网友的认可和支持，感到非常开心，很有成就感。 &ensp;&ensp; &ensp;&ensp; 作品展示： 演示站点：https://wp.heson10.com &ensp;&ensp; &ensp;&ensp; 后来由于工作的关系，把博客荒废了。这一晃就是十年了…..最近不知怎么心血来潮,又想干起”老本行”，想搞个博客分享一下平时的生活，而且这次想一直坚持下去。查了下现在最流行的博客系统,发现hexo最适合我这样的佛系博主了，一来hexo+github pages能做到免费搭建个人博客；二来就是时隔多年后，我不想因为使用的是其他博客系统而看到Unknown database。 &ensp;&ensp; &ensp;&ensp; 媳妇说，写博客这个不是已经过时了吗，现在都流行看抖音了。确实如此，但，每当从谷哥或者度娘上找到一篇优质的资料时很多时候都出自于个人博客。曾经问过一个大佬在学习上又没有什么习惯或者技巧，他说“我每当解决一个问题之后都会总结并记录下来”。是的自己也深有体会，每次谷哥半天解决的问题，不做记录的话过一段时间再遇到一样会去谷哥半天去找，可能这就是平常人与大佬们的区别吧。 &ensp;&ensp; &ensp;&ensp; 以某某大佬的一句话作为结尾，以此共勉： &ensp;&ensp;&ensp;&ensp; “对任何渴望进步的人来说，写博客/文章/回答对自己的成长帮助都是巨大的。频率和数量不必过分强求，有话要说就写写，没事就歇歇，随意点。因为坚持写作的那一刻起，你就已经开始受益。”","categories":[{"name":"生活随笔","slug":"生活随笔","permalink":"https://www.heson10.com/volantis/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"网站","slug":"网站","permalink":"https://www.heson10.com/volantis/tags/%E7%BD%91%E7%AB%99/"},{"name":"爱好","slug":"爱好","permalink":"https://www.heson10.com/volantis/tags/%E7%88%B1%E5%A5%BD/"},{"name":"热爱","slug":"热爱","permalink":"https://www.heson10.com/volantis/tags/%E7%83%AD%E7%88%B1/"}]}],"categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/categories/hexo/"},{"name":"typecho","slug":"typecho","permalink":"https://www.heson10.com/volantis/categories/typecho/"},{"name":"技术交流","slug":"技术交流","permalink":"https://www.heson10.com/volantis/categories/%E6%8A%80%E6%9C%AF%E4%BA%A4%E6%B5%81/"},{"name":"生活随笔","slug":"生活随笔","permalink":"https://www.heson10.com/volantis/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"},{"name":"软件","slug":"软件","permalink":"https://www.heson10.com/volantis/categories/%E8%BD%AF%E4%BB%B6/"},{"name":"python","slug":"python","permalink":"https://www.heson10.com/volantis/categories/python/"},{"name":"WordPress","slug":"WordPress","permalink":"https://www.heson10.com/volantis/categories/WordPress/"},{"name":"MIUI","slug":"MIUI","permalink":"https://www.heson10.com/volantis/categories/MIUI/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.heson10.com/volantis/tags/hexo/"},{"name":"主题","slug":"主题","permalink":"https://www.heson10.com/volantis/tags/%E4%B8%BB%E9%A2%98/"},{"name":"蜜云","slug":"蜜云","permalink":"https://www.heson10.com/volantis/tags/%E8%9C%9C%E4%BA%91/"},{"name":"sweetcloud","slug":"sweetcloud","permalink":"https://www.heson10.com/volantis/tags/sweetcloud/"},{"name":"情侣","slug":"情侣","permalink":"https://www.heson10.com/volantis/tags/%E6%83%85%E4%BE%A3/"},{"name":"哔哔","slug":"哔哔","permalink":"https://www.heson10.com/volantis/tags/%E5%93%94%E5%93%94/"},{"name":"cuteen","slug":"cuteen","permalink":"https://www.heson10.com/volantis/tags/cuteen/"},{"name":"typecho","slug":"typecho","permalink":"https://www.heson10.com/volantis/tags/typecho/"},{"name":"编辑","slug":"编辑","permalink":"https://www.heson10.com/volantis/tags/%E7%BC%96%E8%BE%91/"},{"name":"说说","slug":"说说","permalink":"https://www.heson10.com/volantis/tags/%E8%AF%B4%E8%AF%B4/"},{"name":"butterfly","slug":"butterfly","permalink":"https://www.heson10.com/volantis/tags/butterfly/"},{"name":"next","slug":"next","permalink":"https://www.heson10.com/volantis/tags/next/"},{"name":"微信","slug":"微信","permalink":"https://www.heson10.com/volantis/tags/%E5%BE%AE%E4%BF%A1/"},{"name":"激活","slug":"激活","permalink":"https://www.heson10.com/volantis/tags/%E6%BF%80%E6%B4%BB/"},{"name":"office","slug":"office","permalink":"https://www.heson10.com/volantis/tags/office/"},{"name":"纪念","slug":"纪念","permalink":"https://www.heson10.com/volantis/tags/%E7%BA%AA%E5%BF%B5/"},{"name":"灌篮高手","slug":"灌篮高手","permalink":"https://www.heson10.com/volantis/tags/%E7%81%8C%E7%AF%AE%E9%AB%98%E6%89%8B/"},{"name":"动画","slug":"动画","permalink":"https://www.heson10.com/volantis/tags/%E5%8A%A8%E7%94%BB/"},{"name":"博客","slug":"博客","permalink":"https://www.heson10.com/volantis/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"分站","slug":"分站","permalink":"https://www.heson10.com/volantis/tags/%E5%88%86%E7%AB%99/"},{"name":"随机","slug":"随机","permalink":"https://www.heson10.com/volantis/tags/%E9%9A%8F%E6%9C%BA/"},{"name":"文章","slug":"文章","permalink":"https://www.heson10.com/volantis/tags/%E6%96%87%E7%AB%A0/"},{"name":"功能","slug":"功能","permalink":"https://www.heson10.com/volantis/tags/%E5%8A%9F%E8%83%BD/"},{"name":"字体","slug":"字体","permalink":"https://www.heson10.com/volantis/tags/%E5%AD%97%E4%BD%93/"},{"name":"谷歌","slug":"谷歌","permalink":"https://www.heson10.com/volantis/tags/%E8%B0%B7%E6%AD%8C/"},{"name":"技巧","slug":"技巧","permalink":"https://www.heson10.com/volantis/tags/%E6%8A%80%E5%B7%A7/"},{"name":"标签","slug":"标签","permalink":"https://www.heson10.com/volantis/tags/%E6%A0%87%E7%AD%BE/"},{"name":"人格","slug":"人格","permalink":"https://www.heson10.com/volantis/tags/%E4%BA%BA%E6%A0%BC/"},{"name":"搭建","slug":"搭建","permalink":"https://www.heson10.com/volantis/tags/%E6%90%AD%E5%BB%BA/"},{"name":"源码","slug":"源码","permalink":"https://www.heson10.com/volantis/tags/%E6%BA%90%E7%A0%81/"},{"name":"评论","slug":"评论","permalink":"https://www.heson10.com/volantis/tags/%E8%AF%84%E8%AE%BA/"},{"name":"折腾","slug":"折腾","permalink":"https://www.heson10.com/volantis/tags/%E6%8A%98%E8%85%BE/"},{"name":"markdown","slug":"markdown","permalink":"https://www.heson10.com/volantis/tags/markdown/"},{"name":"Python","slug":"Python","permalink":"https://www.heson10.com/volantis/tags/Python/"},{"name":"图片","slug":"图片","permalink":"https://www.heson10.com/volantis/tags/%E5%9B%BE%E7%89%87/"},{"name":"volantis","slug":"volantis","permalink":"https://www.heson10.com/volantis/tags/volantis/"},{"name":"轮播","slug":"轮播","permalink":"https://www.heson10.com/volantis/tags/%E8%BD%AE%E6%92%AD/"},{"name":"优化","slug":"优化","permalink":"https://www.heson10.com/volantis/tags/%E4%BC%98%E5%8C%96/"},{"name":"valine","slug":"valine","permalink":"https://www.heson10.com/volantis/tags/valine/"},{"name":"合集","slug":"合集","permalink":"https://www.heson10.com/volantis/tags/%E5%90%88%E9%9B%86/"},{"name":"配置","slug":"配置","permalink":"https://www.heson10.com/volantis/tags/%E9%85%8D%E7%BD%AE/"},{"name":"CDN","slug":"CDN","permalink":"https://www.heson10.com/volantis/tags/CDN/"},{"name":"又拍云","slug":"又拍云","permalink":"https://www.heson10.com/volantis/tags/%E5%8F%88%E6%8B%8D%E4%BA%91/"},{"name":"WordPress","slug":"WordPress","permalink":"https://www.heson10.com/volantis/tags/WordPress/"},{"name":"云服务器","slug":"云服务器","permalink":"https://www.heson10.com/volantis/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"部署","slug":"部署","permalink":"https://www.heson10.com/volantis/tags/%E9%83%A8%E7%BD%B2/"},{"name":"持续集成","slug":"持续集成","permalink":"https://www.heson10.com/volantis/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"},{"name":"coding","slug":"coding","permalink":"https://www.heson10.com/volantis/tags/coding/"},{"name":"vercel","slug":"vercel","permalink":"https://www.heson10.com/volantis/tags/vercel/"},{"name":"加速","slug":"加速","permalink":"https://www.heson10.com/volantis/tags/%E5%8A%A0%E9%80%9F/"},{"name":"jsDelivr","slug":"jsDelivr","permalink":"https://www.heson10.com/volantis/tags/jsDelivr/"},{"name":"Github","slug":"Github","permalink":"https://www.heson10.com/volantis/tags/Github/"},{"name":"图床","slug":"图床","permalink":"https://www.heson10.com/volantis/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"SEO","slug":"SEO","permalink":"https://www.heson10.com/volantis/tags/SEO/"},{"name":"插件","slug":"插件","permalink":"https://www.heson10.com/volantis/tags/%E6%8F%92%E4%BB%B6/"},{"name":"链接","slug":"链接","permalink":"https://www.heson10.com/volantis/tags/%E9%93%BE%E6%8E%A5/"},{"name":"美化","slug":"美化","permalink":"https://www.heson10.com/volantis/tags/%E7%BE%8E%E5%8C%96/"},{"name":"更换","slug":"更换","permalink":"https://www.heson10.com/volantis/tags/%E6%9B%B4%E6%8D%A2/"},{"name":"algolia","slug":"algolia","permalink":"https://www.heson10.com/volantis/tags/algolia/"},{"name":"搜索","slug":"搜索","permalink":"https://www.heson10.com/volantis/tags/%E6%90%9C%E7%B4%A2/"},{"name":"本地","slug":"本地","permalink":"https://www.heson10.com/volantis/tags/%E6%9C%AC%E5%9C%B0/"},{"name":"帮助","slug":"帮助","permalink":"https://www.heson10.com/volantis/tags/%E5%B8%AE%E5%8A%A9/"},{"name":"网友","slug":"网友","permalink":"https://www.heson10.com/volantis/tags/%E7%BD%91%E5%8F%8B/"},{"name":"cloud","slug":"cloud","permalink":"https://www.heson10.com/volantis/tags/cloud/"},{"name":"coding-studio","slug":"coding-studio","permalink":"https://www.heson10.com/volantis/tags/coding-studio/"},{"name":"打赏","slug":"打赏","permalink":"https://www.heson10.com/volantis/tags/%E6%89%93%E8%B5%8F/"},{"name":"灯箱","slug":"灯箱","permalink":"https://www.heson10.com/volantis/tags/%E7%81%AF%E7%AE%B1/"},{"name":"幻灯","slug":"幻灯","permalink":"https://www.heson10.com/volantis/tags/%E5%B9%BB%E7%81%AF/"},{"name":"fancybox","slug":"fancybox","permalink":"https://www.heson10.com/volantis/tags/fancybox/"},{"name":"相关文章","slug":"相关文章","permalink":"https://www.heson10.com/volantis/tags/%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0/"},{"name":"推荐","slug":"推荐","permalink":"https://www.heson10.com/volantis/tags/%E6%8E%A8%E8%8D%90/"},{"name":"分类","slug":"分类","permalink":"https://www.heson10.com/volantis/tags/%E5%88%86%E7%B1%BB/"},{"name":"404","slug":"404","permalink":"https://www.heson10.com/volantis/tags/404/"},{"name":"页面","slug":"页面","permalink":"https://www.heson10.com/volantis/tags/%E9%A1%B5%E9%9D%A2/"},{"name":"访问","slug":"访问","permalink":"https://www.heson10.com/volantis/tags/%E8%AE%BF%E9%97%AE/"},{"name":"tools","slug":"tools","permalink":"https://www.heson10.com/volantis/tags/tools/"},{"name":"typora","slug":"typora","permalink":"https://www.heson10.com/volantis/tags/typora/"},{"name":"picgo","slug":"picgo","permalink":"https://www.heson10.com/volantis/tags/picgo/"},{"name":"上传","slug":"上传","permalink":"https://www.heson10.com/volantis/tags/%E4%B8%8A%E4%BC%A0/"},{"name":"友情链接","slug":"友情链接","permalink":"https://www.heson10.com/volantis/tags/%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/"},{"name":"canvas","slug":"canvas","permalink":"https://www.heson10.com/volantis/tags/canvas/"},{"name":"运行","slug":"运行","permalink":"https://www.heson10.com/volantis/tags/%E8%BF%90%E8%A1%8C/"},{"name":"时间","slug":"时间","permalink":"https://www.heson10.com/volantis/tags/%E6%97%B6%E9%97%B4/"},{"name":"置顶","slug":"置顶","permalink":"https://www.heson10.com/volantis/tags/%E7%BD%AE%E9%A1%B6/"},{"name":"教程","slug":"教程","permalink":"https://www.heson10.com/volantis/tags/%E6%95%99%E7%A8%8B/"},{"name":"小米","slug":"小米","permalink":"https://www.heson10.com/volantis/tags/%E5%B0%8F%E7%B1%B3/"},{"name":"刷机","slug":"刷机","permalink":"https://www.heson10.com/volantis/tags/%E5%88%B7%E6%9C%BA/"},{"name":"bug","slug":"bug","permalink":"https://www.heson10.com/volantis/tags/bug/"},{"name":"域名","slug":"域名","permalink":"https://www.heson10.com/volantis/tags/%E5%9F%9F%E5%90%8D/"},{"name":"网站","slug":"网站","permalink":"https://www.heson10.com/volantis/tags/%E7%BD%91%E7%AB%99/"},{"name":"爱好","slug":"爱好","permalink":"https://www.heson10.com/volantis/tags/%E7%88%B1%E5%A5%BD/"},{"name":"热爱","slug":"热爱","permalink":"https://www.heson10.com/volantis/tags/%E7%83%AD%E7%88%B1/"}]}