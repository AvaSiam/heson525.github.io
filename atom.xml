<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>黑石博客 - Hexo博客</title>
  
  
  <link href="https://www.heson10.com/atom.xml" rel="self"/>
  
  <link href="https://www.heson10.com/"/>
  <updated>2020-10-01T04:48:17.357Z</updated>
  <id>https://www.heson10.com/</id>
  
  <author>
    <name>Heson</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>测试多彩标签</title>
    <link href="https://www.heson10.com/posts/31061.html"/>
    <id>https://www.heson10.com/posts/31061.html</id>
    <published>2020-09-28T13:47:34.000Z</published>
    <updated>2020-10-01T04:48:17.357Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h2><u>下划线</u><br><emp>着重号</emp><br><wavy>波浪线</wavy><br><del>删除线</del><br><kbd>command</kbd> + <kbd>D</kbd><br><darkb-text>这里没有验证码</darkb-text><br><rainbow-text>这是一段彩虹字</rainbow-text><br><blur-text>这里没有验证码</blur-text><h2 id="多彩面板"><a href="#多彩面板" class="headerlink" title="多彩面板"></a>多彩面板</h2><article class="message hong"><div class="message_body"><p>这个爆头，那个爆头</p></div></article><article class="message huang"><div class="message_body"><p>今天老八给你爆个头，爆个什么头捏</p></div></article><article class="message lv"><div class="message_body"><p>我给你爆个柠檬</p></div></article><article class="message lan"><div class="message_body"><p>看这柠檬头是怎么爆的</p></div></article><article class="message zi"><div class="message_body"><p>吧唧吧唧，咔<del>咔咔</del>咔</p></div></article><article class="message moren"><div class="message_body"><p>默认颜色</p></div></article><h2 id="多彩信息面板"><a href="#多彩信息面板" class="headerlink" title="多彩信息面板"></a>多彩信息面板</h2> <article class="message hong"><div class="message_header">臭豆腐乳系</div><div class="message_body"><p>凑豆配腐掳，美食界中的博主。不管是腥还是臭，到我嘴里就是肉。奥利给，干了兄弟们！吧唧吧唧，咔<del>咔咔</del>咔。</p></div></article> <article class="message huang"><div class="message_header">人生百味系</div><div class="message_body"><p>老铁们啊，尝不到苦辣，你永远不知道酸甜。今天老八给你挑战一把酸甜苦辣咸。奥利给，干了兄弟们！辣椒，吧唧吧唧，苦瓜，吧唧吧唧，柠檬，吧唧吧唧，精盐，老干妈，白糖，咔咔~咕噜咕噜。</p></div></article> <article class="message lan"><div class="message_header">嘎嘣脆系</div><div class="message_body"><p>兄弟们，不吃好的，不吃贵的，咱今天整俩嘎嘣脆的。都说圆葱它很辣，到我嘴里我得盘它。奥利给，干就完了。吧唧吧唧，咔<del>咔咔</del>咔。</p></div></article> <article class="message lv"><div class="message_header">秘制汉堡系</div><div class="message_body"><p>一日三餐没烦恼，今天就吃老八秘制小汉堡。即实惠，还管饱。凑豆腐，腐掳，加柠檬，你看这汉堡做的行不行。奥利给，兄弟们，造它就完了。吧唧吧唧，咔<del>咔咔</del>咔。</p></div></article> <article class="message zi"><div class="message_header">火鸡面系</div><div class="message_body"><p>火鸡面，大辣椒，一顿不吃心刺挠。都说这东西它很辣，到我嘴里我不怕。奥利给，兄弟们，造它就完了。吧唧吧唧，咔<del>咔咔</del>咔。</p></div></article><h2 id="折叠面板"><a href="#折叠面板" class="headerlink" title="折叠面板"></a>折叠面板</h2><h2 id="多媒体"><a href="#多媒体" class="headerlink" title="多媒体"></a>多媒体</h2><div class="audio"><audio controls preload><source src='https://yf.heson10.com/Static/music/yaofan.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;文字样式&quot;&gt;&lt;a href=&quot;#文字样式&quot; class=&quot;headerlink&quot; title=&quot;文字样式&quot;&gt;&lt;/a&gt;文字样式&lt;/h2&gt;&lt;u&gt;下划线&lt;/u&gt;
&lt;br&gt;
&lt;emp&gt;着重号&lt;/emp&gt;
&lt;br&gt;
&lt;wavy&gt;波浪线&lt;/wavy&gt;
&lt;br&gt;
&lt;del&gt;删除</summary>
      
    
    
    
    
    <category term="标签" scheme="https://www.heson10.com/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 标签函数 list_tags 用法</title>
    <link href="https://www.heson10.com/posts/59108.html"/>
    <id>https://www.heson10.com/posts/59108.html</id>
    <published>2020-09-24T04:56:08.000Z</published>
    <updated>2020-09-24T06:30:57.098Z</updated>
    
    <content type="html"><![CDATA[<p>最近正在研究Hexo主题文档，关于标签函数有两条：</p><ul><li><pre><code class="ejs">&lt;%- list_tags([options]) %&gt;</code></pre></li><li><pre><code class="ejs">&lt;%- tagcloud([tags], [options]) %&gt;</code></pre></li></ul><p>因为现在用的主题采用的是<code>list_tag</code>标签，着重讲一下这个标签。</p><h2 id="官网参数"><a href="#官网参数" class="headerlink" title="官网参数"></a>官网参数</h2><p>其中<code>list_tag</code>有以下参数：</p><table><thead><tr><th align="left">选项</th><th align="left">描述</th><th align="left">预设值</th></tr></thead><tbody><tr><td align="left"><code>orderby</code></td><td align="left">标签排列方式</td><td align="left">name</td></tr><tr><td align="left"><code>order</code></td><td align="left">标签排列顺序。<code>1</code>, <code>asc</code> 升序；<code>-1</code>, <code>desc</code> 降序。</td><td align="left">1</td></tr><tr><td align="left"><code>show_count</code></td><td align="left">显示每个标签的文章总数</td><td align="left">true</td></tr><tr><td align="left"><code>style</code></td><td align="left">标签列表的显示方式。使用 <code>list</code> 以无序列表（unordered list）方式显示。</td><td align="left">list</td></tr><tr><td align="left"><code>separator</code></td><td align="left">标签间的分隔符号。只有在 <code>style</code> 不是 <code>list</code> 时有用。</td><td align="left">,</td></tr><tr><td align="left"><code>class</code></td><td align="left">Class name of tag list (string) or customize each tag’s class (object, see below).</td><td align="left">tag</td></tr><tr><td align="left"><code>transform</code></td><td align="left">改变标签名称显示方法的函数。</td><td align="left"></td></tr><tr><td align="left"><code>amount</code></td><td align="left">要显示的标签数量（0 = 无限制）</td><td align="left">0</td></tr><tr><td align="left"><code>suffix</code></td><td align="left">为链接添加前缀</td><td align="left">None</td></tr></tbody></table><h2 id="list-tags用法详解"><a href="#list-tags用法详解" class="headerlink" title="list_tags用法详解"></a>list_tags用法详解</h2><p>函数写法示例如下：</p><pre><code>list_tags(site.tags,&#123;orderby: &#39;name&#39;, order: &#39;desc&#39;, amount: 0,class: &#123;ul: &#39;ululul&#39;, li: &#39;lilili&#39;, a: &#39;aaa&#39;, count: &#39;ccc&#39;&#125;, style: list, separator: &#39; | &#39;&#125;)</code></pre><ul><li><p>其中第一个参数<code>site.tags</code>还可以写<code>post.tags</code>，意思是分别调用<strong>全站标签</strong>和当前<strong>文章标签</strong></p></li><li><p><code>orderby</code>这里默认值是<code>name</code>，如果想按照标签下的文章数量来进行排序的话，很明显<code>name</code>已经满足不了我们的需求，于是我们可以这样调用，使用<code>length</code>参数（<strong>之前一直想要找到这样的写法，最后还是在hexo官方github的issue上看到的，还是个外国朋友提供的</strong>），这样也称之为<strong>热门标签</strong>，并通过amount参数控制显示数量，这样的标签群放在侧边栏效果更佳：</p><pre><code class="ejs">&lt;%- list_tags(site.tags,&#123;orderby: &#39;length&#39;, order: &#39;desc&#39;,amount: 8&#125;) %&gt;</code></pre><p>效果如下图：</p><p><img src="https://picup.heson10.com/img/upyun/image-20200924132046400.png" alt="黑石博客热门标签"></p></li><li><p><code>order</code>是升序和降序的参数</p></li><li><p><code>amount</code>标签数量的控制</p></li><li><p><code>class</code>这里是个参数集，区分<code>ul</code>、<code>li</code>、<code>span</code>分别给其加上css类，用于css美化，示例如图：</p><p><img src="https://picup.heson10.com/img/upyun/image-20200924133032110.png" alt="黑石博客标签class"></p></li><li><p><code>style</code>和<code>separator</code>配合使用，给标签与标签之间加上分隔符：</p><pre><code>style: false, separator: &#39; | &#39;</code></pre><p>效果：</p><p><img src="https://picup.heson10.com/img/upyun/image-20200924133652342.png" alt="黑石标签分隔符"></p></li><li><p><code>show_count</code>为是否显示每个标签的文章数，这个就很好理解了，填<code>true</code>和<code>false</code>即可。</p></li><li><p><code>transform</code>可为标签字符串进行转化，最常见的就是大小写转化，这也是一个常见的方法，比如我喜欢给每个标签用小写，如<code>hexo</code>，但显示出来不好看，于是我们可以利用<code>transform</code>转为大写，写法如下：</p><pre><code class="ejs">&lt;%- list_tags(site.tags,&#123;orderby: &#39;length&#39;, order: &#39;desc&#39;, amount: 0,transform(str) &#123;return str.toUpperCase();&#125;&#125;) %&gt;</code></pre><p>原本小写的<code>hexo</code>，转变为大写，效果如下：</p><p><img src="https://picup.heson10.com/img/upyun/image-20200924134802819.png" alt="黑石标签大小写转化"></p></li></ul><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="https://hexo.io/zh-cn/docs/helpers.html#list-tags">Hexo官方文档</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近正在研究Hexo主题文档，关于标签函数有两条：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;pre&gt;&lt;code class=&quot;ejs&quot;&gt;&amp;lt;%- list_tags([options]) %&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;pre&gt;&lt;code class=&quot;</summary>
      
    
    
    
    <category term="hexo" scheme="https://www.heson10.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://www.heson10.com/tags/hexo/"/>
    
    <category term="标签" scheme="https://www.heson10.com/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>16种人格类型，你属于哪一种？</title>
    <link href="https://www.heson10.com/posts/62369.html"/>
    <id>https://www.heson10.com/posts/62369.html</id>
    <published>2020-09-19T03:52:00.000Z</published>
    <updated>2020-09-22T14:44:15.689Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>简单快速粗暴地直接推荐16PF人格测试站点：</p><p><a href="https://www.16personalities.com/ch">https://www.16personalities.com/ch</a></p><p><strong>黑石推荐理由：</strong></p><ul><li>扁平化卡通人物画风，异常清新可爱。</li><li>人物特点分明，职业化参考。</li><li>问卷调查简单明了，不拖沓。</li><li>中文支持！</li></ul><p>网站缩略图：</p><p><img src="https://picup.heson10.com/img/upyun/image-20200919120915098.png" alt="16pf测试网站"></p><h2 id="16PF简介"><a href="#16PF简介" class="headerlink" title="16PF简介"></a>16PF简介</h2><p>16种人格因素问卷是美国伊利诺州立大学人格及能力测验研究所<a href="https://baike.baidu.com/item/%E5%8D%A1%E7%89%B9%E5%B0%94">卡特尔</a>教授编制的用于人格检测的一种问卷，简称16PF。</p><h2 id="调查问卷功能"><a href="#调查问卷功能" class="headerlink" title="调查问卷功能"></a>调查问卷功能</h2><p>从乐群、聪慧、自律、独立、敏感、冒险、怀疑等16个相对独立的人格特点对人进行描绘，并可以了解应试者在环境适应、专业成就和心理健康等方面的表现。在人事管理中，16PF能够预测应试者的工作稳定性、工作效率和压力承受能力等。可广泛应用于心理咨询、人员选拔和职业指导的各个环节，为人事决策和人事诊断提供个人心理素质的参考依据。</p><h2 id="16PF量表"><a href="#16PF量表" class="headerlink" title="16PF量表"></a>16PF量表</h2><p><img src="https://picup.heson10.com/img/upyun/image-20200919121435506.png" alt="16PF量表"></p><h2 id="我的16PF"><a href="#我的16PF" class="headerlink" title="我的16PF"></a>我的16PF</h2><p><img src="https://picup.heson10.com/img/upyun/image-20200919113003371.png" alt="黑石的人格类型"></p><h3 id="“鉴赏家”-人格"><a href="#“鉴赏家”-人格" class="headerlink" title="“鉴赏家” 人格"></a>“鉴赏家” 人格</h3><blockquote><p>我想要享受人生，一个不同的人生。 我不想每天去去到同一个地方，遇见同样的人，做一样的工作。 我期待有趣的挑战。</p><p>HARRISON FORD</p></blockquote><p>艺术能手人格类型的人喜欢用双手和眼睛去探索事物，他们通过冷静的理性主义和精神饱满的好奇心来感知和体验这个世界。 拥有这种人格的人是天生的制造者，他们在不同的项目中穿梭，从创造有用、充足的产物中获得乐趣，并在创造的过程中从外界学习。 艺术能手人格类型的人通常是机械师和工程师，他们亲手拆卸东西，并把它们安装还原到比之前更好一点的状态，从中获得极大的乐趣。</p><p><img src="https://picup.heson10.com/img/upyun/image-20200919123029777.png" alt="“鉴赏家” 人格 (ISTP-A / ISTP-T)"></p><p>他们通过创造、解决难题、反复试验和第一手的经验来探索新想法。 他们喜欢别人对他们的计划感兴趣，有时候甚至不介意别人介入。 当然，这是建立在那些感兴趣的人不会干涉“艺术能手”原则和自由的基础上，并且能够接受以同样的兴趣回报他们。</p><p>艺术能手人格类型的人喜欢帮助别人和分享他们的经验，特别是他们关心的人。很可惜拥有这种人格类型的人并不常见，大约只占到人口总数的 5%。 艺术能手人格类型的女性尤其罕见，而且她们的角色可能与社会对女性的预期很不相配 — 她们通常从童年开始就被当成是假小子。</p><h4 id="敢于不同"><a href="#敢于不同" class="headerlink" title="敢于不同"></a>敢于不同</h4><p>“艺术能手”们天性保守务实，使他们乍看起来很简单，但实际上读懂他们相当不易。 他们友好又缄默，行事冷静但会突然的不由自主，好奇心旺盛但是不能够持续专注于正式的研究，即便是他们的朋友和爱人也常常觉得他们难以捉摸。 他们可以暂时表现得非常忠诚和稳定，但是他们倾向于积累冲动的能量，并在没有任何征兆的情况下爆发出来，将他们的兴趣带到全新的方向。</p><blockquote><p>当这一人格类型的人发生巨大变化的时候，他们仅仅是在探索新兴趣的可行性，而不是一味的幻想探索。</p></blockquote><p>艺术能手人格类型的人的选择来源于实用的现实主义。他们的心中有很强的公平感，并以此来对待别人。这有助于人们理解他们身上一些令人迷惑的特征。 他们不会过度谨慎，也不会奉行己所不欲勿施于人的信条，反而会更加变本加厉，做出类似的反击，不论好坏，只为公平。</p><p>艺术能手人格类型的人可能面临的最大的问题是，他们通常行动的太早。他们认为宽容的本性是理所当然的，并且想当然地认为别人也是如此。 他们会第一个讲出令人无动于衷的笑话，过度地参与到别人的项目和嬉笑打闹中。他们或许会因为更有趣的事物出现而突然改变计划。</p><h4 id="没有什么比所有都人都赞同更无聊的事情了"><a href="#没有什么比所有都人都赞同更无聊的事情了" class="headerlink" title="没有什么比所有都人都赞同更无聊的事情了"></a>没有什么比所有都人都赞同更无聊的事情了</h4><p>这种人格类型的人会认识到，许多其他类型的人和自己相比，在规则和可接受的行为上有更坚定的界限 — 感情更加细腻的人格类型不想听到令人无动于衷的玩笑，并且绝对不会自己也说一个，也不会参加喧闹的嬉戏，即使是在气氛融洽的聚会上也如此。 如果局面已经很情绪化，超越这些界线就会事与愿违，难以收场。</p><p>这种人格类型的人很难揣测他人的情感，但要揣摩他们内心的情感和动机也并非易事，因此这也算是他们所热爱的公平的一种自然体现。 但他们趋向于用行动而非同情来探索与人之间的关系，这种倾向可能会导致一些非常令人沮丧的情况出现。 拥有艺术能手人格类型的人常常在界线和准则中挣扎，他们更喜欢自由自在，并且在需要的时候稍稍出界。</p><p>如果能与理解他们风格和不可预测性的朋友一起共事，再加上他们的创造力、幽默感和亲力亲为，以创造可行的解决方案和实用的东西，那么“艺术能手”们会一直非常乐意创造各种有用的物品，并真心实意地喜欢它们。</p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>总得说来，测试结果还算比较中肯。</p><p>特别是这句话“<strong>他们在不同的项目中穿梭，从创造有用、充足的产物中获得乐趣，并在创造的过程中从外界学习</strong>。”</p><p>这也是黑石博客建立的初衷，天生喜欢折腾的我，特别热衷于折腾代码，对于网站建设这一块的爱好热情始终未褪。现在在各种博客程序中（Hexo、wordpress、typecho）不断的学习，在折腾代码中获得乐趣，相信我能通过不断地学习，并最终实现我在<a href="/about">个人简介</a>写下的小目标！😉</p><p><img src="http://img.doutula.com/production/uploads/image/2020/04/10/20200410479744_snWhIt.gif" alt="奥利给"></p><article class="message moren"><div class="message_body"><p>那么电脑前的你，属于哪一种呢？</p></div></article>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;简单快速粗暴地直接推荐16PF人格测试站点：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.16personalities.com</summary>
      
    
    
    
    <category term="生活随笔" scheme="https://www.heson10.com/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="人格" scheme="https://www.heson10.com/tags/%E4%BA%BA%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>记录一次24H在线要饭系统的搭建</title>
    <link href="https://www.heson10.com/posts/53612.html"/>
    <id>https://www.heson10.com/posts/53612.html</id>
    <published>2020-09-08T13:44:04.000Z</published>
    <updated>2020-09-22T14:25:11.106Z</updated>
    
    <content type="html"><![CDATA[<p>先上地址：<a href="https://yf.heson10.com/">https://yf.heson10.com</a></p><p>前方高能音乐来袭。。。。注意保护耳朵，可预先试听：</p><div class="audio"><audio controls preload><source src='https://yf.heson10.com/Static/music/yaofan.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><h2 id="为什么搭建？"><a href="#为什么搭建？" class="headerlink" title="为什么搭建？"></a>为什么搭建？</h2><p><img src="https://picup.heson10.com/img/upyun/image-20200908220604976.png" alt="因为穷"></p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><h3 id="前台效果图"><a href="#前台效果图" class="headerlink" title="前台效果图"></a>前台效果图</h3><p><img src="https://cdn.jsdelivr.net/gh/heson10/pic@master/img/image-20200908215411128.png" alt="黑石要饭系统前台界面"></p><p>前三个没付款的家伙，你们有本事倒是付啊！😂</p><h3 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h3><p><img src="https://picup.heson10.com/img/upyun/image-20200908215618777.png" alt="黑石要饭系统后台界面"></p><h2 id="搭建摘要"><a href="#搭建摘要" class="headerlink" title="搭建摘要"></a>搭建摘要</h2><ul><li><p>源码用的是烟雨要饭 源码下载地址：<a href="http://cdn.yyhy.me/yaofan.zip">http://cdn.yyhy.me/yaofan.zip</a></p></li><li><p>对接的是<strong>码支付</strong>，特点：支付宝 QQ全免 微信免手续费只需交易额度  码支付地址→<a href="https://codepay.fateqq.com/i/570001">点击我</a>   下面是其网站的宣传图：</p><p><img src="https://picup.heson10.com/img/upyun/image-20200908220215882.png" alt="码支付功能介绍"></p></li></ul><ul><li>支付宝开通了商家服务、qq钱包上传了收款码、微信付费签约了并上传收款码</li><li>源码需要修改适配码支付，下面简单讲一下</li></ul><h2 id="关于源码修改适配问题"><a href="#关于源码修改适配问题" class="headerlink" title="关于源码修改适配问题"></a>关于源码修改适配问题</h2><h3 id="核心函数php文件：Pay-Class-php"><a href="#核心函数php文件：Pay-Class-php" class="headerlink" title="核心函数php文件：Pay.Class.php"></a>核心函数php文件：<code>Pay.Class.php</code></h3><p>主要修改了<code>submit()</code>函数，增加了对码支付支付工具<code>type</code>的判断，以及财主爸爸昵称<code>nick</code>的调用，以及增加码支付一些自用参数，函数代码如下:</p><pre><code class="php">    public function submit($type, $out_trade_no, $notify_url, $return_url, $name, $money, $sitename, $nick)    &#123;        if ($type == &#39;alipay&#39;) &#123;            $typeid = 1;        &#125;        if ($type == &#39;qqpay&#39;) &#123;            $typeid = 2;        &#125;        if ($type == &#39;wxpay&#39;) &#123;            $typeid = 3;        &#125;        $data = [            &#39;id&#39; =&gt; $this-&gt;pid,            &#39;type&#39; =&gt; $typeid,            &#39;out_trade_no&#39; =&gt; $out_trade_no,            &#39;notify_url&#39; =&gt; $notify_url,            &#39;return_url&#39; =&gt; $return_url,            &#39;name&#39; =&gt; $name,            &#39;price&#39; =&gt; $money,            &#39;sitename&#39; =&gt; $sitename,            &#39;act&#39; =&gt; 0,            &#39;debug&#39; =&gt; 0,            &#39;pay_type&#39; =&gt; 1,            &#39;pay_id&#39; =&gt; $nick,            &#39;param&#39; =&gt; $out_trade_no        ];        $string = http_build_query($data);        $sign = $this-&gt;getsign($data);        return &#39;http://codepay.fateqq.com/create_order/?&#39; . $string . &#39;&amp;token=换成自己的token&#39;;    &#125;</code></pre><p>其中<code>http://codepay.fateqq.com/create_order/?</code>是码支付API的地址，码支付的<code>token</code>写在<code>token=</code>的后面。</p><p>网站端<code>yf.heson10.com/Admin/</code>后台里，要填写码支付的id：</p><p><img src="https://picup.heson10.com/img/upyun/image-20200911075559955.png" alt="码支付ID"></p><h3 id="Pay-Submit-index-php的修改"><a href="#Pay-Submit-index-php的修改" class="headerlink" title="Pay/Submit/index.php的修改"></a>Pay/Submit/index.php的修改</h3><p>主要是前面和前面submit()函数相对应。注意这里的https，如果服务器没开ssl，就换成http</p><pre><code class="php">submit($order[&#39;type&#39;], $order[&#39;trade_no&#39;], &#39;https://&#39; . $_SERVER[&#39;HTTP_HOST&#39;] . &#39;/Pay/Notify/&#39;, &#39;https://&#39; . $_SERVER[&#39;HTTP_HOST&#39;] . &#39;/Pay/Return/&#39;, config(&#39;sitename&#39;) . &#39; - 支付订单&#39;, $order[&#39;money&#39;], config(&#39;sitename&#39;), $order[&#39;nick&#39;]);</code></pre><p>修改后附图：</p><p><img src="https://picup.heson10.com/img/upyun/image-20200911075700994.png" alt="要饭系统submit修改图"></p><h3 id="Pay-Ruturn-index-php的修改"><a href="#Pay-Ruturn-index-php的修改" class="headerlink" title="Pay/Ruturn/index.php的修改"></a>Pay/Ruturn/index.php的修改</h3><p>去掉验证数据，增加对订单号的验证，同时调用自定义参数<code>param</code>，用于定位当前订单号。</p><pre><code class="php">$data = $_REQUEST;$pay = new Pay(config(&#39;pid&#39;), config(&#39;key&#39;),config(&#39;api&#39;));if ($data[&#39;pay_no&#39;]) &#123;    $order = Db(&#39;select * from yyhy_order where trade_no=&quot;&#39; . $data[&#39;param&#39;] . &#39;&quot;&#39;);    if (!$order) exit(&#39;fail&#39;);    $order = $order[0];    if ($order[&#39;status&#39;] != 1) &#123;        Db(&#39;update yyhy_order set `status`=1,`endtime`=&quot;&#39; . date(&#39;Y-m-d H:i:s&#39;) . &#39;&quot; where trade_no=&quot;&#39; . $data[&#39;param&#39;] . &#39;&quot;&#39;);    &#125;    alert(&#39;施舍成功，好人有好报！&#39;, &#39;/&#39;);&#125; else &#123;    alert(&#39;支付验证失败,施舍失败了，又吃不到饭饭了！&#39;, &#39;/&#39;);&#125;</code></pre><p>修改后附图：</p><p><img src="https://picup.heson10.com/img/upyun/image-20200911075745019.png" alt="要饭系统ruturn页面设置"></p><h3 id="Pay-Notify-index-php的修改"><a href="#Pay-Notify-index-php的修改" class="headerlink" title="Pay/Notify/index.php的修改"></a>Pay/Notify/index.php的修改</h3><p>简单验证单号就行，还要具备补单功能：</p><pre><code class="php">include &#39;../../Core/Common.php&#39;;$data = $_REQUEST;$pay = new Pay(config(&#39;pid&#39;), config(&#39;key&#39;),config(&#39;api&#39;));if ($data[&#39;pay_no&#39;]) &#123;    echo &#39;success&#39;;    $order = Db(&#39;select * from yyhy_order where trade_no=&quot;&#39; . $data[&#39;param&#39;] . &#39;&quot;&#39;);    if (!$order) exit(&#39;fail&#39;);    $order = $order[0];    if ($order[&#39;status&#39;] != 1) &#123;        Db(&#39;update yyhy_order set `status`=1,`endtime`=&quot;&#39; . date(&#39;Y-m-d H:i:s&#39;) . &#39;&quot; where trade_no=&quot;&#39; . $data[&#39;param&#39;] . &#39;&quot;&#39;);    &#125;&#125; else &#123;    echo &#39;fail&#39;;&#125;</code></pre><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p><del>好吧，今天又水了一篇。😂😂</del></p><p><del>Q:为什么写这么一篇水文？</del></p><p><del>A:因为弄这个还是花了不少功夫，简单记录一下：</del></p><ul><li><del>一是做笔记让自己知道修改了哪些东西</del></li><li><del>二是为需要的小伙伴提供思路。</del></li></ul><p><strong>9月11日更新：</strong></p><p>已经不算是水文了，更新的文章加上了修改方法和配图，学会的扣<strong>111111111111111</strong>，没学会的扣<strong>眼珠子</strong>！</p><p><strong>9月12日更新：</strong></p><p>解决微信、qq支付异步问题。</p><h2 id="后期打算更新"><a href="#后期打算更新" class="headerlink" title="后期打算更新"></a>后期打算更新</h2><ul><li>前台界面二开</li><li>待定</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;先上地址：&lt;a href=&quot;https://yf.heson10.com/&quot;&gt;https://yf.heson10.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前方高能音乐来袭。。。。注意保护耳朵，可预先试听：&lt;/p&gt;
&lt;div class=&quot;audio&quot;&gt;&lt;audio controls</summary>
      
    
    
    
    <category term="技术交流" scheme="https://www.heson10.com/categories/%E6%8A%80%E6%9C%AF%E4%BA%A4%E6%B5%81/"/>
    
    
    <category term="搭建" scheme="https://www.heson10.com/tags/%E6%90%AD%E5%BB%BA/"/>
    
    <category term="源码" scheme="https://www.heson10.com/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>如何找一款漂亮的字体并快速应用？iFonts字体助手！</title>
    <link href="https://www.heson10.com/posts/32383.html"/>
    <id>https://www.heson10.com/posts/32383.html</id>
    <published>2020-09-07T11:24:53.000Z</published>
    <updated>2020-09-22T14:36:26.674Z</updated>
    
    <content type="html"><![CDATA[<article class="message warning"><div class="message_body"><p>嗯，首先声明：这是一篇水文。</p></div></article><p>今天主要介绍一下这款字体管理软件，<strong>iFonts字体管理助手</strong>，老规矩，先上在Photoshop里更换字体的效果图：</p><p><img src="https://picup.heson10.com/img/upyun/ifont.gif" alt="iFonts字体管理助手效果图"></p><article class="message success"><div class="message_body"><p>怎么样？被这个一键更换字体惊呆了吧？无需下载安装字体文件，只需在iFonts中点击你想要的字体即可应用到任何软件中，省去传统的找寻字体→预览字体→下载字体→安装字体→再在软件找寻字体的繁琐步骤。竟然还有这么好用的东西，爱了。</p></div></article><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><ul><li><p><strong>轻松应用管理字体</strong></p><ul><li><p><strong>1、无需下载字体文件，点击即用</strong><br>点击字体一键使用，快速查看字体效果，无需下载安装。</p></li><li><p><strong>2、右键管理字体分类</strong><br>收藏您喜欢的字体，给喜欢的字体打分类标签。</p></li><li><p><strong>3、本地字体 自动读取</strong><br>自动读取本地字体，无需额外操作。</p></li></ul></li></ul><ul><li><p><strong>一键缺失字体补齐</strong></p><ul><li><strong>1、系统自动补齐</strong><br>打开应用软件，再打开iFonts客户端，系统自动补齐字体。</li><li><strong>2、点击智能补齐</strong><br>系统自动没有补齐的情况下，点击补齐按钮，可智能后台补齐。</li><li><strong>3、上传文件补齐</strong><br>在系统智能都没有补齐都情况下，可上传源文件补齐。</li></ul></li><li><p><strong>炫酷特效 拖拽即用</strong></p><ul><li><strong>1、在线预览 拖拽即用</strong><br>在线输入文案，及时生成拖拽到任何应用软件。</li></ul></li></ul><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p>Mac和Windows都支持，点我下载：<span class='btn'><a class="button" href='https://51ifonts.com/client?inviter_uid=2619993&from=&pic=1' title='点我下载'><i class='fas fa-download'></i>点我下载</a></span><br><img src="https://51ifonts.com/images/activity/laxin/share2.jpg" alt="ifonts字体管理软件邀请图"></p><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>同类型软件还有<a href="https://www.hellofont.cn/"><strong>字由</strong></a>（上海驿创信息技术有限公司，<strong>注册资金165万元</strong>），在字体选择上感觉都差不多，还是推荐ifonts（上海羚狼网络信息科技有限公司，<strong>注册资金1000万元</strong>）吧，毕竟注册资金高。阿呸，<strong>ifonts点一下就能换字体，字由需要先点一下下载，然后才能更换。</strong>这感觉这个是最大的不同了，不过你也可以两个都下载，一起用。就像我这样：</p><p><img src="https://picup.heson10.com/img/upyun/image-20200907195340489.png" alt="字体软件对比"></p><p>说实在的，普通设计者用这个软件，够了！也挺方便！</p><p>ok，今天这篇水完了。既然进来看了，就留个言吧！</p><p><img src="https://picup.heson10.com/img/upyun/image-20200907195624576.png" alt="装逼"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;article class=&quot;message warning&quot;&gt;&lt;div class=&quot;message_body&quot;&gt;&lt;p&gt;嗯，首先声明：这是一篇水文。&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;

&lt;p&gt;今天主要介绍一下这款字体管理软件，&lt;strong&gt;iFonts字体管理助手&lt;/</summary>
      
    
    
    
    <category term="软件" scheme="https://www.heson10.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="字体" scheme="https://www.heson10.com/tags/%E5%AD%97%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>给博客增加彩色标签云</title>
    <link href="https://www.heson10.com/posts/5892.html"/>
    <id>https://www.heson10.com/posts/5892.html</id>
    <published>2020-09-02T11:27:22.000Z</published>
    <updated>2020-09-22T14:49:03.987Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>标签云个人认为最重要的作用，是方便用户根据标签分类，进行文章查找，对于提升博客浏览深度很有帮助。同样，归档和分类页面同样有着相同的作用。</p><p>至于SEO方面，一是可以丰富博客内链，二是用于提升关键词密度。</p><p>鉴于此，通过修改模板可以把标签云和归档放在同一页面下，同时给标签云加上彩色的背景和文字，使它更加的好(zhuang)看(bi)。于是有了下面这个页面：</p><p><img src="https://picup.heson10.com/img/upyun/image-20200902195728556.png" alt="黑石博客彩色标签云"></p><p>闲话不多说，下面是教程</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>同样是以<a href="https://volantis.js.org/">volantis</a>主题为例（我是4.0版本）：</p><h3 id="合并标签云和归档页面"><a href="#合并标签云和归档页面" class="headerlink" title="合并标签云和归档页面"></a>合并标签云和归档页面</h3><p>合并之前，需要搞清楚这两个页面是通过哪个文件生成的。</p><ul><li><p>标签云页面：<code>\themes\volantis\layout\tag.ejs</code></p></li><li><p>归档页面：<code>themes\volantis\layout\archive.ejs</code></p></li></ul><p>下面我们打开<code>tag.ejs</code>页面，复制以下内容（下面是我修改过的，增加了标题）：</p><pre><code class="ejs">        &lt;article id=&quot;tag&quot; class=&quot;post article white-box reveal &lt;%- theme.custom_css.body.effect.join(&#39; &#39;) %&gt;&quot;&gt;            &lt;h2&gt;&lt;i class=&quot;fas fa-cloud&quot;&gt;&lt;/i&gt;&amp;nbsp;标签云&lt;/h2&gt;            &lt;div class=&quot;all-tags&quot;&gt;              &lt;% let tc = theme.sidebar.widget_library.tagcloud; %&gt;              &lt;%- list_tags(&#123;&#125;) %&gt;            &lt;/div&gt;            &lt;script&gt;colortag();&lt;/script&gt;            &lt;br&gt;            &lt;%- page.content %&gt;     &lt;/article&gt;</code></pre><p>到<code>archive.ejs</code>页面：</p><p><img src="https://picup.heson10.com/img/upyun/image-20200902200436173.png" alt="标签云添加"></p><p>加到如图这个地方，同时我加了标签云和归档的标题：</p><pre><code class="ejs">&lt;h2&gt;&lt;i class=&quot;fas fa-cloud&quot;&gt;&lt;/i&gt;&amp;nbsp;标签云&lt;/h2&gt;</code></pre><pre><code class="ejs">&lt;h2&gt;&lt;i class=&quot;fas fa-book-open&quot;&gt;&lt;/i&gt;&amp;nbsp;时间轴&lt;/h2&gt;</code></pre><h2 id="添加CSS样式"><a href="#添加CSS样式" class="headerlink" title="添加CSS样式"></a>添加CSS样式</h2><p>同样直接扔到main.styl里面：</p><pre><code class="stylus">.tagred  background: #feecf0  color:#cc0f35.tagyellow  background: #f4e9ff  color:#8a51c0.tagblue  background: #eef3fc  color:#2160c4.taggreen  background: #ebfffc  color:#00947e.tagpurple  background: #f4e9ff  color:#8a51c0.taggrown  background: #fffbeb  color:#947600</code></pre><p>若有的童鞋不变色的话，请给此css加上最高优先级，如下：</p><pre><code class="stylus">.tagred  background: #feecf0!important  color:#cc0f35!important.tagyellow  background: #f4e9ff!important  color:#8a51c0!important.tagblue  background: #eef3fc!important  color:#2160c4!important.taggreen  background: #ebfffc!important  color:#00947e!important.tagpurple  background: #f4e9ff!important  color:#8a51c0!important.taggrown  background: #fffbeb!important  color:#947600!important</code></pre><h3 id="增加jQuery函数"><a href="#增加jQuery函数" class="headerlink" title="增加jQuery函数"></a>增加jQuery函数</h3><p>放到<code>themes\volantis\source\js\app.js</code>里面</p><pre><code class="javascript">function colortag()&#123;$(&quot;ul.tag-list li&quot;).each(function()&#123;    let random = Math.floor(Math.random()*5+1);    if(random == 2)&#123;        $(this).find(&#39;a&#39;).addClass(&#39;tagred&#39;);    &#125; else if ( random == 3 )&#123;        $(this).find(&#39;a&#39;).addClass(&#39;tagyellow&#39;);    &#125; else if ( random == 4 )&#123;        $(this).find(&#39;a&#39;).addClass(&#39;tagblue&#39;);    &#125; else if ( random == 5 )&#123;        $(this).find(&#39;a&#39;).addClass(&#39;taggreen&#39;);    &#125; else if ( random == 2 )&#123;        $(this).find(&#39;a&#39;).addClass(&#39;tagpurple&#39;);    &#125; else if ( random == 1 )&#123;        $(this).find(&#39;a&#39;).addClass(&#39;taggrown&#39;);    &#125;&#125;);&#125;colortag();</code></pre><p>此函数主要随机取得标签云的a链接，并添加随机颜色的class，之前class样式已经在css里设置了。</p><p>修改完毕！</p><p>最后，发布一条声明：</p><p>我的博客即将同步至腾讯云+社区，邀请大家一同入驻：<a href="https://cloud.tencent.com/developer/support-plan?invite_code=1md043iqtkk1p">https://cloud.tencent.com/developer/support-plan?invite_code=1md043iqtkk1p</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;标签云个人认为最重要的作用，是方便用户根据标签分类，进行文章查找，对于提升博客浏览深度很有帮助。同样，归档和分类页面同样有着相同的作用。&lt;/</summary>
      
    
    
    
    <category term="hexo" scheme="https://www.heson10.com/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo博客调用Valine最新评论</title>
    <link href="https://www.heson10.com/posts/7207.html"/>
    <id>https://www.heson10.com/posts/7207.html</id>
    <published>2020-08-28T04:53:31.000Z</published>
    <updated>2020-09-22T04:46:37.144Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Hexo作为静态博客，访问速度还是挺快的，但是还是有局限性的，比如调用最新评论、根据点击量和评论数进行热门文章排序等等。最近几天，在<a href="https://github.com/ppoffice/hexo-theme-icarus">icraus</a>主题的魔改版<a href="https://github.com/removeif/hexo-theme-amazing">amazing</a>主题上看到了最新评论的调用，适用于valine和gitalk，就想把这个功能移植过来，于是就有了这样一个最初的版本：</p><p><img src="https://picup.heson10.com/img/image-20200828142310728.png" alt="valine最新评论"></p><p>感谢<a href="https://removeif.github.io/">辣椒の酱</a>提供的思路，还有<a href="https://dp2px.com/laboratory/">水寒大佬</a>的代码。 </p><p>本文调用Valine最新评论的代码，是在水寒博客的评论调用的基础上，增加了一下功能：</p><ul><li>评论者网址</li><li>评论定位链接</li><li>博主判断</li><li><del>评论头像显示</del> <strong>感觉没啥必要，但功能可以实现</strong></li></ul><p><strong>9月4日更新</strong>:</p><p><strong>修改为保姆级教程，附上修改位置图。见修改思路。</strong></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="引用文件"><a href="#引用文件" class="headerlink" title="引用文件"></a>引用文件</h3><p>这个是leancloud sdk，必须在最开始调用，否则会报错</p><pre><code class="html">//cdn.jsdelivr.net/npm/leancloud-storage@3/dist/av-min.js</code></pre><p>接下来就是valine.js的调用，这个主题都自带</p><pre><code class="html">//cdn.jsdelivr.net/npm/valine@1.4/dist/Valine.min.js</code></pre><h3 id="js核心代码"><a href="#js核心代码" class="headerlink" title="js核心代码"></a>js核心代码</h3><p>把功能代码封装成名为 <code>newcomment()</code> 的函数：</p><pre><code class="javascript">  function newcomment() &#123;    function queryLeanCloud(k) &#123;      let root = this;      let len = arguments.length;      if (len == 1) &#123;        let notExist = new AV.Query(&quot;Comment&quot;);        notExist.doesNotExist(&#39;rid&#39;);        let isEmpty = new AV.Query(&quot;Comment&quot;);        isEmpty.equalTo(&#39;rid&#39;, &#39;&#39;);        let q = AV.Query.or(notExist, isEmpty);        if (k === &#39;*&#39;) q.exists(&#39;url&#39;);        else q.equalTo(&#39;url&#39;, decodeURI(k));        q.addDescending(&#39;createdAt&#39;);        q.addDescending(&#39;insertedAt&#39;);        return q;      &#125; else &#123;        let ids = JSON.stringify(arguments[1]).replace(/(\[|\])/g, &#39;&#39;);        let cql = `select * from $&#123;root[&#39;config&#39;][&#39;clazzName&#39;]&#125; where rid in ($&#123;ids&#125;) order by -createdAt,-createdAt`;        return AV.Query.doCloudQuery(cql)      &#125;    &#125;    var valine = new Valine(&#123;      el: &#39;#valine_container_ba（因为主题已经有valine的这些参数了，这里随意填都行）&#39;,      app_id: &#39;换成自己的leancloud appid&#39;,      app_key: &#39;换成自己的&#39;,      placeholder: &#39;&#39;,      serverURLs: &#39;换成自己的api&#39;    &#125;);    //判断博主，heson改为自己的昵称    function bozhu(e)&#123;        if (e == &quot;heson&quot;)&#123;            nick = e + &#39;[博主]&#39;            return nick;        &#125; else &#123;          return e        &#125;    &#125;   //判断网址   function wangzhi(e)&#123;        http = e.slice(0,4)        https = e.slice(0,5)        if (http == &quot;http&quot; || https == &quot;https&quot; )&#123;             return e        &#125; else if (e == &quot;&quot; || e == null || e == undefined)&#123;          return e        &#125; else &#123;          e = &#39;http://&#39;+ e          return e        &#125;    &#125;    //查询评论    valine.Q(&#39;*&#39;).limit(7).find().then(function (comments) &#123;      var hotComments = $(&quot;#hot-comments&quot;);      for (var i = 0; i &lt; comments.length; i++) &#123;        if (i === 0) &#123;          console.log(comments[0]);        &#125;        var nick = bozhu(comments[i]._serverData.nick);        var content = comments[i]._serverData.comment;        var newcontent = content.substring(0, 50).replace(/&lt;[^&gt;]+&gt;/g,&quot;&quot;);        var url = comments[i]._serverData.url;        var link = wangzhi(comments[i]._serverData.link);        var updatedAt = timeago(comments[i].updatedAt);        var commentId = &#39;#&#39; + comments[i].id;        hotComments.append(&#39;&lt;div class=&quot;card-comment-item&quot;&gt;&lt;div class=&quot;item-header-text&quot;&gt;&lt;a href=&quot;&#39;+ link +&#39;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot; class=&quot;newcomment&quot; &gt;&#39; + nick + &#39;&lt;/a&gt;&amp;nbsp;发表于&#39; + updatedAt + &#39;&lt;/div&gt;&lt;div class=&quot;item-text&quot;&gt;&lt;a href=&quot;&#39; + url + commentId +&#39;&quot;  rel=&quot;nofollow&quot; style=&quot;color:#717171&quot; class=&quot;comments-detail&quot; &gt;&#39; + newcontent + &#39;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&#39;);      &#125;    &#125;);&#125;;</code></pre><p>注意在判断博主的位置，需要改成自己评论的昵称。</p><p>在<code>content.substring(0, 50)</code>处是截断评论字数，这里设置为50个英文字符长度。</p><p>通过F12控制台可以看到，这里还能根据邮箱信息，调用头像参数，但我就没写上去了，感觉没什么必要，如图所示：</p><p><img src="https://picup.heson10.com/img/image-20200828143721578.png" alt="image-20200828143721578"></p><h3 id="css-代码"><a href="#css-代码" class="headerlink" title="css 代码"></a>css 代码</h3><p>每个评论底部加上分割线用于区分，发表时间淡化字体颜色，链接hover用的主题的颜色，要改的基本就这些，如果含有头像的话，可以设置鼠标悬停显示，这样效果也挺不错，动手能力强的小伙伴可以自己加：</p><pre><code class="css">.card-comment-item  margin:10px 0 10px 0  border-bottom: 1px solid #e2dada  padding-bottom:5px.item-header-text   color:#9a9a9a.item-text  margin-top:5px  padding:0a.newcomment&#123;  font-weight:bold;  color:#444;&#125;a.newcomment:hover&#123;  color:#36ac91!important; &#125;a.comments-detail:hover&#123;  color:#36ac91!important;&#125;</code></pre><h3 id="修改思路"><a href="#修改思路" class="headerlink" title="修改思路"></a>修改思路</h3><ul><li>核心js代码加载<code>themes\volantis\layout\_third-party\comments\valine\script.ejs</code></li></ul><p><img src="https://pic.heson10.com//qiniu/image-20200904202212211.png" alt="valine最新评论修改图1"></p><p><img src="https://pic.heson10.com//qiniu/image-20200904202410294.png" alt="valine最新评论修改图2"></p><p><img src="https://pic.heson10.com//qiniu/image-20200904202514212.png" alt="valine最新评论修改图3"></p><ul><li><p>因为开启了pjax，<code>newcomment()</code>的调用放在<code>themes\volantis\layout\_third-party\pjax\index.ejs</code></p><p> <img src="https://pic.heson10.com//qiniu/image-20200904202610223.png" alt="valine最新评论修改图4"></p></li><li><p>CSS直接丢在main.styl里了</p></li><li><p>主题配置里面要加上通用文本栏目，核心是<code>id为hot-comments的div框</code>，js要通过这个id进行渲染，代码如下：</p><pre><code class="yaml">    newcomment:      class: text      display: [desktop] # [desktop, mobile]      header:        icon: far fa-comments        title: 最新评论        url:       content:         - &#39;&lt;div id=&quot;hot-comments&quot;&gt;&lt;/div&gt;&#39;</code></pre></li></ul>]]></content>
    
    
    <summary type="html">给博客加上最新评论栏目。以Volantis主题为例，给侧边栏加上最新评论功能，实现整站调用。</summary>
    
    
    
    <category term="hexo" scheme="https://www.heson10.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://www.heson10.com/tags/hexo/"/>
    
    <category term="评论" scheme="https://www.heson10.com/tags/%E8%AF%84%E8%AE%BA/"/>
    
    <category term="折腾" scheme="https://www.heson10.com/tags/%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>用Python给Markdown文件优雅更名</title>
    <link href="https://www.heson10.com/posts/899.html"/>
    <id>https://www.heson10.com/posts/899.html</id>
    <published>2020-08-24T07:59:38.000Z</published>
    <updated>2020-08-26T13:00:45.994Z</updated>
    
    <content type="html"><![CDATA[<article class="message moren"><div class="message_body"><p>,前期域名从heson.xyz更换到heson10.com，好多图片链接需要重新更换，这里记录了由Python优雅地帮助我们快速更换markdown文件字符的一次过程。</p></div></article><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>python真的是太万能了，直接上效果图：</p><p><img src="https://picup.heson10.com/img/rename.gif" alt="rename"></p><h2 id="食用方法"><a href="#食用方法" class="headerlink" title="食用方法"></a>食用方法</h2><p>首页得要安装python的环境，这个网上教程一大堆，自行出门左拐找度娘。</p><p>直接上代码：</p><pre><code class="python">#!/usr/bin/env python# -*- coding:utf-8 -*-import osimport reimport timedef modify_md_content(top):    for root, dirs, files in os.walk(top, topdown=False):        # 循环文件        for file_name in files:            file_name_split = file_name.split(&#39;.&#39;)            try:                if file_name_split[-1] == &#39;md&#39;:                    # 找到md文件并且复制一份md文件路径                    md_file_path = os.path.join(root, &#39;.&#39;.join(file_name_split))                    copy_md_file_path = os.path.join(root, &#39;.&#39;.join([f&#39;&#123;file_name_split[0]&#125;_copy&#39;, file_name_split[1]]))                    # 打开md文件然后进行替换                    with open(md_file_path, &#39;r&#39;, encoding=&#39;utf8&#39;) as fr, \                            open(copy_md_file_path, &#39;w&#39;, encoding=&#39;utf8&#39;) as fw:                        data = fr.read()                        # 选择md文件中想要替换的字段                        data = re.sub(&#39;https://pic.heson.xyz/img/&#39;, &#39;https://pic.heson10.com/img/&#39;, data)                        fw.write(data)  # 新文件一次性写入原文件内容                        # fw.flush()                    # 删除原文件                    os.remove(md_file_path)                    # 重命名新文件名为原文件名                    os.rename(copy_md_file_path, md_file_path)                    print(f&#39;&#123;md_file_path&#125; done...&#39;)                    time.sleep(0.5)            except FileNotFoundError as e:                print(e)        time.sleep(0.5)if __name__ == &#39;__main__&#39;:    top = r&#39;D:\hexo\source\_posts&#39;    modify_md_content(top)</code></pre><p>其中由三个变量需要自己修改：</p><p>1.<code>https://pic.heson.xyz/img/</code> 这是原来的字符</p><p>2.<code>https://pic.heson10.com/img/</code>这是用来替换的字符</p><p>3.<code>D:\hexo\source\_posts</code>这是系统中markdown文件存放的位置</p><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>当然，举一反三，这个不仅能用来替换连续的字符，再加上一点修改，利用正则表达式，替换<code>正括号%note, %反括号</code>等这样一些标签元素，理论上也是可行的。</p>]]></content>
    
    
    <summary type="html">&lt;article class=&quot;message moren&quot;&gt;&lt;div class=&quot;message_body&quot;&gt;&lt;p&gt;,前期域名从heson.xyz更换到heson10.com，好多图片链接需要重新更换，这里记录了由Python优雅地帮助我们快速更换markdown文件字符的一次过程。&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;</summary>
    
    
    
    <category term="python" scheme="https://www.heson10.com/categories/python/"/>
    
    
    <category term="markdown" scheme="https://www.heson10.com/tags/markdown/"/>
    
    <category term="Python" scheme="https://www.heson10.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>给Hexo Volantis主题添加图片轮播功能</title>
    <link href="https://www.heson10.com/posts/19736.html"/>
    <id>https://www.heson10.com/posts/19736.html</id>
    <published>2020-08-21T04:23:12.000Z</published>
    <updated>2020-09-21T05:19:18.853Z</updated>
    
    <content type="html"><![CDATA[<article class="message "><div class="message_body"><p>很多网站首页都会有图片轮播效果，给网站的首页加上图片轮播的效果，可以很好的起到广告的作用也可以起到推荐优秀内容的作用。来吧，下面是给Volantis主题加上首页图片轮播的效果。</p></div></article><a id="more"></a><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p>以下是1.0版本的效果图，后期<del>说不定</del>会改：</p><p><img src="https://picup.heson10.com/img/image-20200821124534122.png" alt="image-20200821124534122"></p><h2 id="整体思路"><a href="#整体思路" class="headerlink" title="整体思路"></a>整体思路</h2><p>1.寻找自己喜欢的图片轮播插件；</p><p>2.在首页模板<code>archive.ejs</code>中添加图片轮播代码；</p><p>3.引用所需的jq库（主题自带）、js和css；</p><p>4.修改配置文件，增加轮播开关和图片替换等功能。</p><h2 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h2><h3 id="下载JQuery插件"><a href="#下载JQuery插件" class="headerlink" title="下载JQuery插件"></a>下载JQuery插件</h3><p>我已经上传到网盘：</p><pre><code class="shell">链接：https://pan.baidu.com/s/1D0ytw6w33uRCyXDX-4ubPA 提取码：q4hg</code></pre><h3 id="增加轮播框架"><a href="#增加轮播框架" class="headerlink" title="增加轮播框架"></a>增加轮播框架</h3><ul><li>在<code>themes\volantis\layout\_widget</code>中新建<code>main_banner.ejs</code>文件</li><li>在main_banner.ejs文件中写入以下代码：</li></ul><pre><code class="ejs">&lt;div class=&quot;heson_row&quot;&gt;    &lt;div class=&quot;main_banner shadow floatable blur&quot;&gt;        &lt;div class=&quot;banners&quot;&gt;            &lt;!--加上左右箭头》》--&gt;            &lt;div class=&quot;click_left&quot;&gt;                &lt;img class=&quot;get_height&quot; onclick=&quot;banner_left_right(&#39;left&#39;)&quot; src=&quot;../img/banner_left.png&quot;&gt;            &lt;/div&gt;            &lt;div class=&quot;click_right&quot;&gt;                &lt;img onclick=&quot;banner_left_right(&#39;right&#39;)&quot; src=&quot;../img/banner_right.png&quot;&gt;            &lt;/div&gt;            &lt;!--《《加上左右箭头--&gt;            &lt;div class=&quot;number&quot;&gt;                &lt;div class=&quot;numbers&quot;&gt;                &lt;/div&gt;                &lt;div style=&quot;clear: both;&quot;&gt;&lt;/div&gt;            &lt;/div&gt;            &lt;div class=&quot;banner_img&quot;&gt;                &lt;!--主题config中配置参数--&gt;                &lt;%- theme.plugins.main_banner.pics %&gt;            &lt;/div&gt;            &lt;script type=&quot;text/javascript&quot;&gt;                var speed = &lt;%= theme.plugins.main_banner.speed %&gt;;//配置中调用切换等待时间                var banner_max = &lt;%= theme.plugins.main_banner.banner_max %&gt;;//配置中调用banner总数            &lt;/script&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;div class=&quot;hot_post&quot;&gt;        &lt;!--热门文章含图片--&gt;        &lt;div class=&quot;index-banner&quot;&gt;            &lt;a href=&quot;&lt;%- theme.plugins.hot_post.post_one %&gt;&quot; target=&quot;_blank&quot;&gt;                &lt;img src=&quot;&lt;%- theme.plugins.hot_post.pic_one %&gt;&quot; style=&quot;width: 100%;&quot;&gt;            &lt;/a&gt;        &lt;/div&gt;        &lt;div class=&quot;index-banner forpadding&quot;&gt;            &lt;a href=&quot;&lt;%- theme.plugins.hot_post.post_two %&gt;&quot; target=&quot;_blank&quot;&gt;                &lt;img src=&quot;&lt;%- theme.plugins.hot_post.pic_two %&gt;&quot; style=&quot;width: 100%;&quot;&gt;            &lt;/a&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt;</code></pre><h3 id="增加CSS样式和所需图片"><a href="#增加CSS样式和所需图片" class="headerlink" title="增加CSS样式和所需图片"></a>增加CSS样式和所需图片</h3><ul><li><p>把前面网盘里面文件下载，找到img里的箭头图标，放进<code>themes\volantis\source\img</code><br><img src="https://picup.heson10.com/img/image-20200821203336667.png" alt="image-20200821203336667"></p></li><li><p>在themes\volantis\source\css\style.css中，增加代码：</p></li></ul><pre><code class="stylus">if hexo-config(&#39;plugins.main_banner.enable&#39;)    @import &#39;_other/main_banner&#39;</code></pre><ul><li>在<code>themes\volantis\source\css\_other</code>文件夹<strong>（没有请新建）</strong>里增加文件<code>main_banner.styl</code>，并在其添加如下代码：</li></ul><pre><code class="stylus">.main_banner  width:66%  float:left  img   border-radius: 8px;  height:100%  @media screen and (max-width: 800px)    width:100%   height:40vw   float:left .hot_post  width:33%  height:100%  float:left  padding:0 0px 0 1vw  @media screen and (max-width: 800px)    width:100%   height:50vw   float:left   margin-top:1vw   padding:0  .forpadding    padding-top:0.5vw   .index-banner    position: relative;    height:50%.heson_row  background-color: none  width:100%  height:20vw  max-height:400px  margin-top:20px;  @media screen and (max-width: 800px)     width:100%    height:65vw  @media screen and (max-width: $device-2k)     width:100%    height:25vw.banners  width: 100%;  height: 100%;  margin: 0 auto;  position: relative;  overflow: hidden;  background-color: rgba(200,200,200,0.5)  @media screen and (max-width: 600px)     width:100%    height:40vw    float:left.hot_post img &#123;   height:100%   border-radius:8px&#125;.banners:hover .click_left&#123;    display: block;&#125;.banners:hover .click_right&#123;    display: block;&#125;.click_left&#123;    width: 1vw;    position: absolute;    z-index: 10;    left: 2vw;    top:2.5vw;    display: none;&#125;.click_right&#123;    width: 1vw;    position: absolute;    z-index: 10;    right: 2vw;    top:2.5vw;    display: none;&#125;.click_left img,.click_right img&#123;    width: 100%;    height: 100%;&#125;.number&#123;    width: 100%;    height: 1vw;    line-height: 1vw;    position: absolute;    z-index: 10;    text-align: center;    bottom: 1.5vw;&#125;.numbers&#123;    display: inline-block;&#125;.numbers span&#123;    color: white;    font-size: 0.7vw;    display: block;    float: left;    width: 1vw;    height: 1vw;    line-height: 1vw;    text-align: center;    border-radius: 100vw;    margin: 0 0.5vw;    padding: 0vw;    border: 0.1vw solid white;&#125;.numbers span:hover&#123;    cursor: pointer;&#125;.banner_img&#123;    width: 100%;    height: 100%;&#125;.banner_img img&#123;    width: 100%;    height: 100%;    position: absolute;    break-inside: 1;&#125;.l_main .post-list &#123;    margin:0 auto!important;    float: left;&#125;</code></pre><h3 id="增加JS文件"><a href="#增加JS文件" class="headerlink" title="增加JS文件"></a>增加JS文件</h3><ul><li>在<code>themes\volantis\layout\layout.ejs</code>中<code>&lt;/body&gt;</code>上加上代码:</li></ul><pre><code class="ejs">  &lt;% if (theme.plugins.main_banner.enable == true) &#123; %&gt;    &lt;script src=&quot;../js/main_banner.js&quot;&gt;&lt;/script&gt;  &lt;% &#125; %&gt;</code></pre><ul><li>在<code>themes\volantis\source\js</code>中增加<code>main_banner.js</code>，其中代码为：</li></ul><pre><code class="javascript">/*图片轮播*/var banners = 1;//banner显示的第一幅画面1~banner_max范围内任意选择var timer;//计时器对象//img标签后直接调用运行function loads() &#123;    var img_num = banner_max    $(&quot;.banner_img&quot; + banners).fadeTo(100, 1);//显示设置的第一张banner    var numbers_span = &quot;&quot;;    for (var i = 1; i &lt;= img_num; ++i) &#123;        numbers_span += &#39;&lt;span class=&quot;num&#39; + i + &#39;&quot; onclick=&quot;manual_replace_banner(&#39; + i + &#39;)&quot;&gt;&#39; + i + &#39;&lt;/span&gt;&#39;; //循环赋值到字符串    &#125;    $(&quot;.numbers&quot;).html(numbers_span);//设置对应banner的数字    //自适应修改行高    var banners_height = $(&quot;.banners&quot;).height();    $(&quot;.banners&quot;).css(&quot;line-height&quot;, banners_height + &quot;px&quot;);&#125;//窗口事件修改行高$(window).resize(function () &#123;    var banners_height = $(&quot;.banners&quot;).height();    $(&quot;.banners&quot;).css(&quot;line-height&quot;, banners_height + &quot;px&quot;);&#125;);//页面文件加载完毕后自动调用$(document).ready(function () &#123;    banner_number();//banner页数高亮显示    timer = setInterval(auto_replace_banner, speed * 1000);//banner切换计时器&#125;);//点击左右按钮更换bannerfunction banner_left_right(sj) &#123;    var sjs;    if (sj == &quot;left&quot;) &#123;        if (banners == 1) &#123;            sjs = banner_max;        &#125;        else &#123;            sjs = banners - 1;        &#125;    &#125;    else &#123;        if (banners == banner_max) &#123;            sjs = 1;        &#125;        else &#123;            sjs = banners + 1;        &#125;    &#125;    manual_replace_banner(sjs);&#125;//点击数字切换function manual_replace_banner(sj) &#123;    var bannerz = banners;    banners = sj;    if (banners == bannerz) &#123;        return;    &#125;    clearInterval(timer);//停止计时器    fade_in_out(bannerz, banners);//调用切换函数    timer = setInterval(auto_replace_banner, speed * 1000);//banner切换计时器重新启动&#125;//自动更换bannerfunction auto_replace_banner() &#123;    var bannerz = banners;    if (banners == banner_max) &#123;        banners = 1;    &#125;    else &#123;        banners += 1;    &#125;    fade_in_out(bannerz, banners);//调用切换函数&#125;//淡入淡出效果方法function fade_in_out(bannerz, banners) &#123;    var out_id = &quot;.banner_img&quot; + bannerz;//淡出标签的ID名    var banner_out = $(out_id);//获取淡出对象    var in_id = &quot;.banner_img&quot; + banners;//淡入标签的ID名    var bannet_in = $(in_id);//获取淡入对象    banner_out.fadeTo(600, 0);//JQuery方法淡出到指定透明度,参数1为速度，参数2为透明度    bannet_in.fadeTo(500, 1);//JQuery方法淡入,参数1为速度，参数2为透明度    banner_number();//调用数字颜色更换&#125;//banner数字显示function banner_number() &#123;    for (var i = 1; i &lt;= banner_max; i++) &#123;        var num_id = &quot;.num&quot; + i;        var num_object = $(num_id);        if (banners == i) &#123;            num_object.css(&quot;color&quot;, &quot;black&quot;);            num_object.css(&quot;backgroundColor&quot;, &quot;white&quot;);        &#125;        else &#123;            num_object.css(&quot;color&quot;, &quot;white&quot;);            num_object.css(&quot;backgroundColor&quot;, &quot;rgba(0,0,0,0)&quot;);        &#125;    &#125;&#125;//banner链接跳转function link(url, mode = true) &#123;    if (mode == true) &#123;        window.open(url);    &#125;    else &#123;        window.location.href = url;    &#125;&#125;loads();</code></pre><h3 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h3><p>在plugins:下增加如下代码：</p><pre><code class="yaml">  main_banner:    enable: true    # 开启图片轮播    banner_max: 3   #图片数量    speed: 2        #切换秒数    pics:   # 在此更换图片   &lt;img class=&quot;banner_img（注意这里填1、2、3、4、5）&quot; src=&quot;图片地址&quot; onclick=&quot;link(&quot;跳转地址&quot;,true（代表新窗口打开）)&quot; style=&quot;opacity: 1;&quot;(第一个填1，后面填0)&gt;       &#39;       &lt;img class=&quot;banner_img1&quot; src=&quot;https://cdn.jsdelivr.net/gh/heson10/pic@master/img/Texture-1.png&quot; onclick=&quot;link(&quot;https://www.heson10.com&quot;,true)&quot; style=&quot;opacity: 1;&quot;&gt;             &lt;img class=&quot;banner_img2&quot; src=&quot;https://cdn.jsdelivr.net/gh/heson10/pic@master/img/Texture-2.png&quot; onclick=&quot;link(&quot;https://www.heson10.com&quot;,false)&quot; style=&quot;opacity: 0;&quot;&gt;       &lt;img class=&quot;banner_img3&quot; src=&quot;https://cdn.jsdelivr.net/gh/heson10/pic@master/img/Texture-3.png&quot; onclick=&quot;link(&quot;https://www.heson10.com&quot;,true)&quot; style=&quot;opacity: 0;&quot;&gt;       &#39;  ########### 热门帖子 ##############  hot_post:    ###### 热门1 #####    pic_one: https://picup.heson10.com/img/spring-boot-learning.png    post_one: https://www.heson10.com    ###### 热门2 #####    pic_two: https://picup.heson10.com/img/spring-cloud-learning.png      post_two: https://www.heson10.com   </code></pre><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><img src="https://picup.heson10.com/img/lunboxiaoguo.png" alt="lunboxiaoguo"></p>]]></content>
    
    
    <summary type="html">&lt;article class=&quot;message &quot;&gt;&lt;div class=&quot;message_body&quot;&gt;&lt;p&gt;很多网站首页都会有图片轮播效果，给网站的首页加上图片轮播的效果，可以很好的起到广告的作用也可以起到推荐优秀内容的作用。来吧，下面是给Volantis主题加上首页图片轮播的效果。&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://www.heson10.com/categories/hexo/"/>
    
    
    <category term="图片" scheme="https://www.heson10.com/tags/%E5%9B%BE%E7%89%87/"/>
    
    <category term="volantis" scheme="https://www.heson10.com/tags/volantis/"/>
    
    <category term="轮播" scheme="https://www.heson10.com/tags/%E8%BD%AE%E6%92%AD/"/>
    
  </entry>
  
  <entry>
    <title>优化Volantis主题中文章页面h1—h6标签（排版更清爽）</title>
    <link href="https://www.heson10.com/posts/35039.html"/>
    <id>https://www.heson10.com/posts/35039.html</id>
    <published>2020-08-16T14:43:41.000Z</published>
    <updated>2020-08-16T15:15:14.295Z</updated>
    
    <content type="html"><![CDATA[<article class="message moren"><div class="message_body"><p>,Volantis是一个非常优秀的主题，各种模块化的小功能让人眼前一亮。但………这个文章内容页h1、h2、h3等标签感觉都是一个样，加上昏暗的#444颜色，着实让人感觉很着急。特别是今天写这个Valine教程合集的时候，因为标题太多了，眼睛都快瞎了。赶紧优化一下！</p></div></article><a id="more"></a><h2 id="修改h1-h6颜色"><a href="#修改h1-h6颜色" class="headerlink" title="修改h1-h6颜色"></a>修改h1-h6颜色</h2><p>在<code>hexo\themes\volantis\source\css\_layout</code>文件夹下找到<code>article.styl</code>文件</p><p>在开头处增加h1-h6颜色参数：</p><pre><code class="stylus">//自定义参数设置$color-h2 = #ad2121$color-h3 = #0028bb$color-h4 = #ad9521</code></pre><p>以上是我加的，一般文章里不用h1标题，我就没有加进去，h5h6用的很少，我也就没加了。</p><h2 id="加粗h1-h6"><a href="#加粗h1-h6" class="headerlink" title="加粗h1-h6"></a>加粗h1-h6</h2><p>同样是<code>article.styl</code>文件，找到h1-h6标签样式处：</p><pre><code class="stylus">  h1    text-align: $textalign-h1    color: $color-h1    margin-top: $gap-h2  h2   ...</code></pre><p>给每个加上<code>font-weight: bold</code>，如下图：</p><pre><code class="stylus">  h1    font-weight: bold    text-align: $textalign-h1    color: $color-h1    margin-top: $gap-h2  h2    font-weight: bold    text-align: $textalign-h2    color: $color-h2    margin-top: $gap-h2  h3    font-weight: bold    text-align: $textalign-h3    color: $color-h3    margin-top: $gap-h3  h4    font-weight: bold    text-align: $textalign-h4    color: $color-h4    margin-top: $gap-h4  h5    font-weight: bold    color: $color-h5    margin-top: $gap-paragraph  h6    font-weight: bold    color: $color-h6    margin-top: $gap-paragraph</code></pre><p>或者直接在开头加</p><pre><code class="stylus">h1,h2,h3,h4,h5,h6    font-weight: bold</code></pre><h2 id="效果对比图"><a href="#效果对比图" class="headerlink" title="效果对比图"></a>效果对比图</h2><p><img src="https://picup.heson10.com/img/volantis%E4%BF%AE%E6%94%B9h1.jpg" alt="volantis修改h1"></p><p>长文效果图预览：<a href="https://www.heson10.com/posts/28396.html">所有关于Valine的配置都在这里【合集】</a></p><article class="message moren"><div class="message_body"><p>warning ,自用修改，不喜勿喷。</p></div></article>]]></content>
    
    
    <summary type="html">&lt;article class=&quot;message moren&quot;&gt;&lt;div class=&quot;message_body&quot;&gt;&lt;p&gt;,Volantis是一个非常优秀的主题，各种模块化的小功能让人眼前一亮。但………这个文章内容页h1、h2、h3等标签感觉都是一个样，加上昏暗的#444颜色，着实让人感觉很着急。特别是今天写这个Valine教程合集的时候，因为标题太多了，眼睛都快瞎了。赶紧优化一下！&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://www.heson10.com/categories/hexo/"/>
    
    
    <category term="优化" scheme="https://www.heson10.com/tags/%E4%BC%98%E5%8C%96/"/>
    
    <category term="主题" scheme="https://www.heson10.com/tags/%E4%B8%BB%E9%A2%98/"/>
    
    <category term="volantis" scheme="https://www.heson10.com/tags/volantis/"/>
    
  </entry>
  
  <entry>
    <title>所有关于Valine评论系统的配置都在这里【合集】</title>
    <link href="https://www.heson10.com/posts/28396.html"/>
    <id>https://www.heson10.com/posts/28396.html</id>
    <published>2020-08-16T02:27:26.000Z</published>
    <updated>2020-09-24T14:40:06.493Z</updated>
    
    <content type="html"><![CDATA[<article class="message moren"><div class="message_body"><p>用Hexo博客的小伙伴们对于Valine并不陌生，这款快速、简洁且高效的无后端评论系统，既能快速加载又能提供文章阅读统计，加上一些魔改，可以增加微信与QQ提醒、后台管理、垃圾评论过滤，可以说非常好用。本文主要是介绍配置Valine和可能会遇到的问题【合集】，很多都是搬运过来的教程，文后会附上参考资料。在此感谢这些大佬的参考教程。</p></div></article><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>以下标题点击可直接跳转：</p><ul><li><a href="/posts/28396.html#Hexo%E8%AE%BE%E7%BD%AEValine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F">Hexo设置Valine评论系统</a></li><li><a href="/posts/28396.html#Valine%E5%A2%9E%E5%BC%BA%E7%89%88%E9%85%8D%E7%BD%AE%EF%BC%9A%E5%8D%9A%E4%B8%BB%E6%A0%87%E7%AD%BE%E3%80%81%E8%AF%84%E8%AE%BA%E5%90%8E%E5%8F%B0%E3%80%81%E5%BE%AE%E4%BF%A1qq%E6%8F%90%E9%86%92%E3%80%81%E5%9E%83%E5%9C%BE%E8%AF%84%E8%AE%BA%E8%BF%87%E6%BB%A4">Valine增强版配置：博主标签、评论后台、微信qq提醒、垃圾评论过滤</a></li><li><a href="/posts/28396.html#%E8%A7%A3%E5%86%B3LeanCloud%E6%B5%81%E6%8E%A7%E9%97%AE%E9%A2%98">解决LeanCloud流控问题</a></li></ul><p class='p center red'>如有其他疑问，或者还需要添加的教程，请在评论区留言。</p><span class='btn center large'><a class="button" href='#comments' title='评论区直达'>评论区直达</a></span><h2 id="Hexo设置Valine评论系统"><a href="#Hexo设置Valine评论系统" class="headerlink" title="Hexo设置Valine评论系统"></a>Hexo设置Valine评论系统</h2><h3 id="申请LeanCloud账号"><a href="#申请LeanCloud账号" class="headerlink" title="申请LeanCloud账号"></a>申请LeanCloud账号</h3><article class="message "><div class="message_body"><p>Valine 是基于LeanCloud开发的，所以要去LeanCloud申请一个Serverless服务。</p></div></article><p>1.官网地址：<a href="https://leancloud.cn/">https://leancloud.cn/</a>   （国内版）     <a href="https://leancloud.app/">https://leancloud.app/</a>   （国际版）</p><article class="message warning"><div class="message_body"><p>国内和国际版功能上没有区别，只不过国版版本绑定后台域名时，需要绑定备案域名</p></div></article><p>2.注册后登陆，创建一个应用，名称随意填写，开发版即可。</p><p>3.进入刚才创建的应用→点击设置→应用Keys→记录<strong>AppID</strong>、<strong>AppKey</strong></p><p><img src="https://picup.heson10.com/img/image-20200816112412581.png" alt="image-20200816112412581"></p><h3 id="Volantis主题开启valine评论"><a href="#Volantis主题开启valine评论" class="headerlink" title="Volantis主题开启valine评论"></a>Volantis主题开启valine评论</h3><p><strong>以下适合3.0版本，4.0建议看官网文档</strong></p><p><strong>任何主题都是一样，建议多看看官方文档。看官方文档是配置主题各项功能的第一步。</strong></p><p>1.打开主题配置文件，开启Valine评论</p><p><img src="https://picup.heson10.com/img/image-20200816115120959.png" alt="image-20200816115120959"></p><p>2.开启文章阅读数量统计</p><p>要在主题配置文件以下地方加上<code>counter</code>和<code>valinecount</code>，才能开启</p><p><img src="https://picup.heson10.com/img/image-20200816114141334.png" alt="image-20200816114141334"></p><p>3.配置好了之后记得要设置<strong>安全域名</strong>：<a href="https://valine.js.org/quickstart.html#%E5%AE%89%E5%85%A8%E5%9F%9F%E5%90%8D">传送门</a></p><article class="message "><div class="message_body"><p>Valine官网已经给出了集成了valine评论功能的主题，开启方法跟上面大同小异：1.找到主题评论模块设置；2.按照相关参数进行设置。欢迎各位小伙伴选用支持valine的主题→<a href="https://valine.js.org/hexo.html">传送门</a></p></div></article><h2 id="Valine增强版配置：博主标签、评论后台、微信qq提醒、垃圾评论过滤"><a href="#Valine增强版配置：博主标签、评论后台、微信qq提醒、垃圾评论过滤" class="headerlink" title="Valine增强版配置：博主标签、评论后台、微信qq提醒、垃圾评论过滤"></a>Valine增强版配置：博主标签、评论后台、微信qq提醒、垃圾评论过滤</h2><article class="message "><div class="message_body"><p>Valine增强版主要功能是给Valine评论增加一个后台管理功能，经过DesertsP、zhaojun1998、HCLonely、Dreamy.TZK等多位大佬开发、修改，现在功能逐渐完善并实现邮件回复提醒、微信QQ消息推送、邮件回复模板多样化、垃圾评论过滤等功能，主要基于小康修改的valine-admin ，为了符合自己的口味，专门</p></div></article><h3 id="博主、小伙伴、访客标签"><a href="#博主、小伙伴、访客标签" class="headerlink" title="博主、小伙伴、访客标签"></a>博主、小伙伴、访客标签</h3><p>效果如图所示：</p><p>博主<img src="https://picup.heson10.com/img/image-20200816122716653.png" alt="image-20200816122716653"></p><p>小伙伴<img src="https://picup.heson10.com/img/image-20200816122744048.png" alt="image-20200816122744048"></p><p>访客<img src="https://picup.heson10.com/img/image-20200816122809206.png" alt="image-20200816122809206"></p><p>下面以Volantis设置为例：</p><ul><li>添加js链接、并在配置文件增加参数</li></ul><p>使用的是懒人大佬修改的js：</p><pre><code class="html">https://cdn.jsdelivr.net/gh/HCLonely/Valine@latest/dist/Valine.min.js</code></pre><details cyan open><summary> <p>与原生的相比，多了以下功能：</p> </summary>              <div class='content'>              <ul><li><p>添加博主，小伙伴，访客标签</p></li><li><p>添加浏览器和操作系统图标，需 <code>fontawesomeV5</code> 支持</p></li><li><p>邮箱检测更严格</p></li><li><p>增加 QQ 邮箱识别（原版只能通过昵称栏输入 QQ 号识别）</p></li><li><p>meta placeholder 可自定义</p></li></ul>              </div>            </details><details cyan open><summary> <p>使用方法与原生的类似，不同的是可以多设置几个参数：</p> </summary>              <div class='content'>              <table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">说明</th><th align="center">默认</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">tagMeta</td><td align="center">Array</td><td align="center">标签要显示的文字</td><td align="center">[“博主”,“小伙伴”,“访客”]</td><td align="center">[“博主”,“小伙伴”,“访客”]</td></tr><tr><td align="center">master</td><td align="center">Array/String</td><td align="center">md5 加密后的博主邮箱</td><td align="center">[]</td><td align="center">[“fc2c9b067f65c9e2d7057ba797f7cfca”]</td></tr><tr><td align="center">friends</td><td align="center">Array</td><td align="center">md5 加密后的小伙伴邮箱</td><td align="center">[]</td><td align="center">[“4a713ec085a4431f15a8da0942656713”]</td></tr><tr><td align="center">metaPlaceholder</td><td align="center">Object</td><td align="center">meta placeholder 内容</td><td align="center">{}</td><td align="center">{“nick”:“昵称 / QQ 号”,“mail”:“邮箱 (必填)”}</td></tr><tr><td align="center">verify</td><td align="center">Boolean</td><td align="center">评论时是否需要验证，需 jQuery 支持</td><td align="center">false</td><td align="center">true</td></tr></tbody></table>              </div>            </details><ul><li>volantis在主题配置文件中可直接更换，如图：</li></ul><p><img src="https://picup.heson10.com/img/image-20200816122250476.png" alt="image-20200816122250476"></p><p>MD5加密网站：<a href="https://md5jiami.51240.com/">https://md5jiami.51240.com/</a></p><ul><li><p>修改主题文件</p><p>找到主题文件<code>volantis\layout\_third-party\comments\valine\script.ejs</code>，按图添加增加的配置</p><p><img src="https://picup.heson10.com/img/image-20200816123439166.png" alt="image-20200816123439166"></p></li></ul><p>代码：</p><pre><code class="ejs">      master: &#39;[&lt;%= theme.comments.valine.master %&gt;]&#39;,      friends: &#39;[&lt;%= theme.comments.valine.friends %&gt;]&#39;</code></pre><p>至此，就可以在主题配置文件中，直接填写master和friends参数，通过MD5加密的邮箱地址判断博主和小伙伴了。其他参数、其他主题原理相同：</p><details cyan open><summary> <p>原理</p> </summary>              <div class='content'>              <div class='checkbox green checked'><input type="radio" checked="checked"/>            <p>在配置文件增加参数。</p>            </div><div class='checkbox red checked'><input type="radio" checked="checked"/>            <p>主题模板里增加参数调用。</p>            </div>              </div>            </details><h3 id="部署Valine-Admin评论后台"><a href="#部署Valine-Admin评论后台" class="headerlink" title="部署Valine-Admin评论后台"></a>部署Valine-Admin评论后台</h3><h4 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h4><p>进入leancloud，登陆之前创建的Valine应用</p><p><img src="https://picup.heson10.com/img/image-20200816143208797.png" alt="image-20200816143208797"></p><h4 id="进行部署"><a href="#进行部署" class="headerlink" title="进行部署"></a>进行部署</h4><p>安利下我用的自己valine-admin-server （基于小康大佬），去掉了一些二次元的东西（本博主年龄偏大，对此不感冒😂）。</p><p>地址如下：</p><pre><code class="html"> https://github.com/heson525/Valine-Admin-Server</code></pre><p><img src="https://picup.heson10.com/img/image-20200816143419197.png" alt="image-20200816143419197"></p><p><img src="https://picup.heson10.com/img/image-20200816144049811.png" alt="- "></p><p><img src="https://picup.heson10.com/img/image-20200816144630444.png" alt="image-20200816144630444"></p><h4 id="绑定评论后台域名"><a href="#绑定评论后台域名" class="headerlink" title="绑定评论后台域名"></a>绑定评论后台域名</h4><article class="message moren"><div class="message_body"><p>warning ,国内leancloud绑定域名必须使用备案过的域名</p></div></article><p><img src="https://picup.heson10.com/img/image-20200816192418216.png" alt="image-20200816192418216"></p><h4 id="添加参数"><a href="#添加参数" class="headerlink" title="添加参数"></a>添加参数</h4><table><thead><tr><th align="center">变量名</th><th align="center">说明</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">SITE_NAME</td><td align="center">[必填] 网站名称</td><td align="center">黑石博客</td></tr><tr><td align="center">SITE_URL</td><td align="center">[必填] 网站地址，最后不要加 /</td><td align="center"><a href="https://www.heson10.com/">https://www.heson10.com</a></td></tr><tr><td align="center">SMTP_USER</td><td align="center">[必填] SMTP 服务用户名，一般为邮箱地址。</td><td align="center"><a href="mailto:&#x6d;&#x61;&#x69;&#x6c;&#64;&#104;&#101;&#115;&#x6f;&#110;&#x31;&#48;&#x2e;&#x63;&#x6f;&#x6d;">&#x6d;&#x61;&#x69;&#x6c;&#64;&#104;&#101;&#115;&#x6f;&#110;&#x31;&#48;&#x2e;&#x63;&#x6f;&#x6d;</a></td></tr><tr><td align="center">SMTP_PASS</td><td align="center">[必填] SMTP 密码，一般为授权码，而不是邮箱的登陆密码，请自行查询对应邮件服务商的获取方式</td><td align="center">XXXXXXXXXX</td></tr><tr><td align="center">SMTP_SERVICE</td><td align="center">[新版支持] 邮件服务提供商，<a href="https://nodemailer.com/smtp/well-known/">内置支持</a></td><td align="center">163</td></tr><tr><td align="center">SENDER_NAME</td><td align="center">[必填] 寄件人名称。</td><td align="center">黑石博客</td></tr><tr><td align="center">TO_EMAIL</td><td align="center">[可选] 博主通知收件地址，默认使用 SMTP_USER</td><td align="center"><a href="mailto:&#109;&#97;&#105;&#108;&#x40;&#104;&#101;&#115;&#x6f;&#110;&#x31;&#x30;&#46;&#x63;&#111;&#109;">&#109;&#97;&#105;&#108;&#x40;&#104;&#101;&#115;&#x6f;&#110;&#x31;&#x30;&#46;&#x63;&#111;&#109;</a></td></tr><tr><td align="center">BLOGGER_EMAIL</td><td align="center">[可选] 如果设置则作为后台管理员邮箱（/sign-up 页面设置），不设置则默认以 SMTP_USER</td><td align="center"><a href="mailto:&#x6d;&#97;&#x69;&#x6c;&#x40;&#104;&#101;&#x73;&#x6f;&#x6e;&#x31;&#48;&#x2e;&#x63;&#111;&#x6d;">&#x6d;&#97;&#x69;&#x6c;&#x40;&#104;&#101;&#x73;&#x6f;&#x6e;&#x31;&#48;&#x2e;&#x63;&#111;&#x6d;</a></td></tr><tr><td align="center">TEMPLATE_NAME</td><td align="center">[必填] 设置提醒邮件的主题</td><td align="center">custom2</td></tr><tr><td align="center">AKISMET_KEY</td><td align="center">[可选] Akismet Key 用于垃圾评论检测，设为 MANUAL_REVIEW 开启人工审核，留空不使用反垃圾</td><td align="center">xxxx</td></tr><tr><td align="center">ADMIN_URL</td><td align="center">[可选] 后台管理地址 (非博客地址)</td><td align="center"><a href="https://xxxx.leanapp.cn/">https://xxxx.leanapp.cn/</a></td></tr><tr><td align="center">COMMENT</td><td align="center">[可选] 评论 div 的 ID 名</td><td align="center">#comments</td></tr><tr><td align="center">SCKEY</td><td align="center">[可选] server 酱的 SCKEY</td><td align="center">xxx</td></tr><tr><td align="center">AKISMET_KEY</td><td align="center">[可选] Akismet Key 用于垃圾评论检测</td><td align="center">xxxxxxxxxxxx</td></tr><tr><td align="center">QMSG_KEY</td><td align="center">[可选] Qmsg 酱的密钥</td><td align="center">xxxxx</td></tr><tr><td align="center">QQ</td><td align="center">[可选] Qmsg 酱发送的 qq，不填为全部。支持多个，用英文逗号分隔即可</td><td align="center">535668586</td></tr><tr><td align="center">DISABLE_EMAIL</td><td align="center">[可选]，填写则代表停止发送邮件</td><td align="center">TRUE</td></tr><tr><td align="center">QQ_SHAKE</td><td align="center">[可选]，填写代表发送 QQ 戳一戳</td><td align="center">TRUE</td></tr><tr><td align="center">ICP</td><td align="center">[可选] 备案信息，直接填写即可。</td><td align="center">赣ICP备20008960号</td></tr><tr><td align="center">INFO</td><td align="center">[可选] 自定义信息输出，支持 HTML 代码</td><td align="center"><p style='color:red'>test<p></td></tr><tr><td align="center">favicon</td><td align="center">[可选] 网页 favicon 图标</td><td align="center"><a href="https://cdn.jsdelivr.net/gh/heson525/pic@master/pic/favicon.ico">https://cdn.jsdelivr.net/gh/heson525/pic@master/pic/favicon.ico</a></td></tr><tr><td align="center">SPAM_WORDS</td><td align="center">[可选] 需要对屏蔽的关键词，关键词用半角逗号分隔</td><td align="center">单号，物流</td></tr><tr><td align="center">MAIN_COLOR</td><td align="center">[可选] 仅针对 custom2 模板主题的主要颜色</td><td align="center">#ff9191</td></tr><tr><td align="center">MAIN_IMG</td><td align="center">[可选] 仅针对 custom2 模板主题的头图</td><td align="center"><a href="https://bing.rthe.net/wallpaper">https://bing.rthe.net/wallpaper</a></td></tr></tbody></table><p>当使用自定义邮件服务器时（需将 <code>SMTP_SERVICE</code> 变量删掉哦！）</p><table><thead><tr><th align="center">变量名</th><th align="center">说明</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">SMTP_HOST</td><td align="center">邮件服务提供商 SMTP 地址，此项需要自行查询或询问其服务商。</td><td align="center"><code>smtp.ym.163.com</code></td></tr><tr><td align="center">SMTP_PORT</td><td align="center">邮件服务提供商 SMTP 端口，<em>此项需要自行查询或询问其服务商</em>。</td><td align="center">994</td></tr><tr><td align="center">SMTP_SECURE</td><td align="center">是否启用加密，默认为 <code>true</code>，一般不需要设置，如有特殊请自行配置。 <em>此项需要自行查询或询问其服务商</em>。</td><td align="center">true</td></tr></tbody></table><p>此项目的主题字段</p><table><thead><tr><th align="center">模板名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">default</td><td align="center">默认主题</td></tr><tr><td align="center">rainbow</td><td align="center">原版的 rainbow</td></tr><tr><td align="center">custom1</td><td align="center">基于<a href="https://pbas.club/">🎉梨花町の肾兄さん🎉</a>的模板</td></tr><tr><td align="center">custom2</td><td align="center">对 custom1 的改进版</td></tr></tbody></table><p>设置位置：</p><p><img src="https://cdn.jsdelivr.net/gh/heson525/pic@master/pic/image-20200816192116792.png" alt="image-20200816192116792"></p><h4 id="后台管理员注册"><a href="#后台管理员注册" class="headerlink" title="后台管理员注册"></a>后台管理员注册</h4><p>打开绑定的域名 +<code>/sign-up</code>，例如我的域名为 <code>https://leancloud.heson10.com/</code>，那么我访问的地址就是 <code>https://leancloud.heson10.com/sign-up</code>。接下来设置你的登录信息。</p><p><img src="https://picup.heson10.com/img/image-20200816194246888.png" alt="image-20200816194246888"></p><h4 id="后台评论管理"><a href="#后台评论管理" class="headerlink" title="后台评论管理"></a>后台评论管理</h4><p>登录地址：<a href="https://leancloud.heson10.com/">https://leancloud.heson10.com</a></p><p><img src="https://picup.heson10.com/img/image-20200816194400223.png" alt="image-20200816194400223"></p><p> 至此，Valine-admin已设置完毕。</p><h3 id="微信、QQ提醒"><a href="#微信、QQ提醒" class="headerlink" title="微信、QQ提醒"></a>微信、QQ提醒</h3><h4 id="微信Server酱-SCKEY-获取"><a href="#微信Server酱-SCKEY-获取" class="headerlink" title="微信Server酱 SCKEY 获取"></a>微信Server酱 SCKEY 获取</h4><p>官网注册：<a href="http://sc.ftqq.com/3.version">http://sc.ftqq.com/3.version</a></p><ul><li>用github账户登录</li><li>获取SCKEY并填入变量</li><li>在Server酱上绑定微信即可</li></ul><h4 id="QQmsg-密钥获取"><a href="#QQmsg-密钥获取" class="headerlink" title="QQmsg 密钥获取"></a>QQmsg 密钥获取</h4><p>官网注册：<a href="https://qmsg.zendee.cn/">https://qmsg.zendee.cn/</a></p><p><del>最近貌似官网要停业了，已经不开放注册了</del></p><p><del>建议设置微信提醒。</del></p><p>又被续命了！</p><p><img src="https://picup.heson10.com/img/image-20200816193845192.png" alt="image-20200816193845192"></p><h3 id="垃圾评论过滤"><a href="#垃圾评论过滤" class="headerlink" title="垃圾评论过滤"></a>垃圾评论过滤</h3><article class="message moren"><div class="message_body"><p>info,Akismet (Automattic Kismet) 是应用广泛的一个垃圾留言过滤系统，其作者是大名鼎鼎的 WordPress 创始人 Matt Mullenweg，Akismet 也是 WordPress 默认安装的插件，其使用非常广泛，设计目标便是帮助博客网站来过滤留言 Spam。有了 Akismet 之后，基本上不用担心垃圾留言的烦恼了。 启用 Akismet 后，当博客再收到留言会自动将其提交到 Akismet 并与 Akismet 上的黑名单进行比对，如果名列该黑名单中，则该条留言会被标记为垃圾评论且不会发布。</p></div></article><p>只需在<code>AKISMET_KEY</code>变量上填入<code>Akismet Key</code></p><p>申请地址：<a href="https://akismet.com/development/">https://akismet.com/development/</a></p><h2 id="解决LeanCloud流控问题"><a href="#解决LeanCloud流控问题" class="headerlink" title="解决LeanCloud流控问题"></a>解决LeanCloud流控问题</h2><p>之前几天后台不能发送邮件通知，查看日志显示”因流控原因，通过定时任务唤醒体验版实例失败，建议升级至标准版云引擎实例避免休眠”，相信大家会碰到这样的问题。</p><p>因为好多都是同一时间用定时任务触发容器运行，leancloud服务器不堪重负。</p><p>多得理论性知识可直接查看小康大佬的<a href="https://www.antmoe.com/posts/ff6aef7b/index.html">这篇帖子</a>。下面只讲方法：</p><h3 id="解决方法之GitHub-Actions大法"><a href="#解决方法之GitHub-Actions大法" class="headerlink" title="解决方法之GitHub+Actions大法"></a>解决方法之GitHub+Actions大法</h3><h4 id="新建一个Token"><a href="#新建一个Token" class="headerlink" title="新建一个Token"></a>新建一个Token</h4><p>方法之前教程有写很详细，<a href="https://www.heson10.com/posts/57815.html#GitHub">点这里</a>。不过这里用到的权限很少。勾上：</p><ul><li>repo    </li><li>admin:repo_hook</li><li>worflow</li></ul><article class="message warning"><div class="message_body"><p><strong>TOKEN名字请务必使用</strong><code>GITHUB_TOKEN</code></p></div></article><h4 id="Fork项目地址"><a href="#Fork项目地址" class="headerlink" title="Fork项目地址"></a>Fork项目地址</h4><p>地址： <a href="https://github.com/blogimg/WakeLeanCloud">https://github.com/blogimg/WakeLeanCloud</a></p><p>进入后点击右上角的 fork，这样会fork到自己的账户下。</p><p><img src="https://picup.heson10.com/img/image-20200816183305383.png" alt="image-20200816183305383"></p><h4 id="配置唤醒项目"><a href="#配置唤醒项目" class="headerlink" title="配置唤醒项目"></a>配置唤醒项目</h4><p>在自己fork的仓库下，进入Secrets ，设置SITE变量</p><p><img src="https://picup.heson10.com/img/image-20200816183547131.png" alt="image-20200816183547131"></p><p>填评论后台的地址，这个leancloud国内版本是自己域名绑定的后台地址。我的是<a href="https://leancloud.heson10.com/">https://leancloud.heson10.com</a></p><p><img src="https://picup.heson10.com/img/image-20200816183822992.png" alt="image-20200816183822992"></p><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>接下来对自己的项目点个 star 就能启动了，启动后请切换到 actions，看看是否运行成功。</p><p><img src="https://picup.heson10.com/img/image-20200816183913657.png" alt="image-20200816183913657"></p><p>在actions选项，可以看是否唤醒成功。</p><p><img src="https://picup.heson10.com/img/image-20200816183958108.png" alt="image-20200816183958108"></p><p>如果你的 GitHub 从来没有用过 actions，那么需要先 “了解”。方法很简单，点击绿色的按钮即可。</p><p><img src="https://picup.heson10.com/img/image-20200816184035113.png" alt="image-20200816184035113"></p><p>然后再取消star，再点击一次就可以看到了。</p><details cyan open><summary> <p>参考文档</p> </summary>              <div class='content'>              <div class='checkbox green checked'><input type="radio" checked="checked"/>            <p>1.Valine官方文档：<a href="https://valine.js.org/">https://valine.js.org/</a></p>            </div><div class='checkbox red checked'><input type="radio" checked="checked"/>            <p>2.懒人大佬：<a href="https://blog.hclonely.com/posts/409d3090/">https://blog.hclonely.com/posts/409d3090/</a></p>            </div><div class='checkbox yellow checked'><input type="radio" checked="checked"/>            <p>3.小康博客：<a href="https://www.antmoe.com/posts/2380732b/index.html">https://www.antmoe.com/posts/2380732b/index.html</a></p>            </div>              </div>            </details>]]></content>
    
    
    <summary type="html">&lt;article class=&quot;message moren&quot;&gt;&lt;div class=&quot;message_body&quot;&gt;&lt;p&gt;用Hexo博客的小伙伴们对于Valine并不陌生，这款快速、简洁且高效的无后端评论系统，既能快速加载又能提供文章阅读统计，加上一些魔改，可以增加微信与QQ提醒、后台管理、垃圾评论过滤，可以说非常好用。本文主要是介绍配置Valine和可能会遇到的问题【合集】，很多都是搬运过来的教程，文后会附上参考资料。在此感谢这些大佬的参考教程。&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://www.heson10.com/categories/hexo/"/>
    
    
    <category term="valine" scheme="https://www.heson10.com/tags/valine/"/>
    
    <category term="评论" scheme="https://www.heson10.com/tags/%E8%AF%84%E8%AE%BA/"/>
    
    <category term="合集" scheme="https://www.heson10.com/tags/%E5%90%88%E9%9B%86/"/>
    
    <category term="配置" scheme="https://www.heson10.com/tags/%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客访问速度优化：又拍云CDN</title>
    <link href="https://www.heson10.com/posts/30982.html"/>
    <id>https://www.heson10.com/posts/30982.html</id>
    <published>2020-08-13T15:10:20.000Z</published>
    <updated>2020-09-21T05:17:10.194Z</updated>
    
    <content type="html"><![CDATA[<article class="message moren"><div class="message_body"><p>,为了追求极致的博客访问速度，还是决定把博客挂上又拍云CDN，之前已经申请了又拍云联盟，每个月送15GB的CDN流量，关键还是HTTPS的。访问速度已经在17CE测试过了，全国绿油油的一片，简直不能太香😂</p></div></article><a id="more"></a><p><img src="https://picup.heson10.com/img/20200813232438.png"></p><h2 id="注册又拍云"><a href="#注册又拍云" class="headerlink" title="注册又拍云"></a>注册又拍云</h2><p>1.注册又拍云：<span class='btn'><a class="button" href='https://console.upyun.com/register/?invite=BkHDGCzMw' title='点我注册'><i class='fas fa-download'></i>点我注册</a></span></p><p>2.加入又拍云联盟：<a href="https://www.upyun.com/league">https://www.upyun.com/league</a>   点击申请</p><p>3.在网站底部footer处加上又拍云LOGO。<span class='btn'><a class="button" href='https://www.upyun.com/static/upyun_logos.zip' title='又拍云LOGO下载'><i class='fas fa-download'></i>又拍云LOGO下载</a></span><br>4.耐心等待审核成功通知。</p><h2 id="创建CDN服务"><a href="#创建CDN服务" class="headerlink" title="创建CDN服务"></a>创建CDN服务</h2><ul><li>在又拍云上创建一个CDN服务，设置如下图：</li></ul><p><img src="https://picup.heson10.com/img/20200813234224.png"></p><ul><li>记住又拍云提供的CNAME地址，去域名提供商解析到加速域名（我的是<a href="http://www.heson10.com/">www.heson10.com</a> ）</li></ul><p><img src="https://picup.heson10.com/img/image-20200813234602731.png" alt="image-20200813234602731"></p><h2 id="Coding上的设置"><a href="#Coding上的设置" class="headerlink" title="Coding上的设置"></a>Coding上的设置</h2><p>先解绑域名，取消强制https，待又拍云CDN挂上HTTPS后在绑定</p><p><img src="https://picup.heson10.com/img/image-20200813235703994.png" alt="image-20200813235703994"></p><h2 id="Github上的设置"><a href="#Github上的设置" class="headerlink" title="Github上的设置"></a>Github上的设置</h2><p>同样，github上也要取消强制HTTPS</p><p><img src="https://picup.heson10.com/img/image-20200813235808288.png" alt="image-20200813235808288"></p><h2 id="又拍云CDN配置"><a href="#又拍云CDN配置" class="headerlink" title="又拍云CDN配置"></a>又拍云CDN配置</h2><ul><li><p>配置SSL（HTTPS）</p><p>1.进入HTTPS设置</p><p><img src="https://picup.heson10.com/img/image-20200814000448667.png" alt="image-20200814000448667"></p><p>2.申请一个免费SSL证书，推荐免费的Let’s Encryppt 的证书</p><p><img src="https://picup.heson10.com/img/image-20200814000338674.png" alt="image-20200814000338674"></p><p>3.开启HTTPS</p><p><img src="https://picup.heson10.com/img/image-20200814000528966.png" alt="image-20200814000528966"></p></li><li><p>优化配置</p><ul><li>开启 Gzip 和 Brotli，压缩级别调到3</li><li>开启页面压缩</li><li>HTTP 302 调度</li><li>开启TLS1.3，最低建议TLSv1.1</li><li>开启 HTTP/2 + Server Push</li><li>WebP 自适应</li><li>开启源站资源迁移</li></ul></li></ul><article class="message moren"><div class="message_body"><p>sucess ,这样设置后更快！上效果图——又拍云CDN加速效果</p></div></article><p> <img src="https://picup.heson10.com/img/image-20200814235054951.png" alt="image-20200814235054951"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>至此，又拍云CDN就弄好了，加速很明显。遇到问题，请在下方回复。码字不易请多多支持！</p><h2 id="更新问题"><a href="#更新问题" class="headerlink" title="更新问题"></a>更新问题</h2><p>8月16日更新：</p><p>Q:开启了源站资源迁移功能，修改博客css等样式文件，长时间不刷新。</p><p>A:开启源站资源迁移功能后，会把CSS 、js等文件迁移到又拍云云存储。要在对应的云存储中，使用 FTP 或者文件管理，删除或上传最新的CSS 、js样式脚本。</p><p>8月26日更新：</p><p>为防止恶意攻击，经群友提醒，建议开启ip限制和cc防护。</p><h3 id="1-IP访问限制："><a href="#1-IP访问限制：" class="headerlink" title="1.IP访问限制："></a>1.IP访问限制：</h3><p><img src="https://picup.heson10.com/img/image-20200826104652023.png" alt="image-20200826104652023"></p><h3 id="2-CC防护"><a href="#2-CC防护" class="headerlink" title="2.CC防护"></a>2.CC防护</h3><p><img src="https://picup.heson10.com/img/image-20200826104833875.png" alt="image-20200826104833875"></p>]]></content>
    
    
    <summary type="html">&lt;article class=&quot;message moren&quot;&gt;&lt;div class=&quot;message_body&quot;&gt;&lt;p&gt;,为了追求极致的博客访问速度，还是决定把博客挂上又拍云CDN，之前已经申请了又拍云联盟，每个月送15GB的CDN流量，关键还是HTTPS的。访问速度已经在17CE测试过了，全国绿油油的一片，简直不能太香😂&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://www.heson10.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://www.heson10.com/tags/hexo/"/>
    
    <category term="CDN" scheme="https://www.heson10.com/tags/CDN/"/>
    
    <category term="又拍云" scheme="https://www.heson10.com/tags/%E5%8F%88%E6%8B%8D%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>在腾讯云服务器上搭建WordPress博客</title>
    <link href="https://www.heson10.com/posts/44528.html"/>
    <id>https://www.heson10.com/posts/44528.html</id>
    <published>2020-08-12T01:55:11.000Z</published>
    <updated>2020-08-13T14:50:19.939Z</updated>
    
    <content type="html"><![CDATA[<article class="message moren"><div class="message_body"><p>,准备做个WordPress主题演示站点，后期更新制作的主题会在此演示，准备找个便宜的云服务器作为载体。看到腾讯新用户有活动（99元/年），果断购入。开始搭建Wordpress博客。此篇文章就是边搭边写而来的。</p></div></article><a id="more"></a><h2 id="整体思路"><a href="#整体思路" class="headerlink" title="整体思路"></a>整体思路</h2><ul><li>购买云服务器</li><li>SSH登陆，使用宝塔面板创建运行环境</li><li>搭建WordPress</li></ul><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="登入腾讯云"><a href="#登入腾讯云" class="headerlink" title="登入腾讯云"></a>登入腾讯云</h3><p>登陆后可以看到已经购买的实例，推荐买Linux版的实例，方便操作：</p><p><img src="https://pic.heson10.com/img/image-20200812101234343.png" alt="image-20200812101234343"></p><h3 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h3><p>开始创建的随机密码太难记了，重新创建一个自己记得住的密码：</p><p><img src="https://pic.heson10.com/img/image-20200812101337246.png" alt="image-20200812101337246"></p><h3 id="登陆SSH终端"><a href="#登陆SSH终端" class="headerlink" title="登陆SSH终端"></a>登陆SSH终端</h3><p>点击登陆按钮，输入刚才自己设置的密码，进入SSH终端</p><p><img src="https://pic.heson10.com/img/image-20200812101829186.png" alt="image-20200812101829186"></p><h3 id="创建宝塔面板"><a href="#创建宝塔面板" class="headerlink" title="创建宝塔面板"></a>创建宝塔面板</h3><ul><li><p>宝塔官网：<a href="https://www.bt.cn/">https://www.bt.cn/</a></p></li><li><p>点击 <code>Linux版</code> 按钮，点击立即安装，会出现<a href="https://www.bt.cn/bbs/thread-19376-1-1.html">安装教程</a>，找到Centos<strong>（购买的时候会选择此系统）</strong>安装命令</p></li><li><p>在终端输入安装代码（<strong>右键→粘贴</strong>），然后回车：</p><pre><code class="shell">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</code></pre><p><img src="https://pic.heson10.com/img/ssh.gif" alt="ssh"></p></li><li><p>等待安装完毕，记住登陆网址、用户名和密码（下图红色部分）</p><p><img src="https://pic.heson10.com/img/image-20200812102623568.png" alt="image-20200812102623568"></p></li></ul><h3 id="登陆宝塔面板"><a href="#登陆宝塔面板" class="headerlink" title="登陆宝塔面板"></a>登陆宝塔面板</h3><ul><li><p>在浏览器里输入 <code>外网面板地址</code> ，然后输入<code>用户名</code>和<code>密码</code></p></li><li><p>登陆后直接安装LNMP环境：</p><p><img src="https://pic.heson10.com/img/image-20200812102931833.png" alt="image-20200812102931833"></p></li><li><p>在等待安装的过程中，在左侧→面板设置栏目里面，修改<strong>登陆地址、用户名和密码</strong>，方便自己记录</p><p><img src="https://pic.heson10.com/img/image-20200812103217643.png" alt="image-20200812103217643"></p></li></ul><h3 id="获取WordPress"><a href="#获取WordPress" class="headerlink" title="获取WordPress"></a>获取WordPress</h3><p>中文官方下载地址：<a href="https://cn.wordpress.org/download/">https://cn.wordpress.org/download/</a></p><p>我下载的是：<strong>WordPress 5.4.2</strong> 版本</p><p><img src="https://pic.heson10.com/img/image-20200812103544039.png" alt="image-20200812103544039"></p><p>下载后解压缩，找到解压缩后的文件夹。</p><h3 id="添加一个网站"><a href="#添加一个网站" class="headerlink" title="添加一个网站"></a>添加一个网站</h3><ul><li><p>在域名解析商那，把你自己的域名解析到面板左上角那个IP地址上</p></li><li><p>点击面板左侧<strong>网站</strong>→<strong>添加站点</strong></p><p><img src="https://pic.heson10.com/img/image-20200812110853838.png" alt="image-20200812110853838"></p></li><li><p>生成网站完毕</p></li></ul><h3 id="搭建WordPress"><a href="#搭建WordPress" class="headerlink" title="搭建WordPress"></a>搭建WordPress</h3><ul><li><p>点击刚才生成的网站</p></li><li><p>点击上传</p></li><li><p>把wordpress程序传入根目录，完成后如下图：</p><p><img src="https://pic.heson10.com/img/image-20200812112403897.png" alt="image-20200812112403897"></p><p>可以先把wp博客文件压缩之后，上传压缩包，然后在面板解压</p><p><strong>注意：</strong>完成后一定和我上图的文件目录要一致，很多新手会出现根目录一个wordpress的文件夹，里面才是我这个文件，如果这样的话，访问地址就会变成：<strong>http://绑定域名/wordpress</strong></p></li></ul><h3 id="WordPress在线安装"><a href="#WordPress在线安装" class="headerlink" title="WordPress在线安装"></a>WordPress在线安装</h3><ul><li><p>浏览器输入： http://绑定的域名/  就出现WordPress在线安装程序，选择简体中文→继续→现在就开始！</p></li><li><p>输入数据库配置信息</p><ul><li>面板上的信息：</li></ul><p><img src="https://pic.heson10.com/img/image-20200812113235771.png" alt="image-20200812113235771"></p><ul><li><p>我输入的信息：</p><p><img src="https://pic.heson10.com/img/image-20200812113344494.png" alt="image-20200812113344494"></p></li></ul></li><li><p>完成后设置：站点标题、用户名、密码等信息→安装</p></li></ul><article class="message success"><div class="message_body"><p>又一个wordpress站点诞生了！</p></div></article><article class="message info"><div class="message_body"><p>腾讯云下的绑定的域名需要备案才能访问！</p></div></article><p class='p red large'>此教程适合零基础的新手，不一定是腾讯云，阿里云、百度云，只要是云服务器都适用，码字不易，喜欢的请留言支持一下。</p>]]></content>
    
    
    <summary type="html">&lt;article class=&quot;message moren&quot;&gt;&lt;div class=&quot;message_body&quot;&gt;&lt;p&gt;,准备做个WordPress主题演示站点，后期更新制作的主题会在此演示，准备找个便宜的云服务器作为载体。看到腾讯新用户有活动（99元/年），果断购入。开始搭建Wordpress博客。此篇文章就是边搭边写而来的。&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;</summary>
    
    
    
    <category term="WordPress" scheme="https://www.heson10.com/categories/WordPress/"/>
    
    
    <category term="搭建" scheme="https://www.heson10.com/tags/%E6%90%AD%E5%BB%BA/"/>
    
    <category term="博客" scheme="https://www.heson10.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="WordPress" scheme="https://www.heson10.com/tags/WordPress/"/>
    
    <category term="云服务器" scheme="https://www.heson10.com/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hexo在coding上持续集成</title>
    <link href="https://www.heson10.com/posts/27150.html"/>
    <id>https://www.heson10.com/posts/27150.html</id>
    <published>2020-08-09T15:58:28.000Z</published>
    <updated>2020-09-21T05:16:48.657Z</updated>
    
    <content type="html"><![CDATA[<article class="message success"><div class="message_body"><p>能看到这篇文章的时候，代表已经实现hexo在coding上的持续集成</p></div></article><a id="more"></a><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><ul><li>确保已经实现github和coding双部署</li><li>确保已经获取github令牌，<a href="/posts/57815.html#GitHub">传送门</a></li><li>确保已经获取coding令牌，<a href="/posts/57815.html#Coding-token">传送门</a></li><li>并在根目录如图配置过，<a href="/posts/57815.html#%E4%BF%AE%E6%94%B9%E6%A0%B9%E7%9B%AE%E5%BD%95-config-yml%E6%96%87%E4%BB%B6">传送门</a></li></ul><p><img src="https://pic.heson.xyz/img/image-20200727130801522.png"></p><h2 id="coding新建博客源码仓库并上传博客源码"><a href="#coding新建博客源码仓库并上传博客源码" class="headerlink" title="coding新建博客源码仓库并上传博客源码"></a>coding新建博客源码仓库并上传博客源码</h2><ul><li>新建名字为hexoblog的私有空白仓库（不要readme.md初始化），用来存放博客源码</li></ul><p><img src="https://cdn.jsdelivr.net/gh/heson525/pic@master/pic/image-20200810104503190.png"></p><p>这个是我建立的hexoblog仓库，记住这个地址。</p><ul><li><p>找到博客源码目录：</p><p><img src="https://pic.heson.xyz/wallpapers/image-20200810104755029.png" alt="image-20200810104755029"></p></li><li><p>删除<code>.git</code>文件**(这个是隐藏文件)**后，进入git bash（一般情况主题文件里有一个.git文件也要删除，以免报错）</p></li><li><p>用<code>git init</code>初始化仓库</p></li><li><p>因为你不是第一次用git上传，所以<strong>不用</strong>设置用户名、邮箱，否则：</p><pre><code class="shell">git config --global user.email &quot;you@example.com&quot;git config --global user.name &quot;Your Name&quot;</code></pre></li><li><p>关联远程仓库</p><pre><code class="shell">git remote add origin https://令牌用户名:令牌密码@项目地址</code></pre><p>这个地方注意一下，因为是私有仓库，这里要填<strong>带令牌</strong>的https地址，coding令牌获取<a href="https://heson.xyz/posts/57815.html#Coding-token">传送门</a>，如图（<strong>绿色文字</strong>）：</p><p><img src="https://pic.heson.xyz/img/image-20200810105415871.png" alt="image-20200810105415871"></p></li><li><p><strong>分行</strong>输入一下代码：</p><pre><code class="shell">git add .     //添加目录下所有发生改变的文件git commit -m &#39;上传博客源码（随意填写）&#39;           //注释信息一定要写，方便标记git push -u origin master      //本地仓库代码提交至远程仓库</code></pre></li><li><p>上传后如图所示：</p><p><img src="https://pic.heson.xyz/img/image-20200810110715075.png" alt="image-20200810110715075"></p></li></ul><h2 id="构建持续集成"><a href="#构建持续集成" class="headerlink" title="构建持续集成"></a>构建持续集成</h2><ul><li><p>新建一个持续集成</p><p><img src="https://pic.heson.xyz/img/image-20200810111129460.png" alt="image-20200810111129460"></p><p>点最下面的自定义：</p><p><img src="https://pic.heson.xyz/img/image-20200810111154516.png" alt="image-20200810111154516"></p></li><li><p>开始新建</p><p><img src="https://pic.heson.xyz/img/image-20200810111319057.png" alt="image-20200810111319057"></p></li><li><p>填写构建代码</p><p><img src="https://pic.heson.xyz/img/image-20200810111631188.png" alt="image-20200810111631188"></p></li></ul><p>代码如下：</p><pre><code class="shell">pipeline &#123;  agent any  stages &#123;    stage(&#39;克隆项目&#39;) &#123;      steps &#123;        sh &#39;git clone https://你的令牌用户名:令牌密码@e.coding.net/hesonxyz/hexoblog/hexoblog.git（这换成博客源码地址） .&#39;        sh &#39;ls -a&#39;      &#125;    &#125;    stage(&#39;安装依赖&#39;) &#123;      steps &#123;        sh &#39;ls -a&#39;        sh &#39;npm install -g hexo-cli&#39;        sh &#39;npm install hexo --save&#39;        sh &#39;npm install&#39;      &#125;    &#125;    stage(&#39;构建发布&#39;) &#123;      steps &#123;        sh &#39;hexo clean &amp;&amp; hexo g &amp;&amp; hexo d&#39;      &#125;    &#125;  &#125;&#125;</code></pre><ul><li><p>触发规则一般是推送到<code>master</code>时触发构建，如图：</p><p><img src="https://pic.heson.xyz/img/image-20200810111911987.png" alt="image-20200810111911987"></p></li></ul><h2 id="后期使用问题"><a href="#后期使用问题" class="headerlink" title="后期使用问题"></a>后期使用问题</h2><ul><li>更新博文：</li></ul><p>1._post文件夹直接新建md文件；</p><p>2.软件（ git小乌龟）推送至仓库，触发自动构建。</p><p><strong>（稍后详细介绍）</strong></p><ul><li>固定链接问题</li></ul><p>因为使用过hexo-abbrlink插件，部署之后如果要修改md文件，记得要在抬头加上abbrlink的值</p><p><img src="https://pic.heson.xyz/img/image-20200810112504260.png" alt="image-20200810112504260"></p>]]></content>
    
    
    <summary type="html">&lt;article class=&quot;message success&quot;&gt;&lt;div class=&quot;message_body&quot;&gt;&lt;p&gt;能看到这篇文章的时候，代表已经实现hexo在coding上的持续集成&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://www.heson10.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://www.heson10.com/tags/hexo/"/>
    
    <category term="部署" scheme="https://www.heson10.com/tags/%E9%83%A8%E7%BD%B2/"/>
    
    <category term="持续集成" scheme="https://www.heson10.com/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
    <category term="coding" scheme="https://www.heson10.com/tags/coding/"/>
    
  </entry>
  
  <entry>
    <title>Vercel+Github+Coding三线部署HEXO,提升访问速度</title>
    <link href="https://www.heson10.com/posts/38770.html"/>
    <id>https://www.heson10.com/posts/38770.html</id>
    <published>2020-08-07T09:34:51.000Z</published>
    <updated>2020-09-04T15:21:41.808Z</updated>
    
    <content type="html"><![CDATA[<article class="message "><div class="message_body"><p>之前已经用github+coding双线部署过博客：<a href="https://www.heson10.com/posts/54971.html">传送门</a>。因为我一直用的联通，访问coding还是挺快的，知道有些移动宽带的网友反应博客打不开。我才意识到，coding对移动不太友好。这两天刚好看到colsrch那有一篇关于使用vercel的<a href="https://colsrch.top/posts/56951997/index.html">文章</a>，便在此做下记录！</p></div></article><a id="more"></a><article class="message success"><div class="message_body"><p>1.用github账号注册vercel</p></div></article><article class="message success"><div class="message_body"><p>2.克隆github的public仓库</p></div></article><article class="message success"><div class="message_body"><p>3.域名解析默认和移动线路到vercel提供的ip地址，联通线路cname到coding，境外就直接github</p></div></article><article class="message warning"><div class="message_body"><p>注意不要用qq邮箱，要不然注册不了vercel，换个163或者gmail都行！！！</p></div></article><p>vercel配置完毕：<br><img src="https://cdn.jsdelivr.net/gh/heson525/pic@master/pic/20200807175232.png"></p><p>未配置vercel前双线部署测速：</p><p><img src="https://cdn.jsdelivr.net/gh/heson525/pic@master/pic/Snipaste_2020-08-05_20-33-51.png" alt="Snipaste_2020-08-05_20-33-51"></p><p>配置后三线部署测速：</p><p><img src="https://cdn.jsdelivr.net/gh/heson525/pic@master/pic/Snipaste_2020-08-05_20-34-12223.png"></p><article class="message success"><div class="message_body"><p>现在还有更猛的又拍云CDN提升访问速度，你确定不来看一下？<a href="/posts/30982.html">传送门</a></p></div></article>]]></content>
    
    
    <summary type="html">&lt;article class=&quot;message &quot;&gt;&lt;div class=&quot;message_body&quot;&gt;&lt;p&gt;之前已经用github+coding双线部署过博客：&lt;a href=&quot;https://www.heson10.com/posts/54971.html&quot;&gt;传送门&lt;/a&gt;。因为我一直用的联通，访问coding还是挺快的，知道有些移动宽带的网友反应博客打不开。我才意识到，coding对移动不太友好。这两天刚好看到colsrch那有一篇关于使用vercel的&lt;a href=&quot;https://colsrch.top/posts/56951997/index.html&quot;&gt;文章&lt;/a&gt;，便在此做下记录！&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://www.heson10.com/categories/hexo/"/>
    
    
    <category term="CDN" scheme="https://www.heson10.com/tags/CDN/"/>
    
    <category term="vercel" scheme="https://www.heson10.com/tags/vercel/"/>
    
    <category term="加速" scheme="https://www.heson10.com/tags/%E5%8A%A0%E9%80%9F/"/>
    
  </entry>
  
  <entry>
    <title>jsDelivr CDN加速Github仓库图片做博客图床</title>
    <link href="https://www.heson10.com/posts/18256.html"/>
    <id>https://www.heson10.com/posts/18256.html</id>
    <published>2020-08-05T01:54:19.000Z</published>
    <updated>2020-08-13T15:01:48.530Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>黑石博客之前已经用七牛云作为博客图床，速度加载都挺快。那为什么还要整一个Github图床呢？</p><p>因为免费啊，放博客里面经常加载的<strong>背景图片</strong>、<strong>头像</strong>什么的，不香吗？：）</p><p>jsDelivr 是国外的一家优秀的公共 CDN 服务提供商，也是首个「打通中国大陆（网宿公司运营）与海外的免费 CDN 服务」。jsDelivr 有一个十分好用的功能——<strong>它可以加速 Github 仓库的文件</strong>。我们可以借此搭建一个免费、全球访问速度超快的图床。</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h3><p>整个过程比较简单，创建 Github 仓库，并获取 token，填入 PicGo 配置即可完成。</p><ul><li><p>使用 jsDelivr 加速静态文件访问，能够优化博客体验。</p></li><li><p>在 Github 存储图片，利于博主对于图片的掌控。</p></li><li><p>使用 PicGo 的原因是因为能够方便地将上传图片到 Github，并直接获取 jsDelivr 的加速后的图片地址。</p></li></ul><h3 id="获取Github-Token"><a href="#获取Github-Token" class="headerlink" title="获取Github Token"></a>获取Github Token</h3><p>  之前讲利用cloud studio进行云部署的时候已经说过，详见：<a href="https://www.heson10.com/posts/57815.html#GitHub">https://www.heson10.com/posts/57815.html#GitHub</a></p><p>这个地方需要说明的是，图床token权限不用那么多，只用这几个：</p><p><img src="https://pic.heson10.com/wallpapers/image-20200805100920362.png" alt="image-20200805100920362"></p><h3 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h3><p>进入Github，点击右上角➕号</p><p><img src="https://pic.heson10.com/wallpapers/image-20200805100610984.png" alt="image-20200805100610984"></p><p>  名字我填的是pic，并使用readme.md初始化仓库，建立后仓库如图所示：</p><p><img src="https://pic.heson10.com/wallpapers/image-20200805100722905.png" alt="image-20200805100722905"></p><h3 id="Picgo配置"><a href="#Picgo配置" class="headerlink" title="Picgo配置"></a>Picgo配置</h3><p>下载安装就不讲了，详见<a href="https://heson.xyz/posts/38720.html#%E5%AE%89%E8%A3%85PICGO">https://www.heson10.com/posts/38720.html#安装PICGO</a></p><p>Github图床配置如下：</p><p><img src="https://cdn.jsdelivr.net/gh/heson525/pic@master/img/image-20200805101628375.png" alt="image-20200805101628375"></p><h3 id="关于自定义域名填写"><a href="#关于自定义域名填写" class="headerlink" title="关于自定义域名填写"></a>关于自定义域名填写</h3><p>我的设定是：</p><pre><code class="html">https://cdn.jsdelivr.net/gh/heson525/pic@master</code></pre><p>换成自己的写法：</p><pre><code class="html">https://cdn.jsdelivr.net/gh/用户名/仓库名@master</code></pre><p>这样就可以了。配置完成后，进行测试。</p><p><img src="https://pic.heson10.com/wallpapers/6.gif" alt="6"></p><p>完成！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;黑石博客之前已经用七牛云作为博客图床，速度加载都挺快。那为什么还要整一个Github图床呢？&lt;/p&gt;
&lt;p&gt;因为免费啊，放博客里面经常加载的</summary>
      
    
    
    
    <category term="hexo" scheme="https://www.heson10.com/categories/hexo/"/>
    
    
    <category term="jsDelivr" scheme="https://www.heson10.com/tags/jsDelivr/"/>
    
    <category term="Github" scheme="https://www.heson10.com/tags/Github/"/>
    
    <category term="CDN" scheme="https://www.heson10.com/tags/CDN/"/>
    
    <category term="图床" scheme="https://www.heson10.com/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>SEO优化：Hexo-abbrlink插件生成永久固定链接</title>
    <link href="https://www.heson10.com/posts/31426.html"/>
    <id>https://www.heson10.com/posts/31426.html</id>
    <published>2020-08-01T16:49:02.000Z</published>
    <updated>2020-08-13T15:00:02.526Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Hexo默认的静态URL格式是 <code>:year/:month/:day/:title</code>，也就是按照年、月、日、标题来生成固定链接的。如<code>http://xxx.yy.com/2020/07/06/hello-world</code></p><p>这种默认配置的缺点就是一般文件名是中文，导致url链接里有中文出现，这会造成很多问题，也不利于seo，另外就是年月日都会有分隔符。<a id="more"></a></p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><article class="message moren"><div class="message_body"><p>info,百度蜘蛛抓取网页的规则: 对于蜘蛛说网页权重越高、信用度越高抓取越频繁，例如网站的首页和内页。蜘蛛先抓取网站的首页，因为首页权重更高，并且大部分的链接都是指向首页。然后通过首页抓取网站的内页，并不是所有内页蜘蛛都会去抓取。</p></div></article><article class="message moren"><div class="message_body"><p>success,搜索引擎认为对于一般的中小型站点，3层足够承受所有的内容了，所以蜘蛛经常抓取的内容是前三层，而超过三层的内容蜘蛛认为那些内容并不重要，所以不经常爬取。出于这个原因所以permalink后面跟着的最好不要超过2个斜杠。</p></div></article><p>使用 hexo-abbrlink 插件可以完美解决，具体使用方法如下：</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><ul><li>安装npm包：</li></ul><pre><code class="shell">  npm install hexo-abbrlink --save</code></pre><ul><li>修改<code>_config.yml</code>文件中的配置项（记得把原来的<code>permalink:</code>删除掉）:</li></ul><pre><code class="shell">#设置永久链接permalink: posts/:abbrlink.html  # 此处可以自己设置，也可以直接使用 :/abbrlinkabbrlink:    alg: crc16   #算法： crc16(default) and crc32    rep: dec     #进制： dec(default) and hex</code></pre><h2 id="关于插件设置"><a href="#关于插件设置" class="headerlink" title="关于插件设置"></a>关于插件设置</h2><p>Abbrlink插件拥有两项设置选项:</p><ul><li><code>alg</code>: 算法(目前支持<code>crc16</code>和<code>crc32</code>算法，默认值是<code>crc16</code>)</li><li><code>rep</code>: 形式(生成的链接可以是十六进制格式也可以是十进制格式，默认值是十进制格式)</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><pre><code class="html">crc16 &amp; hexhttps://www.heson10.com/posts/55c6.htmlcrc16 &amp; dechttps://www.heson10.com/posts/43212.htmlcrc32 &amp; hexhttps://www.heson10.com/posts/6ec16a2c.htmlcrc32 &amp; dechttps://www.heson10.com/posts/1521457752.html</code></pre><article class="message moren"><div class="message_body"><p>danger,注意在生成之前就要改好算法和形式。不然后面再改的话会导致链接不统一。我就踩过坑，但后来是一个文章一个文章删除<code>abbrlink:</code>的值才改过来的，还好我文章不是很多。</p></div></article><p>话说最近看到了Hexo-abbrlink2这个插件，可以从1.html开始编。</p><p>我试用了一下，会导致文章重复，正在研究如何解决。如果能从1开始编写的话，这样更容易看得出写了多少篇文章，当前上传和修改的是哪一篇。后面再研究。</p><p>PS：刚使用这个插件后，阅读人数和评论都会变为0，介意慎用！综上所述，这插件适合新站！</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Hexo默认的静态URL格式是 &lt;code&gt;:year/:month/:day/:title&lt;/code&gt;，也就是按照年、月、日、标题来生成固定链接的。如&lt;code&gt;http://xxx.yy.com/2020/07/06/hello-world&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这种默认配置的缺点就是一般文件名是中文，导致url链接里有中文出现，这会造成很多问题，也不利于seo，另外就是年月日都会有分隔符。</summary>
    
    
    
    <category term="hexo" scheme="https://www.heson10.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://www.heson10.com/tags/hexo/"/>
    
    <category term="SEO" scheme="https://www.heson10.com/tags/SEO/"/>
    
    <category term="插件" scheme="https://www.heson10.com/tags/%E6%8F%92%E4%BB%B6/"/>
    
    <category term="链接" scheme="https://www.heson10.com/tags/%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>Next7.8主题更换思源宋体</title>
    <link href="https://www.heson10.com/posts/19246.html"/>
    <id>https://www.heson10.com/posts/19246.html</id>
    <published>2020-08-01T01:39:33.000Z</published>
    <updated>2020-08-16T15:19:03.442Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://pic.heson10.com/img/image-20200801094412407.png" alt="image-20200801094412407"></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>Google Fonts在2018年12月7日支持思源宋体。<strong>这是一款适合长时间阅读的字体。</strong></p><p>国内的网络对 Google 的域名并不友好，建议将<code>fonts.googleapis.com</code>修改为<a href="https://sb.sb/blog/css-cdn/">烧饼博客</a>提供的镜像<code>fonts.loli.net</code><a id="more"></a>&gt;</p><h3 id="Next7-8主题配置文件-config-yml"><a href="#Next7-8主题配置文件-config-yml" class="headerlink" title="Next7.8主题配置文件_config.yml"></a>Next7.8主题配置文件<code>_config.yml</code></h3><pre><code class="yaml">font:  enable: true  # Uri of fonts host, e.g. https://fonts.googleapis.com (Default).  # 使用烧饼博客的CDN  host: https://fonts.loli.net  # Font options:  # `external: true` will load this font family from `host` above.  # `family: Times New Roman`. Without any quotes.  # `size: x.x`. Use `em` as unit. Default: 1 (16px)  # Global font settings used for all elements inside &lt;body&gt;.  # 全局字体设置  global:    external: true    #family: EB Garamond    family: Noto Serif SC    size: 0.9  # Font settings for site title (.site-title).  # .site-title 站点标题字体设置  title:    external: true    family: Lobster Two    size:  # Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).  # 文章标题字体设置  headings:    external: true    #family: Roboto Slab    family: EB Garamond    size:  # Font settings for posts (.post-body).  # 文章页面字体设置  posts:    external: true    #family: Roboto Slab  # Font settings for &lt;code&gt; and code blocks.  # 代码块字体设置  codes:    external: true    family: Source Code Pro</code></pre><p>改为我上面的配置就可以了。解释说明已经在上方注释，按需修改。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://pic.heson10.com/img/image-20200801094412407.png&quot; alt=&quot;image-20200801094412407&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;p&gt;Google Fonts在2018年12月7日支持思源宋体。&lt;strong&gt;这是一款适合长时间阅读的字体。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;国内的网络对 Google 的域名并不友好，建议将&lt;code&gt;fonts.googleapis.com&lt;/code&gt;修改为&lt;a href=&quot;https://sb.sb/blog/css-cdn/&quot;&gt;烧饼博客&lt;/a&gt;提供的镜像&lt;code&gt;fonts.loli.net&lt;/code&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://www.heson10.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://www.heson10.com/tags/hexo/"/>
    
    <category term="字体" scheme="https://www.heson10.com/tags/%E5%AD%97%E4%BD%93/"/>
    
    <category term="next" scheme="https://www.heson10.com/tags/next/"/>
    
    <category term="美化" scheme="https://www.heson10.com/tags/%E7%BE%8E%E5%8C%96/"/>
    
    <category term="更换" scheme="https://www.heson10.com/tags/%E6%9B%B4%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>hexo删除algolia搜索增加本地搜索功能</title>
    <link href="https://www.heson10.com/posts/2635.html"/>
    <id>https://www.heson10.com/posts/2635.html</id>
    <published>2020-07-29T15:43:22.000Z</published>
    <updated>2020-08-13T14:57:38.415Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>之前博客里面用的是algolia第三方搜索功能，后来发现有几个问题：一是js加载时间特别慢；二是每次增加文章都要重新提交一下如下代码：</p><pre><code class="shell">export HEXO_ALGOLIA_INDEXING_KEY=your apiKeyhexo algolia</code></pre><p>这个就是最不能忍的原因。于是准备换上local search（本地搜索服务）。<a id="more"></a></p><p>本地搜索很快，效果如下：</p><p><img src="https://pic.heson10.com/img/3.gif" alt="3"></p><h1 id="关闭Algolia搜索服务"><a href="#关闭Algolia搜索服务" class="headerlink" title="关闭Algolia搜索服务"></a>关闭Algolia搜索服务</h1><ul><li>在站点配置文件中，注释掉原有的algolia：</li></ul><p><img src="https://pic.heson10.com/img/image-20200729234949308.png" alt="image-20200729234949308"></p><ul><li><p>在主题配置文件中，关闭algolia服务：</p><p><img src="https://pic.heson10.com/img/image-20200729235202286.png" alt="image-20200729235202286"></p></li><li><p>卸载algolia插件：</p><pre><code class="shell">npm uninstall hexo-algolia</code></pre></li></ul><h1 id="增加Local-Search本地搜索服务"><a href="#增加Local-Search本地搜索服务" class="headerlink" title="增加Local Search本地搜索服务"></a>增加Local Search本地搜索服务</h1><ul><li><p>安装插件：</p><pre><code class="shell">npm install hexo-generator-searchdb --save</code></pre></li></ul><ul><li><p>在站点配置文件_config.yml`中添加:</p><pre><code class="shell">search:  path: search.xml  field: post  format: html  limit: 10000</code></pre></li><li><p>在主题配置文件<code>_config.yml</code>中启用：</p><p><img src="https://pic.heson10.com/img/image-20200729235439142.png" alt="image-20200729235439142"></p></li><li><p>最后记得hexo三连，如果直接hexo g -d的话，搜索关键字不会变红</p><pre><code class="shell">hexo cl &amp; hexo g &amp; hexo d</code></pre><p>哦不对，一键三连是这样的：</p><pre><code class="shell">hexo clean &amp;&amp; hexo g -d</code></pre></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;之前博客里面用的是algolia第三方搜索功能，后来发现有几个问题：一是js加载时间特别慢；二是每次增加文章都要重新提交一下如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;export HEXO_ALGOLIA_INDEXING_KEY=your apiKey
hexo algolia&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个就是最不能忍的原因。于是准备换上local search（本地搜索服务）。</summary>
    
    
    
    <category term="hexo" scheme="https://www.heson10.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://www.heson10.com/tags/hexo/"/>
    
    <category term="algolia" scheme="https://www.heson10.com/tags/algolia/"/>
    
    <category term="搜索" scheme="https://www.heson10.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
    <category term="本地" scheme="https://www.heson10.com/tags/%E6%9C%AC%E5%9C%B0/"/>
    
  </entry>
  
  <entry>
    <title>帮助网友搭建WORDPRESS博客</title>
    <link href="https://www.heson10.com/posts/8045.html"/>
    <id>https://www.heson10.com/posts/8045.html</id>
    <published>2020-07-29T05:14:29.000Z</published>
    <updated>2020-08-13T14:51:04.517Z</updated>
    
    <content type="html"><![CDATA[<p>前些天加了一个WordPress的博客群，在里面帮助一些萌新小白网友解答一些关于网站建设方面的问题，中途有几个网友加了我的微信。<br>        今天呢，有个网友在搭建wp的过程中遇到了一些问题（域名访问不了，wp无法安装，http500错误等等），向我请教。微信教了下，发现还是把这位网友整的有点云里雾里的。我就干脆要了他阿里云的账号，直接帮他整起来了！</p><p><img src="https://pic.heson10.com/img/image-20200729132036844.png" alt="image-20200729132036844"></p><p>熟悉的界面，熟悉的配方，熟悉的感觉。</p><p>仿佛又回到了十年前，刚整wp时的那种感觉。哈哈！</p><p>搭建网站这种事，我很乐于帮助大家的，对于我来说应该算举手之劳的事情！</p><p>结果…结果….</p><p>这位可爱的网友给我发了个红包！！！！！！！！</p><p><img src="https://pic.heson10.com/img/image-20200729132412459.png" alt="image-20200729132412459"></p><p>感谢这位网友的大红包！</p><p>其实，我想说的是，真的没必要这样，网友之间互相帮助是应该的。这些是我力所能及的事情，简简单单动了几下鼠标的事情。</p><p>古人云：三人行，必有我师焉。我有你不知道的，你也有我不知道。我们相互帮助，这样以来大家都得到了成长和进步，何乐而不为呢？</p><p><img src="https://pic.heson10.com/img/image-20200729133420218.png" alt="image-20200729133420218"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前些天加了一个WordPress的博客群，在里面帮助一些萌新小白网友解答一些关于网站建设方面的问题，中途有几个网友加了我的微信。&lt;br&gt;        今天呢，有个网友在搭建wp的过程中遇到了一些问题（域名访问不了，wp无法安装，http500错误等等），向我请教。微信教了</summary>
      
    
    
    
    <category term="WordPress" scheme="https://www.heson10.com/categories/WordPress/"/>
    
    
    <category term="搭建" scheme="https://www.heson10.com/tags/%E6%90%AD%E5%BB%BA/"/>
    
    <category term="帮助" scheme="https://www.heson10.com/tags/%E5%B8%AE%E5%8A%A9/"/>
    
    <category term="网友" scheme="https://www.heson10.com/tags/%E7%BD%91%E5%8F%8B/"/>
    
    <category term="博客" scheme="https://www.heson10.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
